### auto-generated section `build intellij.qodana` start
load("@community//build:compiler-options.bzl", "create_kotlinc_options")
load("@rules_jvm//:jvm.bzl", "jvm_library", "jvm_resources")

create_kotlinc_options(
  name = "custom_qodana",
  opt_in = [
    "kotlinx.coroutines.ExperimentalCoroutinesApi",
    "kotlin.ExperimentalStdlibApi",
  ]
)

jvm_resources(
  name = "qodana_resources",
  files = glob(["core/resources/**/*"]),
  strip_prefix = "core/resources"
)

jvm_resources(
  name = "qodana_test_resources",
  files = glob(["core/test-data/**/*"]),
  strip_prefix = "core/test-data"
)

jvm_library(
  name = "qodana",
  module_name = "intellij.qodana",
  visibility = ["//visibility:public"],
  srcs = glob(["core/src/**/*.kt", "core/src/**/*.java"], allow_empty = True),
  kotlinc_opts = ":custom_qodana",
  deps = [
    "@community//platform/analysis-api:analysis",
    "@community//platform/analysis-impl",
    "@community//platform/code-style-api:codeStyle",
    "@community//platform/util/concurrency",
    "@community//platform/core-api:core",
    "@community//platform/credential-store",
    "@community//platform/editor-ui-api:editor-ui",
    "@community//jps/model-api:model",
    "@community//platform/lang-core",
    "@community//platform/lvcs-api:lvcs",
    "@community//platform/util/diff",
    "//contrib/qodana/sarif",
    "@community//platform/lang-impl",
    "@lib//:gson",
    "@lib//:snakeyaml",
    "@lib//:snakeyaml-engine",
    "@lib//:guava",
    "@lib//:commons-cli",
    "@community//platform/diff-api:diff",
    "@ultimate_lib//:flexmark",
    "@lib//:jsoup",
    "@community//platform/core-ui",
    "@community//plugins/yaml",
    "@community//platform/external-process-auth-helper",
    "@community//json/backend",
    "@community//platform/editor-ui-ex:editor-ex",
    "@community//platform/projectModel-api:projectModel",
    "@community//platform/ide-core-impl",
    "@community//platform/util/progress",
    "@community//platform/collaboration-tools",
    "@community//platform/collaboration-tools/auth",
    "@community//platform/collaboration-tools/auth-base:collaborationTools-auth-base",
    "@community//platform/platform-util-io:ide-util-io",
    "@community//platform/built-in-server-api:builtInServer",
    "@community//platform/built-in-server:builtInServer-impl",
    "@community//plugins/git4idea:vcs-git",
    "@community//plugins/git4idea/shared",
    "@lib//:jackson",
    "@community//platform/platform-impl/concurrency",
    "@lib//:jackson-databind",
    "@community//platform/observable",
    "@lib//:jackson-module-kotlin",
    "@community//platform/platform-util-netty:ide-util-netty",
    "@lib//:kotlinx-coroutines-core",
    "@lib//:netty-codec-http",
    "@community//platform/dvcs-impl:vcs-dvcs-impl",
    "@community//platform/dvcs-impl/shared",
    "@ultimate_lib//:jline",
    "@community//platform/util/jdom",
    "@community//platform/vcs-impl",
    "@community//platform/vcs-log/impl",
    "@community//platform/vcs-log/api:vcs-log",
    "@community//platform/util",
    "@ultimate_lib//:jetbrains-qodana-publisher",
    "@lib//:netty-buffer",
    "@ultimate_lib//:jetbrains-qodana-web-ui",
    "@ultimate_lib//:jetbrains-qodana-sarif-converter",
    "@community//platform/sqlite",
    "@community//plugins/yaml/backend",
    "@community//platform/inspect",
    "@community//platform/statistics",
    "@community//platform/util/base",
    "@community//platform/vcs-api:vcs",
    "@community//platform/diagnostic/telemetry",
    "@lib//:opentelemetry",
    "@lib//:opentelemetry-semconv",
    "@lib//:fastutil-min",
    "@community//platform/platform-impl/internal",
    "@lib//:jackson-dataformat-yaml",
    "@lib//:kotlin-reflect",
    "@community//platform/util/coroutines",
    "@community//platform/backend/observation",
    "@lib//:jetbrains-annotations",
    "@community//platform/platform-impl:ide-impl",
    "@ultimate_lib//:jetbrains-qodana-cloud-kotlin-client",
    "@lib//:kotlinx-serialization-core",
    "@lib//:kotlinx-serialization-json",
    "@community//plugins/IntelliLang:langInjection",
    "@community//platform/platform-impl/ui",
    "@ultimate_lib//:jetbrains-qodana-configuration",
  ],
  runtime_deps = [":qodana_resources"]
)

jvm_library(
  name = "qodana_test_lib",
  visibility = ["//visibility:public"],
  srcs = glob(["core/tests/**/*.kt", "core/tests/**/*.java"], allow_empty = True),
  kotlinc_opts = ":custom_qodana",
  associates = [":qodana"],
  deps = [
    "@community//platform/analysis-api:analysis",
    "@community//platform/analysis-impl",
    "@community//platform/code-style-api:codeStyle",
    "@community//platform/util/concurrency",
    "@community//platform/util/concurrency:concurrency_test_lib",
    "@community//platform/core-api:core",
    "@community//platform/credential-store",
    "@community//platform/editor-ui-api:editor-ui",
    "@community//jps/model-api:model",
    "@community//platform/lang-core",
    "@community//platform/lvcs-api:lvcs",
    "@community//platform/util/diff",
    "//contrib/qodana/sarif",
    "@community//platform/lang-impl",
    "@lib//:gson",
    "@lib//:snakeyaml",
    "@lib//:snakeyaml-engine",
    "@lib//:guava",
    "@lib//:commons-cli",
    "@community//platform/diff-api:diff",
    "@ultimate_lib//:flexmark",
    "@lib//:jsoup",
    "@community//platform/core-ui",
    "@community//plugins/yaml",
    "@community//plugins/yaml:yaml_test_lib",
    "@community//platform/external-process-auth-helper",
    "@community//platform/external-process-auth-helper:external-process-auth-helper_test_lib",
    "@community//json/backend",
    "@community//platform/editor-ui-ex:editor-ex",
    "@community//platform/testFramework",
    "@community//platform/testFramework:testFramework_test_lib",
    "@community//platform/projectModel-api:projectModel",
    "@community//platform/ide-core-impl",
    "@community//platform/util/progress",
    "@community//platform/collaboration-tools",
    "@community//platform/collaboration-tools:collaboration-tools_test_lib",
    "@community//platform/collaboration-tools/auth",
    "@community//platform/collaboration-tools/auth-base:collaborationTools-auth-base",
    "@community//platform/platform-util-io:ide-util-io",
    "@community//platform/built-in-server-api:builtInServer",
    "@community//platform/built-in-server:builtInServer-impl",
    "@community//plugins/git4idea:vcs-git",
    "@community//plugins/git4idea:vcs-git_test_lib",
    "@community//plugins/git4idea/shared",
    "@lib//:jackson",
    "@community//platform/platform-impl/concurrency",
    "@lib//:jackson-databind",
    "@community//platform/observable",
    "@lib//:jackson-module-kotlin",
    "@community//platform/platform-util-netty:ide-util-netty",
    "@lib//:kotlinx-coroutines-core",
    "@lib//:netty-codec-http",
    "@lib//:assert_j",
    "@community//platform/dvcs-impl:vcs-dvcs-impl",
    "@community//platform/dvcs-impl:vcs-dvcs-impl_test_lib",
    "@community//platform/dvcs-impl/shared",
    "@ultimate_lib//:jline",
    "//contrib/qodana-test-framework:qodana-testFramework",
    "@community//platform/util/jdom",
    "@community//java/testFramework",
    "@community//platform/vcs-impl",
    "@community//platform/vcs-impl:vcs-impl_test_lib",
    "@community//platform/vcs-tests:vcs-testFramework",
    "@community//platform/vcs-log/impl",
    "@community//platform/vcs-log/impl:impl_test_lib",
    "@community//platform/vcs-log/api:vcs-log",
    "@lib//:mockito",
    "@community//platform/util",
    "@ultimate_lib//:jetbrains-qodana-publisher",
    "@lib//:netty-buffer",
    "@ultimate_lib//:jetbrains-qodana-web-ui",
    "@ultimate_lib//:jetbrains-qodana-sarif-converter",
    "@community//platform/sqlite",
    "@community//platform/sqlite:sqlite_test_lib",
    "@lib//:kotlinx-coroutines-test",
    "@community//plugins/yaml/backend",
    "@community//plugins/yaml/backend:backend_test_lib",
    "@community//platform/inspect",
    "@community//platform/inspect:inspect_test_lib",
    "@community//platform/statistics",
    "@community//platform/statistics:statistics_test_lib",
    "@community//platform/util/base",
    "@community//platform/vcs-api:vcs",
    "@community//platform/diagnostic/telemetry",
    "@community//platform/diagnostic/telemetry:telemetry_test_lib",
    "@lib//:opentelemetry",
    "@lib//:opentelemetry-semconv",
    "@community//plugins/lombok",
    "@community//plugins/lombok:lombok_test_lib",
    "@lib//:fastutil-min",
    "@community//platform/platform-impl/internal",
    "@lib//:jackson-dataformat-yaml",
    "@lib//:kotlin-reflect",
    "@community//platform/util/coroutines",
    "@community//platform/backend/observation",
    "@community//platform/backend/observation:observation_test_lib",
    "@lib//:jetbrains-annotations",
    "@community//platform/platform-impl:ide-impl",
    "@ultimate_lib//:jetbrains-qodana-cloud-kotlin-client",
    "@lib//:kotlinx-serialization-core",
    "@lib//:kotlinx-serialization-json",
    "@community//plugins/IntelliLang:langInjection",
    "@community//platform/platform-impl/ui",
    "@community//platform/statistics/testFramework",
    "@ultimate_lib//:jetbrains-qodana-configuration",
  ],
  runtime_deps = [
    ":qodana_resources",
    ":qodana_test_resources",
  ]
)
### auto-generated section `build intellij.qodana` end

### auto-generated section `test intellij.qodana` start
load("@community//build:tests-options.bzl", "jps_test")

jps_test(
  name = "qodana_test",
  runtime_deps = [":qodana_test_lib"]
)
### auto-generated section `test intellij.qodana` end