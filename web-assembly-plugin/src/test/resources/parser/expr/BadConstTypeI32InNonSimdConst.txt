WebAssembly File(0,1041)
  PsiComment(WebAssemblyToken.LINE_COMMENT)(';;; TOOL: wat2wasm')(0,18)
  PsiWhiteSpace('\n')(18,19)
  PsiComment(WebAssemblyToken.LINE_COMMENT)(';;; ERROR: 1')(19,31)
  PsiWhiteSpace('\n')(31,32)
  WebAssemblyModuleImpl(MODULE)(32,65)
    PsiElement(WebAssemblyToken.LPAR)('(')(32,33)
    PsiElement(WebAssemblyToken.MODULEKEY)('module')(33,39)
    PsiWhiteSpace(' ')(39,40)
    WebAssemblyModulefieldImpl(MODULEFIELD)(40,64)
      WebAssemblyFuncImpl(FUNC)(40,64)
        PsiElement(WebAssemblyToken.LPAR)('(')(40,41)
        PsiElement(WebAssemblyToken.FUNCKEY)('func')(41,45)
        PsiWhiteSpace(' ')(45,46)
        PsiElement(WebAssemblyToken.ICONST)('i32.const')(46,55)
        PsiWhiteSpace(' ')(55,56)
        PsiErrorElement:WebAssemblyToken.SIGNED or WebAssemblyToken.UNSIGNED expected, got 'i32'(56,59)
          PsiElement(WebAssemblyToken.NUMTYPE)('i32')(56,59)
        PsiWhiteSpace(' ')(59,60)
        PsiElement(WebAssemblyToken.UNSIGNED)('100')(60,63)
        PsiElement(WebAssemblyToken.RPAR)(')')(63,64)
    PsiElement(WebAssemblyToken.RPAR)(')')(64,65)
  PsiWhiteSpace('\n')(65,66)
  WebAssemblyModuleImpl(MODULE)(66,99)
    PsiElement(WebAssemblyToken.LPAR)('(')(66,67)
    PsiElement(WebAssemblyToken.MODULEKEY)('module')(67,73)
    PsiWhiteSpace(' ')(73,74)
    WebAssemblyModulefieldImpl(MODULEFIELD)(74,98)
      WebAssemblyFuncImpl(FUNC)(74,98)
        PsiElement(WebAssemblyToken.LPAR)('(')(74,75)
        PsiElement(WebAssemblyToken.FUNCKEY)('func')(75,79)
        PsiWhiteSpace(' ')(79,80)
        PsiElement(WebAssemblyToken.ICONST)('i64.const')(80,89)
        PsiWhiteSpace(' ')(89,90)
        PsiErrorElement:WebAssemblyToken.SIGNED or WebAssemblyToken.UNSIGNED expected, got 'i32'(90,93)
          PsiElement(WebAssemblyToken.NUMTYPE)('i32')(90,93)
        PsiWhiteSpace(' ')(93,94)
        PsiElement(WebAssemblyToken.UNSIGNED)('100')(94,97)
        PsiElement(WebAssemblyToken.RPAR)(')')(97,98)
    PsiElement(WebAssemblyToken.RPAR)(')')(98,99)
  PsiWhiteSpace('\n')(99,100)
  WebAssemblyModuleImpl(MODULE)(100,133)
    PsiElement(WebAssemblyToken.LPAR)('(')(100,101)
    PsiElement(WebAssemblyToken.MODULEKEY)('module')(101,107)
    PsiWhiteSpace(' ')(107,108)
    WebAssemblyModulefieldImpl(MODULEFIELD)(108,132)
      WebAssemblyFuncImpl(FUNC)(108,132)
        PsiElement(WebAssemblyToken.LPAR)('(')(108,109)
        PsiElement(WebAssemblyToken.FUNCKEY)('func')(109,113)
        PsiWhiteSpace(' ')(113,114)
        PsiElement(WebAssemblyToken.FCONST)('f32.const')(114,123)
        PsiWhiteSpace(' ')(123,124)
        PsiErrorElement:WebAssemblyToken.FLOAT, WebAssemblyToken.SIGNED or WebAssemblyToken.UNSIGNED expected, got 'i32'(124,127)
          PsiElement(WebAssemblyToken.NUMTYPE)('i32')(124,127)
        PsiWhiteSpace(' ')(127,128)
        PsiElement(WebAssemblyToken.UNSIGNED)('100')(128,131)
        PsiElement(WebAssemblyToken.RPAR)(')')(131,132)
    PsiElement(WebAssemblyToken.RPAR)(')')(132,133)
  PsiWhiteSpace('\n')(133,134)
  WebAssemblyModuleImpl(MODULE)(134,167)
    PsiElement(WebAssemblyToken.LPAR)('(')(134,135)
    PsiElement(WebAssemblyToken.MODULEKEY)('module')(135,141)
    PsiWhiteSpace(' ')(141,142)
    WebAssemblyModulefieldImpl(MODULEFIELD)(142,166)
      WebAssemblyFuncImpl(FUNC)(142,166)
        PsiElement(WebAssemblyToken.LPAR)('(')(142,143)
        PsiElement(WebAssemblyToken.FUNCKEY)('func')(143,147)
        PsiWhiteSpace(' ')(147,148)
        PsiElement(WebAssemblyToken.FCONST)('f64.const')(148,157)
        PsiWhiteSpace(' ')(157,158)
        PsiErrorElement:WebAssemblyToken.FLOAT, WebAssemblyToken.SIGNED or WebAssemblyToken.UNSIGNED expected, got 'i32'(158,161)
          PsiElement(WebAssemblyToken.NUMTYPE)('i32')(158,161)
        PsiWhiteSpace(' ')(161,162)
        PsiElement(WebAssemblyToken.UNSIGNED)('100')(162,165)
        PsiElement(WebAssemblyToken.RPAR)(')')(165,166)
    PsiElement(WebAssemblyToken.RPAR)(')')(166,167)
  PsiWhiteSpace('\n')(167,168)
  PsiComment(WebAssemblyToken.BLOCK_COMMENT)('(;; STDERR ;;;\nout/test/parse/expr/bad-const-type-i32-in-non-simd-const.txt:3:25: error: unexpected token "i32", expected a numeric literal (e.g. 123, -45, 6.7e8).\n(module (func i32.const i32 100))\n                        ^^^\nout/test/parse/expr/bad-const-type-i32-in-non-simd-const.txt:4:25: error: unexpected token "i32", expected a numeric literal (e.g. 123, -45, 6.7e8).\n(module (func i64.const i32 100))\n                        ^^^\nout/test/parse/expr/bad-const-type-i32-in-non-simd-const.txt:5:25: error: unexpected token "i32", expected a numeric literal (e.g. 123, -45, 6.7e8).\n(module (func f32.const i32 100))\n                        ^^^\nout/test/parse/expr/bad-const-type-i32-in-non-simd-const.txt:6:25: error: unexpected token "i32", expected a numeric literal (e.g. 123, -45, 6.7e8).\n(module (func f64.const i32 100))\n                        ^^^\n;;; STDERR ;;)')(168,1041)