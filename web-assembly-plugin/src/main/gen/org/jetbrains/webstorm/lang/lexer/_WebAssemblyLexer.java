/* The following code was generated by JFlex 1.7.0-1 tweaked for IntelliJ platform */

package org.jetbrains.webstorm.lang.lexer;

import com.intellij.lexer.FlexLexer;
import com.intellij.psi.tree.IElementType;
import com.intellij.psi.TokenType;
import static org.jetbrains.webstorm.lang.psi.WebAssemblyTypes.*;


/**
 * This class is a scanner generated by 
 * <a href="http://www.jflex.de/">JFlex</a> 1.7.0-1
 * from the specification file <tt>/Users/anstarovoyt/git/web-assembly-plugin/src/main/grammars/WebAssemblyLexer.flex</tt>
 */
class _WebAssemblyLexer implements FlexLexer {

  /** This character denotes the end of file */
  public static final int YYEOF = -1;

  /** initial size of the lookahead buffer */
  private static final int ZZ_BUFFERSIZE = 16384;

  /** lexical states */
  public static final int YYINITIAL = 0;
  public static final int BLOCKCOMMENTST = 2;

  /**
   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
   *                  at the beginning of a line
   * l is of the form l = 2*k, k a non negative integer
   */
  private static final int ZZ_LEXSTATE[] = { 
     0,  0,  1, 1
  };

  /** 
   * Translates characters to character classes
   * Chosen bits are [7, 7, 7]
   * Total runtime size is 1928 bytes
   */
  public static int ZZ_CMAP(int ch) {
    return ZZ_CMAP_A[(ZZ_CMAP_Y[ZZ_CMAP_Z[ch>>14]|((ch>>7)&0x7f)]<<7)|(ch&0x7f)];
  }

  /* The ZZ_CMAP_Z table has 68 entries */
  static final char ZZ_CMAP_Z[] = zzUnpackCMap(
    "\1\0\103\200");

  /* The ZZ_CMAP_Y table has 256 entries */
  static final char ZZ_CMAP_Y[] = zzUnpackCMap(
    "\1\0\1\1\53\2\1\3\22\2\1\4\37\2\1\3\237\2");

  /* The ZZ_CMAP_A table has 640 entries */
  static final char ZZ_CMAP_A[] = zzUnpackCMap(
    "\11\0\1\1\4\3\22\0\1\32\1\40\1\24\1\40\1\36\2\40\1\35\1\4\1\5\1\40\1\6\1\31"+
    "\1\6\1\14\1\70\1\12\1\64\1\42\1\41\1\44\1\7\1\43\1\7\1\63\1\7\1\23\1\2\1\40"+
    "\1\71\3\40\4\10\1\15\1\10\11\40\1\16\12\40\1\31\1\25\1\31\1\40\1\11\1\40\1"+
    "\22\1\51\1\45\1\55\1\46\1\21\1\57\1\50\1\17\1\40\1\65\1\52\1\62\1\20\1\53"+
    "\1\54\1\67\1\34\1\56\1\33\1\26\1\66\1\61\1\13\1\47\1\60\1\27\1\40\1\30\1\40"+
    "\6\0\1\3\32\0\1\1\337\0\1\1\177\0\13\1\35\0\2\3\5\0\1\1\2\0\1\37\54\0\1\1"+
    "\40\0");

  /** 
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\2\0\1\1\1\2\1\1\1\3\1\4\1\1\2\5"+
    "\10\1\1\6\12\1\1\6\3\7\1\10\1\11\2\12"+
    "\3\1\1\13\3\1\1\14\14\1\1\0\1\15\7\1"+
    "\1\16\5\1\1\17\17\1\1\20\1\21\2\1\1\13"+
    "\1\1\1\13\1\5\1\13\1\1\2\22\1\1\1\13"+
    "\1\23\1\1\2\22\3\1\1\15\1\0\16\1\1\24"+
    "\20\1\1\25\2\1\1\12\1\1\1\13\1\26\4\1"+
    "\1\27\5\1\2\0\4\1\1\30\1\31\3\1\1\32"+
    "\3\1\1\33\1\34\4\1\1\35\2\1\1\36\1\37"+
    "\10\1\1\13\51\1\1\0\2\1\1\40\13\1\1\17"+
    "\1\1\1\41\1\42\1\1\1\43\2\1\1\44\7\1"+
    "\1\45\10\1\1\45\16\1\1\46\2\1\1\45\21\1"+
    "\1\47\1\0\6\1\1\50\2\1\1\51\1\52\3\1"+
    "\1\53\4\1\1\54\1\55\1\56\20\1\1\13\1\57"+
    "\33\1\1\60\1\1\1\61\12\1\1\62\6\1\1\62"+
    "\7\1\1\62\16\1\1\63\1\64\2\1\1\65\16\1"+
    "\1\66\4\1\1\62\5\1\1\62\2\1\1\67\13\1"+
    "\1\70\1\1\1\71\2\1\1\72\1\73\33\1\1\74"+
    "\1\75\2\1\1\76\27\1\1\77\1\1\1\100\41\1"+
    "\1\101\33\1";

  private static int [] zzUnpackAction() {
    int [] result = new int[594];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /** 
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\72\0\164\0\256\0\350\0\u0122\0\u015c\0\u0196"+
    "\0\u01d0\0\u020a\0\u0244\0\u027e\0\u02b8\0\u02f2\0\u032c\0\u0366"+
    "\0\u03a0\0\u03da\0\u0414\0\u044e\0\u0488\0\u04c2\0\u04fc\0\u0536"+
    "\0\u0570\0\u05aa\0\u05e4\0\u061e\0\u0658\0\u015c\0\u015c\0\u0692"+
    "\0\u06cc\0\u0706\0\u015c\0\u0740\0\u077a\0\u07b4\0\u07ee\0\u0828"+
    "\0\u0862\0\u089c\0\u08d6\0\u0910\0\164\0\u094a\0\u0984\0\u09be"+
    "\0\u09f8\0\u0a32\0\u0a6c\0\u0aa6\0\u0ae0\0\u0b1a\0\u0b54\0\u0b8e"+
    "\0\u0bc8\0\u0c02\0\164\0\u0c3c\0\u0c76\0\u0cb0\0\u0cea\0\u0d24"+
    "\0\u0d5e\0\u0d98\0\u0414\0\u0dd2\0\u0e0c\0\u0e46\0\u0e80\0\u0eba"+
    "\0\u0ef4\0\u0f2e\0\u0f68\0\u0fa2\0\u0fdc\0\u1016\0\u1050\0\u108a"+
    "\0\u10c4\0\u10fe\0\u1138\0\u1172\0\u11ac\0\u11e6\0\u1220\0\u125a"+
    "\0\u015c\0\u015c\0\u1294\0\u12ce\0\u1308\0\u1342\0\u137c\0\u13b6"+
    "\0\164\0\u13f0\0\u142a\0\u1464\0\u149e\0\u14d8\0\164\0\u1512"+
    "\0\u154c\0\u1586\0\u15c0\0\u15fa\0\u1634\0\u015c\0\u166e\0\u16a8"+
    "\0\u16e2\0\u171c\0\u1756\0\u1790\0\u17ca\0\u1804\0\u183e\0\u1878"+
    "\0\u18b2\0\u18ec\0\u1926\0\u1960\0\u199a\0\164\0\u19d4\0\u1a0e"+
    "\0\u1a48\0\u1a82\0\u1abc\0\u1af6\0\u1b30\0\u1b6a\0\u1ba4\0\u1bde"+
    "\0\u1c18\0\u1c52\0\u1c8c\0\u1cc6\0\u1d00\0\u1d3a\0\164\0\u1d74"+
    "\0\u1dae\0\u1de8\0\u1e22\0\u1e5c\0\164\0\u1e96\0\u1ed0\0\u1f0a"+
    "\0\u1f44\0\u1f7e\0\u1fb8\0\u1ff2\0\u202c\0\u2066\0\u20a0\0\u20da"+
    "\0\u2114\0\u214e\0\u2188\0\u21c2\0\u21fc\0\164\0\164\0\u2236"+
    "\0\u2270\0\u22aa\0\u22e4\0\u231e\0\u2358\0\u2392\0\u23cc\0\164"+
    "\0\u2406\0\u2440\0\u247a\0\u24b4\0\164\0\u24ee\0\u2528\0\u2562"+
    "\0\164\0\u259c\0\u25d6\0\u2610\0\u264a\0\u2684\0\u26be\0\u26f8"+
    "\0\u2732\0\u276c\0\u27a6\0\u27e0\0\u281a\0\u2854\0\u288e\0\u28c8"+
    "\0\u2902\0\u293c\0\u2976\0\u29b0\0\u29ea\0\u2a24\0\u2a5e\0\u2a98"+
    "\0\u2ad2\0\u2b0c\0\u2b46\0\u2b80\0\u2bba\0\u2bf4\0\u2c2e\0\u2c68"+
    "\0\u2ca2\0\u2cdc\0\u2d16\0\u2d50\0\u2d8a\0\u2dc4\0\u2dfe\0\u2e38"+
    "\0\u2e72\0\u2eac\0\u2ee6\0\u2f20\0\u2f5a\0\u2f94\0\u2fce\0\u3008"+
    "\0\u3042\0\u307c\0\u30b6\0\u30f0\0\u312a\0\u3164\0\u319e\0\u31d8"+
    "\0\u3212\0\u324c\0\u3286\0\u32c0\0\u32fa\0\u3334\0\u336e\0\u33a8"+
    "\0\u33e2\0\u341c\0\164\0\u3456\0\164\0\u3490\0\u34ca\0\164"+
    "\0\u3504\0\u353e\0\164\0\u3578\0\u35b2\0\u35ec\0\u3626\0\u3660"+
    "\0\u369a\0\u36d4\0\164\0\u370e\0\u3748\0\u3782\0\u37bc\0\u37f6"+
    "\0\u3830\0\u386a\0\u38a4\0\u3830\0\u38de\0\u3918\0\u3952\0\u398c"+
    "\0\u39c6\0\u3a00\0\u3a3a\0\u3a74\0\u3aae\0\u3ae8\0\u3b22\0\u3b5c"+
    "\0\u3b96\0\u3bd0\0\164\0\u3c0a\0\u3c44\0\u3c7e\0\u3cb8\0\u3cf2"+
    "\0\u3d2c\0\u3d66\0\u3da0\0\u3dda\0\u3e14\0\u3e4e\0\u3e88\0\u3ec2"+
    "\0\u3efc\0\u3f36\0\u3f70\0\u3faa\0\u3fe4\0\u401e\0\u4058\0\u015c"+
    "\0\u4092\0\u40cc\0\u4106\0\u4140\0\u417a\0\u41b4\0\u41ee\0\164"+
    "\0\u4228\0\u4262\0\u1f7e\0\164\0\u429c\0\u42d6\0\u4310\0\u434a"+
    "\0\u4384\0\u43be\0\u43f8\0\u4432\0\u446c\0\u44a6\0\164\0\u44e0"+
    "\0\u451a\0\u4554\0\u458e\0\u45c8\0\u4602\0\u463c\0\u4676\0\u46b0"+
    "\0\u46ea\0\u4724\0\u475e\0\u4798\0\u47d2\0\u480c\0\u4846\0\u4880"+
    "\0\164\0\u48ba\0\u48f4\0\u492e\0\u4968\0\u49a2\0\u49dc\0\u4a16"+
    "\0\u4a50\0\u4a8a\0\u4ac4\0\u4afe\0\u4b38\0\u4b72\0\u4bac\0\u4be6"+
    "\0\u4c20\0\u4c5a\0\u4c94\0\u4cce\0\u4d08\0\u4d42\0\u4d7c\0\u4db6"+
    "\0\u4df0\0\u4e2a\0\u4e64\0\u4e9e\0\u015c\0\u4ed8\0\164\0\u4f12"+
    "\0\u4f4c\0\u4f86\0\u4fc0\0\u4ffa\0\u5034\0\u506e\0\u50a8\0\u50e2"+
    "\0\u511c\0\u5156\0\u5190\0\u51ca\0\u5204\0\u523e\0\u5278\0\u52b2"+
    "\0\u52ec\0\u5326\0\u5360\0\u539a\0\u53d4\0\u540e\0\u5448\0\u5482"+
    "\0\164\0\u54bc\0\u54f6\0\u5530\0\u556a\0\u55a4\0\u55de\0\u5618"+
    "\0\u5652\0\u568c\0\u56c6\0\u5700\0\u573a\0\u5774\0\u57ae\0\164"+
    "\0\164\0\u57e8\0\u5822\0\164\0\u585c\0\u5896\0\u58d0\0\u590a"+
    "\0\u5944\0\u597e\0\u59b8\0\u59f2\0\u5a2c\0\u5a66\0\u5aa0\0\u5ada"+
    "\0\u5b14\0\u5b4e\0\164\0\u5b88\0\u5bc2\0\u5bfc\0\u5c36\0\u5c70"+
    "\0\u5caa\0\u5ce4\0\u5d1e\0\u5d58\0\u5d92\0\u5dcc\0\u5e06\0\u5e40"+
    "\0\164\0\u5e7a\0\u5eb4\0\u5eee\0\u5f28\0\u5f62\0\u5f9c\0\u5fd6"+
    "\0\u6010\0\u604a\0\u6084\0\u60be\0\164\0\u60f8\0\164\0\u6132"+
    "\0\u616c\0\164\0\164\0\u61a6\0\u61e0\0\u621a\0\u6254\0\u628e"+
    "\0\u62c8\0\u6302\0\u633c\0\u6376\0\u63b0\0\u63ea\0\u6424\0\u645e"+
    "\0\u6498\0\u64d2\0\u650c\0\u6546\0\u6580\0\u65ba\0\u65f4\0\u662e"+
    "\0\u6668\0\u66a2\0\u66dc\0\u6716\0\u6750\0\u678a\0\164\0\164"+
    "\0\u67c4\0\u67fe\0\164\0\u6838\0\u6872\0\u68ac\0\u68e6\0\u6920"+
    "\0\u695a\0\u6994\0\u69ce\0\u6a08\0\u6a42\0\u6a7c\0\u6ab6\0\u6af0"+
    "\0\u6b2a\0\u6b64\0\u6b9e\0\u6bd8\0\u6c12\0\u6c4c\0\u6c86\0\u6cc0"+
    "\0\u6cfa\0\u6d34\0\164\0\u6d6e\0\164\0\u6da8\0\u6de2\0\u6e1c"+
    "\0\u6e56\0\u6e90\0\u6eca\0\u6f04\0\u6f3e\0\u6f78\0\u6fb2\0\u6fec"+
    "\0\u7026\0\u7060\0\u709a\0\u70d4\0\u710e\0\u7148\0\u7182\0\u71bc"+
    "\0\u71f6\0\u7230\0\u726a\0\u72a4\0\u72de\0\u7318\0\u7352\0\u738c"+
    "\0\u73c6\0\u7400\0\u743a\0\u7474\0\u74ae\0\u74e8\0\164\0\u7522"+
    "\0\u755c\0\u7596\0\u75d0\0\u760a\0\u7644\0\u767e\0\u76b8\0\u76f2"+
    "\0\u772c\0\u7766\0\u77a0\0\u77da\0\u7814\0\u784e\0\u7888\0\u78c2"+
    "\0\u78fc\0\u7936\0\u7970\0\u79aa\0\u79e4\0\u7a1e\0\u7a58\0\u7a92"+
    "\0\u7acc\0\u7b06";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[594];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /** 
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\1\3\1\4\1\5\1\4\1\6\1\7\1\10\1\11"+
    "\2\3\1\12\4\3\1\13\1\14\1\15\1\16\1\3"+
    "\1\17\1\3\1\20\3\3\1\4\1\21\1\22\1\3"+
    "\1\23\2\3\4\11\1\24\1\25\2\3\1\26\1\27"+
    "\1\30\1\31\1\32\1\33\1\34\2\3\1\35\2\11"+
    "\4\3\1\36\2\37\1\40\1\37\1\41\65\37\1\3"+
    "\1\0\1\3\3\0\24\3\1\0\3\3\1\0\32\3"+
    "\2\0\1\4\1\0\1\4\26\0\1\4\37\0\1\3"+
    "\1\0\1\42\3\0\24\3\1\0\3\3\1\0\32\3"+
    "\3\0\1\43\161\0\1\3\1\0\1\3\3\0\1\3"+
    "\1\44\2\3\1\45\4\3\1\46\1\47\11\3\1\0"+
    "\3\3\1\0\2\3\4\44\16\3\2\44\4\3\1\0"+
    "\1\3\1\0\1\3\3\0\1\3\1\11\1\3\1\50"+
    "\1\11\1\3\1\51\1\52\14\3\1\0\3\3\1\0"+
    "\2\3\4\11\1\3\1\52\14\3\2\11\4\3\1\0"+
    "\1\3\1\0\1\3\3\0\1\3\1\11\1\3\1\50"+
    "\1\11\1\53\1\51\1\52\14\3\1\0\3\3\1\0"+
    "\2\3\4\11\1\3\1\52\14\3\2\11\4\3\1\0"+
    "\1\3\1\0\1\3\3\0\12\3\1\54\1\55\10\3"+
    "\1\0\1\56\2\3\1\0\2\3\1\57\1\3\1\60"+
    "\16\3\1\61\6\3\1\0\1\3\1\0\1\3\3\0"+
    "\14\3\1\62\7\3\1\0\3\3\1\0\14\3\1\63"+
    "\15\3\1\0\1\3\1\0\1\3\3\0\20\3\1\64"+
    "\3\3\1\0\3\3\1\0\2\3\1\65\1\3\1\66"+
    "\25\3\1\0\1\3\1\0\1\3\3\0\12\3\1\67"+
    "\11\3\1\0\1\70\2\3\1\0\13\3\1\71\16\3"+
    "\1\0\1\3\1\0\1\17\1\0\2\72\16\17\1\73"+
    "\1\74\4\17\1\72\3\17\1\72\1\3\31\17\1\72"+
    "\1\3\1\0\1\3\3\0\12\3\1\75\11\3\1\0"+
    "\3\3\1\0\32\3\1\0\1\3\1\0\1\3\3\0"+
    "\14\3\1\76\7\3\1\0\3\3\1\0\7\3\1\77"+
    "\1\100\1\101\20\3\1\0\1\3\1\0\1\3\3\0"+
    "\24\3\1\0\3\3\1\0\7\3\1\102\22\3\7\0"+
    "\16\103\1\0\2\103\4\0\2\103\1\0\34\103\1\3"+
    "\1\0\1\3\3\0\14\3\1\104\3\3\1\105\3\3"+
    "\1\0\3\3\1\0\32\3\1\0\1\3\1\0\1\3"+
    "\3\0\5\3\1\106\4\3\1\107\11\3\1\0\3\3"+
    "\1\0\13\3\1\110\16\3\1\0\1\3\1\0\1\3"+
    "\3\0\24\3\1\0\1\3\1\111\1\3\1\0\13\3"+
    "\1\112\16\3\1\0\1\3\1\0\1\3\3\0\24\3"+
    "\1\0\3\3\1\0\14\3\1\113\15\3\1\0\1\3"+
    "\1\0\1\3\3\0\13\3\1\114\10\3\1\0\3\3"+
    "\1\0\32\3\1\0\1\3\1\0\1\3\3\0\14\3"+
    "\1\115\7\3\1\0\3\3\1\0\32\3\1\0\1\3"+
    "\1\0\1\3\3\0\14\3\1\116\7\3\1\0\1\3"+
    "\1\117\1\3\1\0\7\3\1\120\22\3\1\0\1\3"+
    "\1\0\1\3\3\0\24\3\1\0\1\121\2\3\1\0"+
    "\7\3\1\122\22\3\1\0\1\3\1\0\1\3\3\0"+
    "\24\3\1\0\1\3\1\123\1\3\1\0\7\3\1\124"+
    "\3\3\1\125\16\3\1\0\1\3\1\0\1\3\3\0"+
    "\20\3\1\126\3\3\1\0\3\3\1\0\7\3\1\127"+
    "\4\3\1\130\15\3\6\0\1\131\66\0\1\132\67\0"+
    "\3\42\1\0\66\42\1\3\1\0\1\3\3\0\1\3"+
    "\1\44\1\3\1\133\1\44\1\3\1\51\1\52\14\3"+
    "\1\0\3\3\1\0\2\3\4\44\1\3\1\52\14\3"+
    "\2\44\4\3\1\0\1\3\1\0\1\3\3\0\1\3"+
    "\1\44\1\3\1\133\1\44\1\134\1\51\1\52\14\3"+
    "\1\0\3\3\1\0\2\3\4\44\1\3\1\52\14\3"+
    "\2\44\4\3\1\0\1\3\1\0\1\3\3\0\12\3"+
    "\1\54\11\3\1\0\3\3\1\0\32\3\1\0\1\3"+
    "\1\0\1\3\3\0\14\3\1\62\7\3\1\0\3\3"+
    "\1\0\32\3\1\0\1\3\1\0\1\3\3\0\1\3"+
    "\1\11\2\3\1\11\17\3\1\0\3\3\1\0\2\3"+
    "\4\11\16\3\2\11\4\3\1\0\1\3\1\0\1\3"+
    "\3\0\1\3\1\135\2\3\1\135\2\3\1\52\14\3"+
    "\1\0\3\3\1\0\2\3\4\135\1\3\1\52\14\3"+
    "\2\135\4\3\1\0\1\3\1\0\1\3\3\0\1\136"+
    "\1\137\2\3\1\137\17\3\1\0\3\3\1\0\2\3"+
    "\4\137\16\3\2\137\4\3\1\0\1\3\1\0\1\3"+
    "\3\0\1\3\2\140\1\3\1\140\2\3\1\140\3\3"+
    "\2\140\7\3\1\0\3\3\1\0\2\3\6\140\2\3"+
    "\1\140\3\3\1\140\5\3\2\140\4\3\1\0\1\3"+
    "\1\0\1\3\3\0\13\3\1\141\10\3\1\0\3\3"+
    "\1\0\32\3\1\0\1\3\1\0\1\3\3\0\24\3"+
    "\1\0\3\3\1\0\7\3\1\142\22\3\1\0\1\3"+
    "\1\0\1\3\3\0\24\3\1\0\3\3\1\0\3\3"+
    "\1\143\26\3\1\0\1\3\1\0\1\3\3\0\24\3"+
    "\1\0\3\3\1\0\5\3\1\144\24\3\1\0\1\3"+
    "\1\0\1\3\3\0\24\3\1\0\3\3\1\0\15\3"+
    "\1\145\14\3\1\0\1\3\1\0\1\3\3\0\12\3"+
    "\1\146\11\3\1\0\3\3\1\0\32\3\1\0\1\3"+
    "\1\0\1\3\3\0\24\3\1\0\3\3\1\0\15\3"+
    "\1\147\14\3\1\0\1\3\1\0\1\3\3\0\12\3"+
    "\1\150\11\3\1\0\3\3\1\0\32\3\1\0\1\3"+
    "\1\0\1\3\3\0\24\3\1\0\3\3\1\0\3\3"+
    "\1\151\26\3\1\0\1\3\1\0\1\3\3\0\24\3"+
    "\1\0\3\3\1\0\5\3\1\152\24\3\1\0\1\3"+
    "\1\0\1\3\3\0\24\3\1\0\3\3\1\0\10\3"+
    "\1\153\21\3\1\0\1\3\1\0\1\3\3\0\24\3"+
    "\1\0\3\3\1\0\14\3\1\154\15\3\1\0\1\3"+
    "\1\0\1\3\3\0\11\3\1\155\12\3\1\0\3\3"+
    "\1\0\32\3\3\0\1\72\1\0\20\72\1\156\1\157"+
    "\11\72\1\0\32\72\1\3\1\0\1\3\3\0\1\3"+
    "\2\160\1\3\1\160\2\3\1\160\2\3\1\17\2\160"+
    "\1\3\2\17\1\161\3\3\1\0\3\17\1\0\2\3"+
    "\6\160\2\3\1\160\3\3\1\160\5\3\2\160\4\3"+
    "\1\0\1\3\1\0\1\3\3\0\24\3\1\0\1\3"+
    "\1\162\1\3\1\0\32\3\1\0\1\3\1\0\1\3"+
    "\3\0\24\3\1\0\3\3\1\0\12\3\1\163\17\3"+
    "\1\0\1\3\1\0\1\3\3\0\24\3\1\0\3\3"+
    "\1\0\7\3\1\164\22\3\1\0\1\3\1\0\1\3"+
    "\3\0\24\3\1\0\3\3\1\0\15\3\1\165\14\3"+
    "\1\0\1\3\1\0\1\3\3\0\24\3\1\0\3\3"+
    "\1\0\7\3\1\166\22\3\1\0\1\3\1\0\1\3"+
    "\3\0\13\3\1\167\10\3\1\0\1\170\2\3\1\0"+
    "\17\3\1\171\12\3\1\0\1\3\1\0\1\3\3\0"+
    "\24\3\1\0\3\3\1\0\13\3\1\172\16\3\1\0"+
    "\1\3\1\0\1\3\3\0\24\3\1\0\1\3\1\173"+
    "\1\3\1\0\32\3\1\0\1\3\1\0\1\3\3\0"+
    "\24\3\1\0\1\174\2\3\1\0\15\3\1\175\14\3"+
    "\1\0\1\3\1\0\1\3\3\0\24\3\1\0\3\3"+
    "\1\0\16\3\1\176\13\3\1\0\1\3\1\0\1\3"+
    "\3\0\24\3\1\0\3\3\1\0\7\3\1\177\7\3"+
    "\1\200\12\3\1\0\1\3\1\0\1\3\3\0\3\3"+
    "\1\201\20\3\1\0\3\3\1\0\32\3\1\0\1\3"+
    "\1\0\1\3\3\0\24\3\1\0\3\3\1\0\14\3"+
    "\1\202\15\3\1\0\1\3\1\0\1\3\3\0\24\3"+
    "\1\0\3\3\1\0\6\3\1\203\5\3\1\204\15\3"+
    "\1\0\1\3\1\0\1\3\3\0\13\3\1\205\10\3"+
    "\1\0\3\3\1\0\32\3\1\0\1\3\1\0\1\3"+
    "\3\0\24\3\1\0\1\3\1\206\1\3\1\0\32\3"+
    "\1\0\1\3\1\0\1\3\3\0\24\3\1\0\1\207"+
    "\2\3\1\0\32\3\1\0\1\3\1\0\1\3\3\0"+
    "\24\3\1\0\3\3\1\0\14\3\1\210\15\3\1\0"+
    "\1\3\1\0\1\3\3\0\24\3\1\0\3\3\1\0"+
    "\6\3\1\211\23\3\1\0\1\3\1\0\1\3\3\0"+
    "\14\3\1\212\7\3\1\0\3\3\1\0\32\3\1\0"+
    "\1\3\1\0\1\3\3\0\24\3\1\0\1\213\2\3"+
    "\1\0\13\3\1\214\16\3\1\0\1\3\1\0\1\3"+
    "\3\0\24\3\1\0\3\3\1\0\14\3\1\215\15\3"+
    "\1\0\1\3\1\0\1\3\3\0\24\3\1\0\1\213"+
    "\2\3\1\0\32\3\1\0\1\3\1\0\1\3\3\0"+
    "\24\3\1\0\3\3\1\0\14\3\1\216\15\3\1\0"+
    "\1\3\1\0\1\3\3\0\24\3\1\0\1\217\2\3"+
    "\1\0\32\3\1\0\1\3\1\0\1\3\3\0\24\3"+
    "\1\0\3\3\1\0\23\3\1\220\6\3\1\0\1\3"+
    "\1\0\1\3\3\0\24\3\1\0\3\3\1\0\16\3"+
    "\1\221\13\3\1\0\1\3\1\0\1\3\3\0\1\3"+
    "\1\44\2\3\1\44\17\3\1\0\3\3\1\0\2\3"+
    "\4\44\16\3\2\44\4\3\1\0\1\3\1\0\1\3"+
    "\3\0\1\3\2\222\1\3\1\222\2\3\1\222\3\3"+
    "\2\222\7\3\1\0\3\3\1\0\2\3\6\222\2\3"+
    "\1\222\3\3\1\222\5\3\2\222\4\3\1\0\1\3"+
    "\1\0\1\3\3\0\1\3\1\135\1\3\1\223\1\135"+
    "\2\3\1\52\14\3\1\0\3\3\1\0\2\3\4\135"+
    "\1\3\1\52\14\3\2\135\4\3\1\0\1\3\1\0"+
    "\1\3\3\0\1\3\1\137\2\3\1\137\17\3\1\0"+
    "\3\3\1\0\2\3\4\137\16\3\2\137\4\3\1\0"+
    "\1\3\1\0\1\3\3\0\1\3\1\137\1\3\1\136"+
    "\1\137\17\3\1\0\3\3\1\0\2\3\4\137\16\3"+
    "\2\137\4\3\1\0\1\3\1\0\1\3\3\0\1\3"+
    "\2\140\1\53\1\140\1\3\1\224\1\140\1\52\2\3"+
    "\2\140\7\3\1\0\3\3\1\0\2\3\6\140\2\3"+
    "\1\140\2\3\1\52\1\140\5\3\2\140\4\3\1\0"+
    "\1\3\1\0\1\3\3\0\24\3\1\0\3\3\1\0"+
    "\23\3\1\225\6\3\1\0\1\3\1\0\1\3\3\0"+
    "\6\3\1\226\15\3\1\0\3\3\1\0\32\3\1\0"+
    "\1\3\1\0\1\3\3\0\6\3\1\227\15\3\1\0"+
    "\3\3\1\0\32\3\1\0\1\3\1\0\1\3\3\0"+
    "\24\3\1\0\3\3\1\0\14\3\1\230\15\3\1\0"+
    "\1\3\1\0\1\3\3\0\15\3\1\231\6\3\1\0"+
    "\3\3\1\0\32\3\1\0\1\3\1\0\1\3\3\0"+
    "\24\3\1\0\3\3\1\0\6\3\1\232\23\3\1\0"+
    "\1\3\1\0\1\3\3\0\6\3\1\233\15\3\1\0"+
    "\3\3\1\0\32\3\1\0\1\3\1\0\1\3\3\0"+
    "\6\3\1\234\15\3\1\0\3\3\1\0\32\3\1\0"+
    "\1\3\1\0\1\3\3\0\13\3\1\235\10\3\1\0"+
    "\3\3\1\0\32\3\1\0\1\3\1\0\1\3\3\0"+
    "\24\3\1\0\3\3\1\0\23\3\1\236\6\3\1\0"+
    "\1\3\1\0\1\3\3\0\24\3\1\0\3\3\1\0"+
    "\20\3\1\237\11\3\10\0\2\240\1\0\1\240\2\0"+
    "\1\240\2\0\1\72\2\240\1\0\2\72\1\241\4\0"+
    "\3\72\3\0\6\240\2\0\1\240\3\0\1\240\5\0"+
    "\2\240\5\0\1\3\1\0\1\3\3\0\1\3\2\17"+
    "\1\3\1\17\2\3\1\17\3\3\2\17\7\3\1\0"+
    "\3\3\1\0\2\3\6\17\2\3\1\17\3\3\1\17"+
    "\5\3\2\17\4\3\1\0\1\3\1\0\1\3\3\0"+
    "\21\3\1\242\2\3\1\0\3\3\1\0\32\3\1\0"+
    "\1\3\1\0\1\3\3\0\24\3\1\0\3\3\1\0"+
    "\7\3\1\243\22\3\1\0\1\3\1\0\1\3\3\0"+
    "\24\3\1\0\3\3\1\0\13\3\1\244\16\3\1\0"+
    "\1\3\1\0\1\3\3\0\3\3\1\245\20\3\1\0"+
    "\3\3\1\0\32\3\1\0\1\3\1\0\1\3\3\0"+
    "\24\3\1\0\3\3\1\0\7\3\1\246\22\3\1\0"+
    "\1\3\1\0\1\3\3\0\12\3\1\247\11\3\1\0"+
    "\3\3\1\0\32\3\1\0\1\3\1\0\1\3\3\0"+
    "\6\3\1\250\15\3\1\0\3\3\1\0\32\3\1\0"+
    "\1\3\1\0\1\3\3\0\20\3\1\251\3\3\1\0"+
    "\3\3\1\0\32\3\1\0\1\3\1\0\1\3\3\0"+
    "\20\3\1\252\3\3\1\0\3\3\1\0\32\3\1\0"+
    "\1\3\1\0\1\3\3\0\24\3\1\0\3\3\1\0"+
    "\13\3\1\253\16\3\1\0\1\3\1\0\1\3\3\0"+
    "\24\3\1\0\1\3\1\254\1\3\1\0\32\3\1\0"+
    "\1\3\1\0\1\3\3\0\24\3\1\0\3\3\1\0"+
    "\7\3\1\255\22\3\1\0\1\3\1\0\1\3\3\0"+
    "\24\3\1\0\3\3\1\0\14\3\1\256\15\3\1\0"+
    "\1\3\1\0\1\3\3\0\24\3\1\0\3\3\1\0"+
    "\23\3\1\257\6\3\1\0\1\3\1\0\1\3\3\0"+
    "\24\3\1\0\3\3\1\0\7\3\1\260\22\3\1\0"+
    "\1\3\1\0\1\3\3\0\11\3\1\261\12\3\1\0"+
    "\1\262\2\3\1\0\32\3\1\0\1\3\1\0\1\3"+
    "\3\0\24\3\1\0\3\3\1\0\6\3\1\263\23\3"+
    "\1\0\1\3\1\0\1\3\3\0\14\3\1\264\7\3"+
    "\1\0\3\3\1\0\32\3\1\0\1\3\1\0\1\3"+
    "\3\0\24\3\1\0\3\3\1\0\15\3\1\265\14\3"+
    "\1\0\1\3\1\0\1\3\3\0\24\3\1\0\3\3"+
    "\1\0\17\3\1\266\12\3\1\0\1\3\1\0\1\3"+
    "\3\0\14\3\1\267\7\3\1\0\3\3\1\0\32\3"+
    "\1\0\1\3\1\0\1\3\3\0\14\3\1\270\7\3"+
    "\1\0\3\3\1\0\32\3\1\0\1\3\1\0\1\3"+
    "\3\0\24\3\1\0\3\3\1\0\15\3\1\271\14\3"+
    "\1\0\1\3\1\0\1\3\3\0\24\3\1\0\3\3"+
    "\1\0\13\3\1\272\16\3\1\0\1\3\1\0\1\3"+
    "\3\0\24\3\1\0\1\3\1\273\1\3\1\0\32\3"+
    "\1\0\1\3\1\0\1\3\3\0\3\3\1\274\20\3"+
    "\1\0\3\3\1\0\32\3\1\0\1\3\1\0\1\3"+
    "\3\0\24\3\1\0\3\3\1\0\7\3\1\275\22\3"+
    "\1\0\1\3\1\0\1\3\3\0\24\3\1\0\3\3"+
    "\1\0\22\3\1\276\7\3\1\0\1\3\1\0\1\3"+
    "\3\0\24\3\1\0\3\3\1\0\12\3\1\277\17\3"+
    "\1\0\1\3\1\0\1\3\3\0\24\3\1\0\3\3"+
    "\1\0\14\3\1\300\15\3\1\0\1\3\1\0\1\3"+
    "\3\0\20\3\1\301\3\3\1\0\3\3\1\0\32\3"+
    "\1\0\1\3\1\0\1\3\3\0\1\3\2\222\1\134"+
    "\1\222\1\3\1\224\1\222\1\52\2\3\2\222\7\3"+
    "\1\0\3\3\1\0\2\3\6\222\2\3\1\222\2\3"+
    "\1\52\1\222\5\3\2\222\4\3\1\0\1\3\1\0"+
    "\1\3\3\0\1\3\1\135\2\3\1\135\17\3\1\0"+
    "\3\3\1\0\2\3\4\135\16\3\2\135\4\3\1\0"+
    "\1\3\1\0\1\3\3\0\1\3\2\302\1\3\1\302"+
    "\2\3\1\302\1\52\2\3\2\302\7\3\1\0\3\3"+
    "\1\0\2\3\6\302\2\3\1\302\2\3\1\52\1\302"+
    "\5\3\2\302\4\3\1\0\1\3\1\0\1\3\3\0"+
    "\5\3\1\303\4\3\1\304\1\3\1\305\7\3\1\0"+
    "\1\306\1\307\1\3\1\0\6\3\1\310\1\311\3\3"+
    "\1\312\1\313\1\314\1\315\1\316\1\317\1\3\1\320"+
    "\1\321\6\3\1\0\1\3\1\0\1\3\3\0\5\3"+
    "\1\303\4\3\1\304\1\3\1\322\7\3\1\0\1\306"+
    "\1\323\1\3\1\0\6\3\1\310\1\324\3\3\1\325"+
    "\1\313\1\314\1\315\1\326\1\317\2\3\1\321\6\3"+
    "\1\0\1\3\1\0\1\3\3\0\24\3\1\0\1\3"+
    "\1\327\1\3\1\0\32\3\1\0\1\3\1\0\1\3"+
    "\3\0\4\3\1\330\17\3\1\0\3\3\1\0\32\3"+
    "\1\0\1\3\1\0\1\3\3\0\24\3\1\0\1\3"+
    "\1\331\1\3\1\0\32\3\1\0\1\3\1\0\1\3"+
    "\3\0\12\3\1\332\1\333\1\334\7\3\1\0\1\335"+
    "\1\336\1\3\1\0\6\3\1\337\1\340\3\3\1\341"+
    "\2\3\1\342\1\343\1\344\2\3\1\345\6\3\1\0"+
    "\1\3\1\0\1\3\3\0\12\3\1\332\1\333\1\334"+
    "\7\3\1\0\1\335\1\346\1\3\1\0\6\3\1\337"+
    "\1\340\3\3\1\341\1\3\1\347\1\350\1\343\1\344"+
    "\2\3\1\345\6\3\1\0\1\3\1\0\1\3\3\0"+
    "\20\3\1\351\3\3\1\0\3\3\1\0\32\3\1\0"+
    "\1\3\1\0\1\3\3\0\11\3\1\352\12\3\1\0"+
    "\3\3\1\0\32\3\1\0\1\3\1\0\1\3\3\0"+
    "\12\3\1\353\11\3\1\0\3\3\1\0\32\3\10\0"+
    "\2\72\1\0\1\72\2\0\1\72\3\0\2\72\16\0"+
    "\6\72\2\0\1\72\3\0\1\72\5\0\2\72\34\0"+
    "\1\354\42\0\1\3\1\0\1\3\3\0\1\3\2\355"+
    "\1\3\1\355\2\3\1\355\3\3\2\355\7\3\1\0"+
    "\3\3\1\0\2\3\6\355\2\3\1\355\3\3\1\355"+
    "\5\3\2\355\4\3\1\0\1\3\1\0\1\3\3\0"+
    "\14\3\1\356\7\3\1\0\3\3\1\0\32\3\1\0"+
    "\1\3\1\0\1\3\3\0\24\3\1\0\3\3\1\0"+
    "\7\3\1\357\22\3\1\0\1\3\1\0\1\3\3\0"+
    "\24\3\1\0\3\3\1\0\13\3\1\360\16\3\1\0"+
    "\1\3\1\0\1\3\3\0\11\3\1\361\1\362\1\363"+
    "\10\3\1\0\3\3\1\0\32\3\1\0\1\3\1\0"+
    "\1\3\3\0\24\3\1\0\1\3\1\364\1\3\1\0"+
    "\32\3\1\0\1\3\1\0\1\3\3\0\24\3\1\0"+
    "\3\3\1\0\13\3\1\365\16\3\1\0\1\3\1\0"+
    "\1\3\3\0\3\3\1\366\20\3\1\0\3\3\1\0"+
    "\32\3\1\0\1\3\1\0\1\3\3\0\24\3\1\0"+
    "\3\3\1\0\7\3\1\367\22\3\1\0\1\3\1\0"+
    "\1\3\3\0\24\3\1\0\1\3\1\370\1\3\1\0"+
    "\32\3\1\0\1\3\1\0\1\3\3\0\24\3\1\0"+
    "\1\3\1\371\1\3\1\0\32\3\1\0\1\3\1\0"+
    "\1\3\3\0\6\3\1\372\15\3\1\0\3\3\1\0"+
    "\32\3\1\0\1\3\1\0\1\3\3\0\13\3\1\373"+
    "\10\3\1\0\3\3\1\0\32\3\1\0\1\3\1\0"+
    "\1\3\3\0\14\3\1\374\7\3\1\0\3\3\1\0"+
    "\32\3\1\0\1\3\1\0\1\3\3\0\24\3\1\0"+
    "\3\3\1\0\26\3\1\375\3\3\1\0\1\3\1\0"+
    "\1\3\3\0\24\3\1\0\3\3\1\0\13\3\1\376"+
    "\16\3\1\0\1\3\1\0\1\3\3\0\24\3\1\0"+
    "\3\3\1\0\7\3\1\377\22\3\1\0\1\3\1\0"+
    "\1\3\3\0\24\3\1\0\3\3\1\0\23\3\1\u0100"+
    "\6\3\1\0\1\3\1\0\1\3\3\0\6\3\1\u0101"+
    "\15\3\1\0\3\3\1\0\32\3\1\0\1\3\1\0"+
    "\1\3\3\0\14\3\1\u0102\7\3\1\0\3\3\1\0"+
    "\32\3\1\0\1\3\1\0\1\3\3\0\24\3\1\0"+
    "\1\u0103\2\3\1\0\32\3\1\0\1\3\1\0\1\3"+
    "\3\0\24\3\1\0\3\3\1\0\13\3\1\360\4\3"+
    "\1\u0104\11\3\1\0\1\3\1\0\1\3\3\0\24\3"+
    "\1\0\3\3\1\0\6\3\1\u0105\23\3\1\0\1\3"+
    "\1\0\1\3\3\0\3\3\1\u0106\20\3\1\0\3\3"+
    "\1\0\32\3\1\0\1\3\1\0\1\3\3\0\14\3"+
    "\1\u0107\7\3\1\0\3\3\1\0\32\3\1\0\1\3"+
    "\1\0\1\3\3\0\24\3\1\0\1\3\1\u0108\1\3"+
    "\1\0\32\3\1\0\1\3\1\0\1\3\3\0\24\3"+
    "\1\0\3\3\1\0\13\3\1\u0109\16\3\1\0\1\3"+
    "\1\0\1\3\3\0\1\3\2\302\1\u010a\1\302\2\3"+
    "\1\302\1\52\2\3\2\302\7\3\1\0\3\3\1\0"+
    "\2\3\6\302\2\3\1\302\2\3\1\52\1\302\5\3"+
    "\2\302\4\3\1\0\1\3\1\0\1\3\3\0\24\3"+
    "\1\0\3\3\1\0\14\3\1\313\15\3\1\0\1\3"+
    "\1\0\1\3\3\0\24\3\1\0\3\3\1\0\7\3"+
    "\1\u010b\22\3\1\0\1\3\1\0\1\3\3\0\12\3"+
    "\1\u010c\11\3\1\0\1\u010d\2\3\1\0\16\3\1\u010c"+
    "\13\3\1\0\1\3\1\0\1\3\3\0\24\3\1\0"+
    "\1\3\1\u010e\1\3\1\0\32\3\1\0\1\3\1\0"+
    "\1\3\3\0\24\3\1\0\3\3\1\0\7\3\1\u010f"+
    "\4\3\1\u0110\15\3\1\0\1\3\1\0\1\3\3\0"+
    "\24\3\1\0\1\u0111\2\3\1\0\13\3\1\u0111\1\u0112"+
    "\15\3\1\0\1\3\1\0\1\3\3\0\5\3\1\u0113"+
    "\16\3\1\0\3\3\1\0\30\3\1\u0114\1\3\1\0"+
    "\1\3\1\0\1\3\3\0\24\3\1\0\1\u0115\2\3"+
    "\1\0\7\3\1\u0115\4\3\1\u0116\15\3\1\0\1\3"+
    "\1\0\1\3\3\0\24\3\1\0\1\3\1\u010b\1\3"+
    "\1\0\32\3\1\0\1\3\1\0\1\3\3\0\24\3"+
    "\1\0\3\3\1\0\14\3\1\u0117\15\3\1\0\1\3"+
    "\1\0\1\3\3\0\11\3\1\u0118\12\3\1\0\3\3"+
    "\1\0\32\3\1\0\1\3\1\0\1\3\3\0\20\3"+
    "\1\u0119\3\3\1\0\1\u011a\2\3\1\0\11\3\1\u011b"+
    "\20\3\1\0\1\3\1\0\1\3\3\0\24\3\1\0"+
    "\1\u0115\2\3\1\0\7\3\1\u0115\22\3\1\0\1\3"+
    "\1\0\1\3\3\0\24\3\1\0\1\3\1\u011c\1\3"+
    "\1\0\32\3\1\0\1\3\1\0\1\3\3\0\20\3"+
    "\1\u011d\3\3\1\0\3\3\1\0\32\3\1\0\1\3"+
    "\1\0\1\3\3\0\12\3\1\u010c\11\3\1\0\1\u011e"+
    "\2\3\1\0\16\3\1\u010c\13\3\1\0\1\3\1\0"+
    "\1\3\3\0\24\3\1\0\3\3\1\0\7\3\1\u011f"+
    "\4\3\1\u0110\15\3\1\0\1\3\1\0\1\3\3\0"+
    "\5\3\1\u0120\16\3\1\0\3\3\1\0\30\3\1\u0114"+
    "\1\3\1\0\1\3\1\0\1\3\3\0\24\3\1\0"+
    "\1\u0115\2\3\1\0\7\3\1\u0115\4\3\1\u0121\15\3"+
    "\1\0\1\3\1\0\1\3\3\0\20\3\1\u0119\3\3"+
    "\1\0\1\u0122\2\3\1\0\11\3\1\u011b\20\3\1\0"+
    "\1\3\1\0\1\3\3\0\24\3\1\0\1\u0123\2\3"+
    "\1\0\32\3\1\0\1\3\1\0\1\3\3\0\5\3"+
    "\1\u0124\16\3\1\0\3\3\1\0\32\3\1\0\1\3"+
    "\1\0\1\3\3\0\24\3\1\0\3\3\1\0\7\3"+
    "\1\u0125\22\3\1\0\1\3\1\0\1\3\3\0\24\3"+
    "\1\0\3\3\1\0\7\3\1\u0126\22\3\1\0\1\3"+
    "\1\0\1\3\3\0\24\3\1\0\3\3\1\0\13\3"+
    "\1\u0127\16\3\1\0\1\3\1\0\1\3\3\0\24\3"+
    "\1\0\3\3\1\0\12\3\1\u0128\3\3\1\u010c\13\3"+
    "\1\0\1\3\1\0\1\3\3\0\24\3\1\0\1\3"+
    "\1\u0129\1\3\1\0\32\3\1\0\1\3\1\0\1\3"+
    "\3\0\24\3\1\0\3\3\1\0\7\3\1\u012a\22\3"+
    "\1\0\1\3\1\0\1\3\3\0\24\3\1\0\3\3"+
    "\1\0\7\3\1\u012b\4\3\1\u012c\15\3\1\0\1\3"+
    "\1\0\1\3\3\0\24\3\1\0\3\3\1\0\30\3"+
    "\1\u010b\1\3\1\0\1\3\1\0\1\3\3\0\24\3"+
    "\1\0\1\u010b\2\3\1\0\7\3\1\u010b\4\3\1\u012d"+
    "\15\3\1\0\1\3\1\0\1\3\3\0\11\3\1\u012e"+
    "\12\3\1\0\3\3\1\0\7\3\1\u012f\22\3\1\0"+
    "\1\3\1\0\1\3\3\0\20\3\1\u0119\3\3\1\0"+
    "\1\u0130\2\3\1\0\30\3\1\u0131\1\3\1\0\1\3"+
    "\1\0\1\3\3\0\24\3\1\0\1\u010b\2\3\1\0"+
    "\7\3\1\u010b\22\3\1\0\1\3\1\0\1\3\3\0"+
    "\11\3\1\u0132\2\3\1\u0133\3\3\1\u011d\3\3\1\0"+
    "\3\3\1\0\32\3\1\0\1\3\1\0\1\3\3\0"+
    "\24\3\1\0\3\3\1\0\7\3\1\u0134\22\3\1\0"+
    "\1\3\1\0\1\3\3\0\24\3\1\0\1\3\1\u0135"+
    "\1\3\1\0\32\3\1\0\1\3\1\0\1\3\3\0"+
    "\11\3\1\u012e\12\3\1\0\3\3\1\0\32\3\1\0"+
    "\1\3\1\0\1\3\3\0\12\3\1\u0136\11\3\1\0"+
    "\3\3\1\0\32\3\1\0\1\3\1\0\1\3\3\0"+
    "\24\3\1\0\3\3\1\0\6\3\1\u0137\23\3\1\0"+
    "\1\3\1\0\1\3\3\0\24\3\1\0\3\3\1\0"+
    "\32\3\1\u0138\7\0\2\u0139\1\0\1\u0139\2\0\1\u0139"+
    "\3\0\2\u0139\16\0\6\u0139\2\0\1\u0139\3\0\1\u0139"+
    "\5\0\2\u0139\5\0\1\3\1\0\1\3\3\0\1\3"+
    "\2\355\1\242\1\355\2\3\1\355\3\3\2\355\5\3"+
    "\1\17\1\3\1\0\3\3\1\0\2\3\6\355\2\3"+
    "\1\355\3\3\1\355\5\3\2\355\4\3\1\0\1\3"+
    "\1\0\1\3\3\0\24\3\1\0\3\3\1\0\6\3"+
    "\1\u013a\23\3\1\0\1\3\1\0\1\3\3\0\6\3"+
    "\1\u013b\15\3\1\0\3\3\1\0\32\3\1\0\1\3"+
    "\1\0\1\3\3\0\24\3\1\0\3\3\1\0\14\3"+
    "\1\u013c\15\3\1\0\1\3\1\0\1\3\3\0\24\3"+
    "\1\0\3\3\1\0\17\3\1\u013d\12\3\1\0\1\3"+
    "\1\0\1\3\3\0\20\3\1\u013e\3\3\1\0\3\3"+
    "\1\0\32\3\1\0\1\3\1\0\1\3\3\0\20\3"+
    "\1\u013f\3\3\1\0\3\3\1\0\32\3\1\0\1\3"+
    "\1\0\1\3\3\0\12\3\1\147\11\3\1\0\3\3"+
    "\1\0\32\3\1\0\1\3\1\0\1\3\3\0\24\3"+
    "\1\0\1\u0140\2\3\1\0\32\3\1\0\1\3\1\0"+
    "\1\3\3\0\11\3\1\u0141\12\3\1\0\3\3\1\0"+
    "\32\3\1\0\1\3\1\0\1\3\3\0\12\3\1\u0142"+
    "\11\3\1\0\3\3\1\0\32\3\1\0\1\3\1\0"+
    "\1\3\3\0\12\3\1\u0143\11\3\1\0\3\3\1\0"+
    "\32\3\1\0\1\3\1\0\1\3\3\0\24\3\1\0"+
    "\1\u0144\2\3\1\0\32\3\1\0\1\3\1\0\1\3"+
    "\3\0\24\3\1\0\3\3\1\0\16\3\1\u0145\13\3"+
    "\1\0\1\3\1\0\1\3\3\0\24\3\1\0\3\3"+
    "\1\0\12\3\1\u0146\17\3\1\0\1\3\1\0\1\3"+
    "\3\0\6\3\1\u0147\15\3\1\0\3\3\1\0\32\3"+
    "\1\0\1\3\1\0\1\3\3\0\24\3\1\0\1\u0148"+
    "\2\3\1\0\32\3\1\0\1\3\1\0\1\3\3\0"+
    "\24\3\1\0\3\3\1\0\16\3\1\u0149\13\3\1\0"+
    "\1\3\1\0\1\3\3\0\24\3\1\0\1\3\1\u014a"+
    "\1\3\1\0\32\3\1\0\1\3\1\0\1\3\3\0"+
    "\24\3\1\0\3\3\1\0\13\3\1\u014b\16\3\1\0"+
    "\1\3\1\0\1\3\3\0\24\3\1\0\1\271\2\3"+
    "\1\0\32\3\1\0\1\3\1\0\1\3\3\0\24\3"+
    "\1\0\3\3\1\0\23\3\1\u014c\6\3\1\0\1\3"+
    "\1\0\1\3\3\0\24\3\1\0\3\3\1\0\13\3"+
    "\1\u014d\16\3\1\0\1\3\1\0\1\3\3\0\24\3"+
    "\1\0\3\3\1\0\10\3\1\u014e\21\3\1\0\1\3"+
    "\1\0\1\3\3\0\24\3\1\0\3\3\1\0\7\3"+
    "\1\u014f\22\3\1\0\1\3\1\0\1\3\3\0\1\3"+
    "\2\302\1\3\1\302\2\3\1\302\3\3\2\302\7\3"+
    "\1\0\3\3\1\0\2\3\6\302\2\3\1\302\3\3"+
    "\1\302\5\3\2\302\4\3\1\0\1\3\1\0\1\3"+
    "\3\0\24\3\1\0\3\3\1\0\16\3\1\u010b\13\3"+
    "\1\0\1\3\1\0\1\3\3\0\24\3\1\0\3\3"+
    "\1\0\14\3\1\u0150\15\3\1\0\1\3\1\0\1\3"+
    "\3\0\20\3\1\u0151\3\3\1\0\3\3\1\0\32\3"+
    "\1\0\1\3\1\0\1\3\3\0\11\3\1\u0152\12\3"+
    "\1\0\3\3\1\0\23\3\1\u0115\6\3\1\0\1\3"+
    "\1\0\1\3\3\0\24\3\1\0\1\u0153\2\3\1\0"+
    "\32\3\1\0\1\3\1\0\1\3\3\0\24\3\1\0"+
    "\3\3\1\0\21\3\1\u010b\10\3\1\0\1\3\1\0"+
    "\1\3\3\0\12\3\1\u0154\11\3\1\0\3\3\1\0"+
    "\32\3\1\0\1\3\1\0\1\3\3\0\24\3\1\0"+
    "\1\u0155\2\3\1\0\32\3\1\0\1\3\1\0\1\3"+
    "\3\0\3\3\1\u0156\20\3\1\0\3\3\1\0\32\3"+
    "\1\0\1\3\1\0\1\3\3\0\14\3\1\u0157\7\3"+
    "\1\0\3\3\1\0\32\3\1\0\1\3\1\0\1\3"+
    "\3\0\24\3\1\0\3\3\1\0\15\3\1\u0158\14\3"+
    "\1\0\1\3\1\0\1\3\3\0\24\3\1\0\3\3"+
    "\1\0\27\3\1\u0115\2\3\1\0\1\3\1\0\1\3"+
    "\3\0\24\3\1\0\3\3\1\0\12\3\1\u010b\17\3"+
    "\1\0\1\3\1\0\1\3\3\0\24\3\1\0\3\3"+
    "\1\0\14\3\1\u0159\15\3\1\0\1\3\1\0\1\3"+
    "\3\0\24\3\1\0\1\3\1\u0115\1\3\1\0\13\3"+
    "\1\u010b\16\3\1\0\1\3\1\0\1\3\3\0\14\3"+
    "\1\u015a\7\3\1\0\3\3\1\0\32\3\1\0\1\3"+
    "\1\0\1\3\3\0\24\3\1\0\3\3\1\0\13\3"+
    "\1\u010b\16\3\1\0\1\3\1\0\1\3\3\0\24\3"+
    "\1\0\3\3\1\0\14\3\1\u015b\15\3\1\0\1\3"+
    "\1\0\1\3\3\0\11\3\1\u015c\12\3\1\0\3\3"+
    "\1\0\23\3\1\u0115\6\3\1\0\1\3\1\0\1\3"+
    "\3\0\24\3\1\0\1\u015d\2\3\1\0\32\3\1\0"+
    "\1\3\1\0\1\3\3\0\14\3\1\u015e\7\3\1\0"+
    "\3\3\1\0\32\3\1\0\1\3\1\0\1\3\3\0"+
    "\24\3\1\0\3\3\1\0\14\3\1\u015f\15\3\1\0"+
    "\1\3\1\0\1\3\3\0\1\3\2\u0160\1\3\1\u0160"+
    "\2\3\1\u0160\3\3\2\u0160\7\3\1\0\3\3\1\0"+
    "\2\3\6\u0160\2\3\1\u0160\3\3\1\u0160\5\3\2\u0160"+
    "\4\3\1\0\1\3\1\0\1\3\3\0\13\3\1\u0161"+
    "\10\3\1\0\3\3\1\0\32\3\1\0\1\3\1\0"+
    "\1\3\3\0\14\3\1\u0162\7\3\1\0\3\3\1\0"+
    "\20\3\1\u010b\11\3\1\0\1\3\1\0\1\3\3\0"+
    "\24\3\1\0\3\3\1\0\14\3\1\303\15\3\1\0"+
    "\1\3\1\0\1\3\3\0\24\3\1\0\3\3\1\0"+
    "\17\3\1\u010b\12\3\1\0\1\3\1\0\1\3\3\0"+
    "\20\3\1\u0163\3\3\1\0\3\3\1\0\32\3\1\0"+
    "\1\3\1\0\1\3\3\0\11\3\1\u0164\12\3\1\0"+
    "\3\3\1\0\32\3\1\0\1\3\1\0\1\3\3\0"+
    "\11\3\1\u011d\12\3\1\0\3\3\1\0\32\3\1\0"+
    "\1\3\1\0\1\3\3\0\12\3\1\u0165\11\3\1\0"+
    "\3\3\1\0\15\3\1\u0166\14\3\1\0\1\3\1\0"+
    "\1\3\3\0\14\3\1\u0167\7\3\1\0\3\3\1\0"+
    "\32\3\1\0\1\3\1\0\1\3\3\0\24\3\1\0"+
    "\3\3\1\0\27\3\1\u010b\2\3\1\0\1\3\1\0"+
    "\1\3\3\0\24\3\1\0\3\3\1\0\23\3\1\u0168"+
    "\6\3\1\0\1\3\1\0\1\3\3\0\24\3\1\0"+
    "\3\3\1\0\14\3\1\u0169\15\3\1\0\1\3\1\0"+
    "\1\3\3\0\24\3\1\0\1\3\1\u016a\1\3\1\0"+
    "\32\3\1\0\1\3\1\0\1\3\3\0\12\3\1\u010b"+
    "\11\3\1\0\3\3\1\0\32\3\1\0\1\3\1\0"+
    "\1\3\3\0\5\3\1\u010b\16\3\1\0\3\3\1\0"+
    "\32\3\1\0\1\3\1\0\1\3\3\0\11\3\1\u016b"+
    "\12\3\1\0\3\3\1\0\32\3\1\0\1\3\1\0"+
    "\1\3\3\0\24\3\1\0\3\3\1\0\14\3\1\u016c"+
    "\15\3\1\0\1\3\1\0\1\3\3\0\24\3\1\0"+
    "\3\3\1\0\6\3\1\u0161\23\3\1\0\1\3\1\0"+
    "\1\3\3\0\6\3\1\u016d\15\3\1\0\3\3\1\0"+
    "\32\3\10\0\2\u0139\1\354\1\u0139\2\0\1\u0139\3\0"+
    "\2\u0139\5\0\1\72\10\0\6\u0139\2\0\1\u0139\3\0"+
    "\1\u0139\5\0\2\u0139\5\0\1\3\1\0\1\3\3\0"+
    "\24\3\1\0\3\3\1\0\11\3\1\u016e\20\3\1\0"+
    "\1\3\1\0\1\3\3\0\11\3\1\u016f\1\3\1\u0170"+
    "\10\3\1\0\3\3\1\0\6\3\1\u0171\10\3\1\u0172"+
    "\1\u0173\11\3\1\0\1\3\1\0\1\3\3\0\24\3"+
    "\1\0\3\3\1\0\6\3\1\u0174\23\3\1\0\1\3"+
    "\1\0\1\3\3\0\3\3\1\u0175\20\3\1\0\3\3"+
    "\1\0\32\3\1\0\1\3\1\0\1\3\3\0\24\3"+
    "\1\0\3\3\1\0\13\3\1\u0176\16\3\1\0\1\3"+
    "\1\0\1\3\3\0\12\3\1\u0177\11\3\1\0\3\3"+
    "\1\0\32\3\1\0\1\3\1\0\1\3\3\0\12\3"+
    "\1\u0178\11\3\1\0\3\3\1\0\32\3\1\0\1\3"+
    "\1\0\1\3\3\0\24\3\1\0\1\276\2\3\1\0"+
    "\32\3\1\0\1\3\1\0\1\3\3\0\24\3\1\0"+
    "\1\3\1\u0179\1\3\1\0\32\3\1\0\1\3\1\0"+
    "\1\3\3\0\24\3\1\0\3\3\1\0\13\3\1\u017a"+
    "\16\3\1\0\1\3\1\0\1\3\3\0\24\3\1\0"+
    "\1\u017b\2\3\1\0\17\3\2\u017c\11\3\1\0\1\3"+
    "\1\0\1\3\3\0\24\3\1\0\3\3\1\0\32\3"+
    "\1\u017d\1\3\1\0\1\3\3\0\24\3\1\0\1\3"+
    "\1\u017e\1\3\1\0\32\3\1\0\1\3\1\0\1\3"+
    "\3\0\24\3\1\0\3\3\1\0\7\3\1\u017f\22\3"+
    "\1\0\1\3\1\0\1\3\3\0\24\3\1\0\3\3"+
    "\1\0\14\3\1\u0180\15\3\1\0\1\3\1\0\1\3"+
    "\3\0\24\3\1\0\3\3\1\0\7\3\1\u0181\22\3"+
    "\1\0\1\3\1\0\1\3\3\0\6\3\1\u0182\15\3"+
    "\1\0\3\3\1\0\32\3\1\0\1\3\1\0\1\3"+
    "\3\0\6\3\1\u0183\15\3\1\0\3\3\1\0\32\3"+
    "\1\0\1\3\1\0\1\3\3\0\24\3\1\0\3\3"+
    "\1\0\23\3\1\u0184\6\3\1\0\1\3\1\0\1\3"+
    "\3\0\12\3\1\u0185\11\3\1\0\3\3\1\0\32\3"+
    "\1\0\1\3\1\0\1\3\3\0\12\3\1\u0186\11\3"+
    "\1\0\3\3\1\0\32\3\1\0\1\3\1\0\1\3"+
    "\3\0\24\3\1\0\1\3\1\u010b\1\3\1\0\13\3"+
    "\1\u010b\16\3\1\0\1\3\1\0\1\3\3\0\24\3"+
    "\1\0\3\3\1\0\17\3\1\u0187\7\3\1\u0188\2\3"+
    "\1\0\1\3\1\0\1\3\3\0\24\3\1\0\3\3"+
    "\1\0\7\3\1\u0189\22\3\1\0\1\3\1\0\1\3"+
    "\3\0\20\3\1\u010b\3\3\1\0\3\3\1\0\17\3"+
    "\1\u010b\12\3\1\0\1\3\1\0\1\3\3\0\24\3"+
    "\1\0\3\3\1\0\16\3\1\u018a\13\3\1\0\1\3"+
    "\1\0\1\3\3\0\24\3\1\0\3\3\1\0\6\3"+
    "\1\u018b\23\3\1\0\1\3\1\0\1\3\3\0\24\3"+
    "\1\0\1\3\1\u018c\1\3\1\0\32\3\1\0\1\3"+
    "\1\0\1\3\3\0\24\3\1\0\3\3\1\0\15\3"+
    "\1\u018d\14\3\1\0\1\3\1\0\1\3\3\0\24\3"+
    "\1\0\3\3\1\0\23\3\1\u018e\6\3\1\0\1\3"+
    "\1\0\1\3\3\0\12\3\1\u018f\11\3\1\0\3\3"+
    "\1\0\32\3\1\0\1\3\1\0\1\3\3\0\24\3"+
    "\1\0\3\3\1\0\7\3\1\u0190\22\3\1\0\1\3"+
    "\1\0\1\3\3\0\24\3\1\0\3\3\1\0\16\3"+
    "\1\u0191\13\3\1\0\1\3\1\0\1\3\3\0\24\3"+
    "\1\0\1\3\1\u0192\1\3\1\0\32\3\1\0\1\3"+
    "\1\0\1\3\3\0\1\3\2\u0160\1\u0124\1\u0160\2\3"+
    "\1\u0160\3\3\2\u0160\7\3\1\0\3\3\1\0\2\3"+
    "\6\u0160\2\3\1\u0160\3\3\1\u0160\5\3\2\u0160\4\3"+
    "\1\0\1\3\1\0\1\3\3\0\24\3\1\0\1\3"+
    "\1\u0193\1\3\1\0\32\3\1\0\1\3\1\0\1\3"+
    "\3\0\12\3\1\u0194\11\3\1\0\3\3\1\0\32\3"+
    "\1\0\1\3\1\0\1\3\3\0\12\3\1\u0195\11\3"+
    "\1\0\3\3\1\0\32\3\1\0\1\3\1\0\1\3"+
    "\3\0\24\3\1\0\3\3\1\0\17\3\1\u0196\7\3"+
    "\1\u0197\2\3\1\0\1\3\1\0\1\3\3\0\24\3"+
    "\1\0\3\3\1\0\10\3\1\u0198\21\3\1\0\1\3"+
    "\1\0\1\3\3\0\24\3\1\0\3\3\1\0\16\3"+
    "\1\u0199\13\3\1\0\1\3\1\0\1\3\3\0\24\3"+
    "\1\0\3\3\1\0\14\3\1\u019a\15\3\1\0\1\3"+
    "\1\0\1\3\3\0\24\3\1\0\1\3\1\u019b\1\3"+
    "\1\0\32\3\1\0\1\3\1\0\1\3\3\0\24\3"+
    "\1\0\1\u010b\2\3\1\0\32\3\1\0\1\3\1\0"+
    "\1\3\3\0\12\3\1\u019c\11\3\1\0\3\3\1\0"+
    "\32\3\1\0\1\3\1\0\1\3\3\0\24\3\1\0"+
    "\3\3\1\0\23\3\1\u019d\6\3\1\0\1\3\1\0"+
    "\1\3\3\0\24\3\1\0\3\3\1\0\22\3\1\u019e"+
    "\7\3\1\0\1\3\1\0\1\3\3\0\14\3\1\u019f"+
    "\7\3\1\0\3\3\1\0\32\3\1\0\1\3\1\0"+
    "\1\3\3\0\12\3\1\u01a0\11\3\1\0\3\3\1\0"+
    "\32\3\1\0\1\3\1\0\1\3\3\0\11\3\1\u01a1"+
    "\12\3\1\0\3\3\1\0\32\3\1\0\1\3\1\0"+
    "\1\3\3\0\24\3\1\0\3\3\1\0\14\3\1\u01a2"+
    "\15\3\1\0\1\3\1\0\1\3\3\0\11\3\1\u01a3"+
    "\12\3\1\0\3\3\1\0\7\3\1\u01a4\22\3\1\0"+
    "\1\3\1\0\1\3\3\0\24\3\1\0\1\3\1\u01a5"+
    "\1\3\1\0\7\3\1\u01a4\22\3\1\0\1\3\1\0"+
    "\1\3\3\0\14\3\1\u01a6\7\3\1\0\3\3\1\0"+
    "\32\3\1\0\1\3\1\0\1\3\3\0\12\3\1\u01a7"+
    "\11\3\1\0\3\3\1\0\32\3\1\0\1\3\1\0"+
    "\1\3\3\0\24\3\1\0\3\3\1\0\13\3\1\u01a8"+
    "\16\3\1\0\1\3\1\0\1\3\3\0\24\3\1\0"+
    "\3\3\1\0\6\3\1\u01a9\23\3\1\0\1\3\1\0"+
    "\1\3\3\0\24\3\1\0\3\3\1\0\16\3\1\u01aa"+
    "\13\3\1\0\1\3\1\0\1\3\3\0\24\3\1\0"+
    "\3\3\1\0\14\3\1\u01ab\15\3\1\0\1\3\1\0"+
    "\1\3\3\0\24\3\1\0\3\3\1\0\7\3\1\u01ac"+
    "\22\3\1\0\1\3\1\0\1\3\3\0\24\3\1\0"+
    "\3\3\1\0\7\3\1\u01ad\22\3\1\0\1\3\1\0"+
    "\1\3\3\0\24\3\1\0\3\3\1\0\7\3\1\u01ae"+
    "\22\3\1\0\1\3\1\0\1\3\3\0\24\3\1\0"+
    "\3\3\1\0\14\3\1\u01af\15\3\1\0\1\3\1\0"+
    "\1\3\3\0\24\3\1\0\3\3\1\0\12\3\1\u01b0"+
    "\17\3\1\0\1\3\1\0\1\3\3\0\24\3\1\0"+
    "\3\3\1\0\23\3\1\u01b1\6\3\1\0\1\3\1\0"+
    "\1\3\3\0\24\3\1\0\3\3\1\0\17\3\2\u01b2"+
    "\11\3\1\0\1\3\1\0\1\3\3\0\11\3\1\u01b3"+
    "\1\3\1\u01b4\10\3\1\0\3\3\1\0\6\3\1\u01b5"+
    "\10\3\1\u01b6\1\u01b7\11\3\1\0\1\3\1\0\1\3"+
    "\3\0\11\3\1\u01b8\12\3\1\0\3\3\1\0\32\3"+
    "\1\0\1\3\1\0\1\3\3\0\24\3\1\0\3\3"+
    "\1\0\6\3\1\u01b9\23\3\1\0\1\3\1\0\1\3"+
    "\3\0\24\3\1\0\1\u01ba\2\3\1\0\32\3\1\0"+
    "\1\3\1\0\1\3\3\0\24\3\1\0\1\u01bb\2\3"+
    "\1\0\32\3\1\0\1\3\1\0\1\3\3\0\24\3"+
    "\1\0\3\3\1\0\7\3\1\u01bc\22\3\1\0\1\3"+
    "\1\0\1\3\3\0\12\3\1\u01bd\11\3\1\0\3\3"+
    "\1\0\32\3\1\0\1\3\1\0\1\3\3\0\24\3"+
    "\1\0\3\3\1\0\24\3\1\u01be\1\u01bf\4\3\1\0"+
    "\1\3\1\0\1\3\3\0\12\3\1\u016a\11\3\1\0"+
    "\3\3\1\0\32\3\1\0\1\3\1\0\1\3\3\0"+
    "\24\3\1\0\3\3\1\0\7\3\1\u01c0\22\3\1\0"+
    "\1\3\1\0\1\3\3\0\3\3\1\u01c1\20\3\1\0"+
    "\3\3\1\0\31\3\1\u01c1\1\0\1\3\1\0\1\3"+
    "\3\0\11\3\1\u01c2\12\3\1\0\3\3\1\0\32\3"+
    "\1\0\1\3\1\0\1\3\3\0\24\3\1\0\1\u01c3"+
    "\2\3\1\0\32\3\1\0\1\3\1\0\1\3\3\0"+
    "\12\3\1\u01c4\11\3\1\0\3\3\1\0\32\3\1\0"+
    "\1\3\1\0\1\3\3\0\24\3\1\0\3\3\1\0"+
    "\2\3\1\u01c5\21\3\1\u01be\1\u01bf\4\3\1\0\1\3"+
    "\1\0\1\3\3\0\24\3\1\0\3\3\1\0\7\3"+
    "\1\u01c6\22\3\1\0\1\3\1\0\1\3\3\0\24\3"+
    "\1\0\3\3\1\0\7\3\1\u01c7\22\3\1\0\1\3"+
    "\1\0\1\3\3\0\24\3\1\0\3\3\1\0\6\3"+
    "\1\u010b\23\3\1\0\1\3\1\0\1\3\3\0\24\3"+
    "\1\0\1\u01c8\2\3\1\0\32\3\1\0\1\3\1\0"+
    "\1\3\3\0\24\3\1\0\1\u01c9\2\3\1\0\32\3"+
    "\1\0\1\3\1\0\1\3\3\0\24\3\1\0\3\3"+
    "\1\0\7\3\1\u01ca\22\3\1\0\1\3\1\0\1\3"+
    "\3\0\24\3\1\0\3\3\1\0\17\3\1\u01cb\12\3"+
    "\1\0\1\3\1\0\1\3\3\0\24\3\1\0\1\u01cc"+
    "\2\3\1\0\32\3\1\0\1\3\1\0\1\3\3\0"+
    "\24\3\1\0\3\3\1\0\7\3\1\u0199\22\3\1\0"+
    "\1\3\1\0\1\3\3\0\24\3\1\0\1\u01cd\2\3"+
    "\1\0\32\3\1\0\1\3\1\0\1\3\3\0\24\3"+
    "\1\0\3\3\1\0\14\3\1\u01ce\15\3\1\0\1\3"+
    "\1\0\1\3\3\0\14\3\1\u01cf\7\3\1\0\3\3"+
    "\1\0\32\3\1\0\1\3\1\0\1\3\3\0\24\3"+
    "\1\0\3\3\1\0\12\3\1\u01d0\17\3\1\0\1\3"+
    "\1\0\1\3\3\0\11\3\1\u01d1\12\3\1\0\3\3"+
    "\1\0\32\3\1\0\1\3\1\0\1\3\3\0\24\3"+
    "\1\0\3\3\1\0\13\3\1\u01d2\16\3\1\0\1\3"+
    "\1\0\1\3\3\0\24\3\1\0\3\3\1\0\15\3"+
    "\1\u01d3\14\3\1\0\1\3\1\0\1\3\3\0\24\3"+
    "\1\0\3\3\1\0\21\3\1\u01d4\10\3\1\0\1\3"+
    "\1\0\1\3\3\0\24\3\1\0\1\u01d5\2\3\1\0"+
    "\32\3\1\0\1\3\1\0\1\3\3\0\24\3\1\0"+
    "\3\3\1\0\14\3\1\u01d6\15\3\1\0\1\3\1\0"+
    "\1\3\3\0\24\3\1\0\3\3\1\0\13\3\1\u01d7"+
    "\16\3\1\0\1\3\1\0\1\3\3\0\20\3\1\u01d8"+
    "\3\3\1\0\3\3\1\0\32\3\1\0\1\3\1\0"+
    "\1\3\3\0\11\3\1\u01d9\12\3\1\0\3\3\1\0"+
    "\32\3\1\0\1\3\1\0\1\3\3\0\24\3\1\0"+
    "\3\3\1\0\15\3\1\u01da\14\3\1\0\1\3\1\0"+
    "\1\3\3\0\24\3\1\0\3\3\1\0\7\3\1\u01d7"+
    "\22\3\1\0\1\3\1\0\1\3\3\0\24\3\1\0"+
    "\1\u01d7\2\3\1\0\32\3\1\0\1\3\1\0\1\3"+
    "\3\0\24\3\1\0\3\3\1\0\15\3\1\u01db\14\3"+
    "\1\0\1\3\1\0\1\3\3\0\14\3\1\u01dc\7\3"+
    "\1\0\3\3\1\0\32\3\1\0\1\3\1\0\1\3"+
    "\3\0\24\3\1\0\3\3\1\0\14\3\1\u01dd\15\3"+
    "\1\0\1\3\1\0\1\3\3\0\24\3\1\0\3\3"+
    "\1\0\7\3\1\u01de\22\3\1\0\1\3\1\0\1\3"+
    "\3\0\12\3\1\u01df\11\3\1\0\3\3\1\0\32\3"+
    "\1\0\1\3\1\0\1\3\3\0\11\3\1\u01e0\12\3"+
    "\1\0\3\3\1\0\32\3\1\0\1\3\1\0\1\3"+
    "\3\0\24\3\1\0\3\3\1\0\14\3\1\u01e1\15\3"+
    "\1\0\1\3\1\0\1\3\3\0\11\3\1\u01e2\12\3"+
    "\1\0\3\3\1\0\32\3\1\0\1\3\1\0\1\3"+
    "\3\0\24\3\1\0\1\3\1\u01e3\1\3\1\0\32\3"+
    "\1\0\1\3\1\0\1\3\3\0\24\3\1\0\3\3"+
    "\1\0\6\3\1\u01e4\23\3\1\0\1\3\1\0\1\3"+
    "\3\0\3\3\1\u01e5\20\3\1\0\3\3\1\0\32\3"+
    "\1\0\1\3\1\0\1\3\3\0\24\3\1\0\3\3"+
    "\1\0\7\3\1\u01e6\22\3\1\0\1\3\1\0\1\3"+
    "\3\0\24\3\1\0\1\3\1\u01e7\1\3\1\0\32\3"+
    "\1\0\1\3\1\0\1\3\3\0\24\3\1\0\3\3"+
    "\1\0\16\3\1\u01e8\13\3\1\0\1\3\1\0\1\3"+
    "\3\0\3\3\1\u01e9\20\3\1\0\3\3\1\0\32\3"+
    "\1\0\1\3\1\0\1\3\3\0\24\3\1\0\3\3"+
    "\1\0\4\3\1\u01be\25\3\1\0\1\3\1\0\1\3"+
    "\3\0\24\3\1\0\3\3\1\0\24\3\1\u0199\1\u01ea"+
    "\4\3\1\0\1\3\1\0\1\3\3\0\11\3\1\u01eb"+
    "\12\3\1\0\3\3\1\0\32\3\1\0\1\3\1\0"+
    "\1\3\3\0\24\3\1\0\3\3\1\0\6\3\1\u01ec"+
    "\23\3\1\0\1\3\1\0\1\3\3\0\24\3\1\0"+
    "\3\3\1\0\7\3\1\u01ed\22\3\1\0\1\3\1\0"+
    "\1\3\3\0\24\3\1\0\3\3\1\0\16\3\1\u01ee"+
    "\13\3\1\0\1\3\1\0\1\3\3\0\24\3\1\0"+
    "\3\3\1\0\3\3\1\u01be\26\3\1\0\1\3\1\0"+
    "\1\3\3\0\24\3\1\0\3\3\1\0\2\3\1\u01ef"+
    "\21\3\1\u0199\1\u01ea\4\3\1\0\1\3\1\0\1\3"+
    "\3\0\24\3\1\0\3\3\1\0\17\3\1\u016a\12\3"+
    "\1\0\1\3\1\0\1\3\3\0\24\3\1\0\3\3"+
    "\1\0\7\3\1\u01f0\22\3\1\0\1\3\1\0\1\3"+
    "\3\0\24\3\1\0\1\3\1\u01f1\1\3\1\0\32\3"+
    "\1\0\1\3\1\0\1\3\3\0\11\3\1\u01f2\12\3"+
    "\1\0\3\3\1\0\32\3\1\0\1\3\1\0\1\3"+
    "\3\0\24\3\1\0\3\3\1\0\7\3\1\u01f3\22\3"+
    "\1\0\1\3\1\0\1\3\3\0\24\3\1\0\3\3"+
    "\1\0\7\3\1\u01f4\22\3\1\0\1\3\1\0\1\3"+
    "\3\0\24\3\1\0\1\u01f5\2\3\1\0\32\3\1\0"+
    "\1\3\1\0\1\3\3\0\24\3\1\0\3\3\1\0"+
    "\26\3\1\u019b\3\3\1\0\1\3\1\0\1\3\3\0"+
    "\24\3\1\0\3\3\1\0\13\3\1\u01f6\16\3\1\0"+
    "\1\3\1\0\1\3\3\0\24\3\1\0\1\u01f7\2\3"+
    "\1\0\32\3\1\0\1\3\1\0\1\3\3\0\24\3"+
    "\1\0\3\3\1\0\13\3\1\u01d5\16\3\1\0\1\3"+
    "\1\0\1\3\3\0\24\3\1\0\3\3\1\0\10\3"+
    "\1\u01f8\21\3\1\0\1\3\1\0\1\3\3\0\24\3"+
    "\1\0\3\3\1\0\7\3\1\u01d5\22\3\1\0\1\3"+
    "\1\0\1\3\3\0\24\3\1\0\3\3\1\0\22\3"+
    "\1\u01d5\7\3\1\0\1\3\1\0\1\3\3\0\24\3"+
    "\1\0\3\3\1\0\13\3\1\u01f9\16\3\1\0\1\3"+
    "\1\0\1\3\3\0\24\3\1\0\1\3\1\u01fa\1\3"+
    "\1\0\32\3\1\0\1\3\1\0\1\3\3\0\24\3"+
    "\1\0\3\3\1\0\13\3\1\u01fb\16\3\1\0\1\3"+
    "\1\0\1\3\3\0\24\3\1\0\1\3\1\u01fc\1\3"+
    "\1\0\32\3\1\0\1\3\1\0\1\3\3\0\24\3"+
    "\1\0\1\u01fb\2\3\1\0\32\3\1\0\1\3\1\0"+
    "\1\3\3\0\11\3\1\u01fd\12\3\1\0\3\3\1\0"+
    "\32\3\1\0\1\3\1\0\1\3\3\0\24\3\1\0"+
    "\3\3\1\0\13\3\1\u01fe\16\3\1\0\1\3\1\0"+
    "\1\3\3\0\24\3\1\0\3\3\1\0\15\3\1\u01fc"+
    "\14\3\1\0\1\3\1\0\1\3\3\0\24\3\1\0"+
    "\3\3\1\0\21\3\1\u01ff\10\3\1\0\1\3\1\0"+
    "\1\3\3\0\24\3\1\0\3\3\1\0\14\3\1\u0200"+
    "\15\3\1\0\1\3\1\0\1\3\3\0\6\3\1\u0201"+
    "\15\3\1\0\3\3\1\0\32\3\1\0\1\3\1\0"+
    "\1\3\3\0\13\3\1\u0202\4\3\1\u0203\3\3\1\0"+
    "\3\3\1\0\17\3\1\u0204\12\3\1\0\1\3\1\0"+
    "\1\3\3\0\24\3\1\0\1\3\1\u0205\1\3\1\0"+
    "\32\3\1\0\1\3\1\0\1\3\3\0\24\3\1\0"+
    "\1\u0206\2\3\1\0\32\3\1\0\1\3\1\0\1\3"+
    "\3\0\24\3\1\0\3\3\1\0\24\3\1\u0207\1\u0208"+
    "\4\3\1\0\1\3\1\0\1\3\3\0\20\3\1\u0199"+
    "\3\3\1\0\3\3\1\0\17\3\1\u0199\12\3\1\0"+
    "\1\3\1\0\1\3\3\0\24\3\1\0\3\3\1\0"+
    "\4\3\1\u0199\25\3\1\0\1\3\1\0\1\3\3\0"+
    "\24\3\1\0\3\3\1\0\4\3\1\u0209\25\3\1\0"+
    "\1\3\1\0\1\3\3\0\6\3\1\u020a\15\3\1\0"+
    "\3\3\1\0\32\3\1\0\1\3\1\0\1\3\3\0"+
    "\24\3\1\0\1\3\1\u020b\1\3\1\0\32\3\1\0"+
    "\1\3\1\0\1\3\3\0\3\3\1\u020c\20\3\1\0"+
    "\3\3\1\0\2\3\1\u020d\21\3\1\u0207\1\u0208\4\3"+
    "\1\0\1\3\1\0\1\3\3\0\24\3\1\0\3\3"+
    "\1\0\3\3\1\u0199\26\3\1\0\1\3\1\0\1\3"+
    "\3\0\24\3\1\0\1\3\1\u020e\1\3\1\0\32\3"+
    "\1\0\1\3\1\0\1\3\3\0\24\3\1\0\1\u020f"+
    "\2\3\1\0\32\3\1\0\1\3\1\0\1\3\3\0"+
    "\24\3\1\0\3\3\1\0\20\3\1\u0132\11\3\1\0"+
    "\1\3\1\0\1\3\3\0\3\3\1\u0210\20\3\1\0"+
    "\3\3\1\0\31\3\1\u0210\1\0\1\3\1\0\1\3"+
    "\3\0\24\3\1\0\1\3\1\u0211\1\3\1\0\32\3"+
    "\1\0\1\3\1\0\1\3\3\0\24\3\1\0\3\3"+
    "\1\0\7\3\1\u0212\22\3\1\0\1\3\1\0\1\3"+
    "\3\0\24\3\1\0\3\3\1\0\7\3\1\147\22\3"+
    "\1\0\1\3\1\0\1\3\3\0\24\3\1\0\3\3"+
    "\1\0\13\3\1\u0213\16\3\1\0\1\3\1\0\1\3"+
    "\3\0\24\3\1\0\3\3\1\0\7\3\1\u0214\22\3"+
    "\1\0\1\3\1\0\1\3\3\0\24\3\1\0\3\3"+
    "\1\0\10\3\1\u0215\21\3\1\0\1\3\1\0\1\3"+
    "\3\0\24\3\1\0\1\u01db\2\3\1\0\32\3\1\0"+
    "\1\3\1\0\1\3\3\0\24\3\1\0\3\3\1\0"+
    "\13\3\1\u0215\16\3\1\0\1\3\1\0\1\3\3\0"+
    "\24\3\1\0\3\3\1\0\7\3\1\u0215\22\3\1\0"+
    "\1\3\1\0\1\3\3\0\24\3\1\0\3\3\1\0"+
    "\22\3\1\u0215\7\3\1\0\1\3\1\0\1\3\3\0"+
    "\24\3\1\0\1\3\1\u0216\1\3\1\0\13\3\1\u0217"+
    "\3\3\1\u0218\2\3\1\u0219\7\3\1\0\1\3\1\0"+
    "\1\3\3\0\24\3\1\0\3\3\1\0\2\3\1\u021a"+
    "\1\3\1\u021b\25\3\1\0\1\3\1\0\1\3\3\0"+
    "\24\3\1\0\3\3\1\0\31\3\1\u021c\1\0\1\3"+
    "\1\0\1\3\3\0\14\3\1\u021d\7\3\1\0\3\3"+
    "\1\0\31\3\1\u021c\1\0\1\3\1\0\1\3\3\0"+
    "\24\3\1\0\3\3\1\0\15\3\1\u021e\14\3\1\0"+
    "\1\3\1\0\1\3\3\0\3\3\1\u021f\20\3\1\0"+
    "\3\3\1\0\32\3\1\0\1\3\1\0\1\3\3\0"+
    "\3\3\1\u0128\20\3\1\0\3\3\1\0\32\3\1\0"+
    "\1\3\1\0\1\3\3\0\24\3\1\0\3\3\1\0"+
    "\4\3\1\u0207\25\3\1\0\1\3\1\0\1\3\3\0"+
    "\24\3\1\0\3\3\1\0\5\3\1\u010b\24\3\1\0"+
    "\1\3\1\0\1\3\3\0\24\3\1\0\1\3\1\u0220"+
    "\1\3\1\0\13\3\1\u0221\3\3\1\u0222\2\3\1\u0219"+
    "\7\3\1\0\1\3\1\0\1\3\3\0\24\3\1\0"+
    "\3\3\1\0\15\3\1\u0223\14\3\1\0\1\3\1\0"+
    "\1\3\3\0\11\3\1\u0224\6\3\1\u0225\3\3\1\0"+
    "\3\3\1\0\17\3\1\u0225\12\3\1\0\1\3\1\0"+
    "\1\3\3\0\24\3\1\0\3\3\1\0\3\3\1\u0207"+
    "\26\3\1\0\1\3\1\0\1\3\3\0\24\3\1\0"+
    "\3\3\1\0\15\3\1\u0226\14\3\1\0\1\3\1\0"+
    "\1\3\3\0\3\3\1\u0227\20\3\1\0\3\3\1\0"+
    "\32\3\1\0\1\3\1\0\1\3\3\0\13\3\1\u01eb"+
    "\10\3\1\0\3\3\1\0\32\3\1\0\1\3\1\0"+
    "\1\3\3\0\24\3\1\0\3\3\1\0\15\3\1\u0228"+
    "\14\3\1\0\1\3\1\0\1\3\3\0\3\3\1\u0229"+
    "\20\3\1\0\3\3\1\0\31\3\1\u0229\1\0\1\3"+
    "\1\0\1\3\3\0\24\3\1\0\3\3\1\0\6\3"+
    "\1\u022a\23\3\1\0\1\3\1\0\1\3\3\0\24\3"+
    "\1\0\3\3\1\0\23\3\1\u022b\6\3\1\0\1\3"+
    "\1\0\1\3\3\0\24\3\1\0\3\3\1\0\14\3"+
    "\1\u0116\15\3\1\0\1\3\1\0\1\3\3\0\24\3"+
    "\1\0\1\u011a\2\3\1\0\32\3\1\0\1\3\1\0"+
    "\1\3\3\0\14\3\1\u022c\7\3\1\0\3\3\1\0"+
    "\32\3\1\0\1\3\1\0\1\3\3\0\24\3\1\0"+
    "\3\3\1\0\3\3\1\u0115\26\3\1\0\1\3\1\0"+
    "\1\3\3\0\24\3\1\0\3\3\1\0\5\3\1\u0115"+
    "\24\3\1\0\1\3\1\0\1\3\3\0\13\3\1\u022d"+
    "\10\3\1\0\3\3\1\0\32\3\1\0\1\3\1\0"+
    "\1\3\3\0\24\3\1\0\1\u0202\2\3\1\0\32\3"+
    "\1\0\1\3\1\0\1\3\3\0\24\3\1\0\1\3"+
    "\1\u022e\1\3\1\0\32\3\1\0\1\3\1\0\1\3"+
    "\3\0\20\3\1\u022f\3\3\1\0\3\3\1\0\17\3"+
    "\1\u022f\12\3\1\0\1\3\1\0\1\3\3\0\24\3"+
    "\1\0\3\3\1\0\23\3\1\u0230\6\3\1\0\1\3"+
    "\1\0\1\3\3\0\24\3\1\0\3\3\1\0\14\3"+
    "\1\u0121\15\3\1\0\1\3\1\0\1\3\3\0\24\3"+
    "\1\0\1\u0122\2\3\1\0\32\3\1\0\1\3\1\0"+
    "\1\3\3\0\24\3\1\0\1\3\1\u0231\1\3\1\0"+
    "\32\3\1\0\1\3\1\0\1\3\3\0\24\3\1\0"+
    "\3\3\1\0\2\3\1\u0232\27\3\1\0\1\3\1\0"+
    "\1\3\3\0\24\3\1\0\3\3\1\0\31\3\1\u0233"+
    "\1\0\1\3\1\0\1\3\3\0\24\3\1\0\1\3"+
    "\1\u0234\1\3\1\0\32\3\1\0\1\3\1\0\1\3"+
    "\3\0\11\3\1\u0202\6\3\1\u022f\3\3\1\0\3\3"+
    "\1\0\17\3\1\u022f\12\3\1\0\1\3\1\0\1\3"+
    "\3\0\24\3\1\0\1\3\1\u0235\1\3\1\0\32\3"+
    "\1\0\1\3\1\0\1\3\3\0\13\3\1\u0236\10\3"+
    "\1\0\3\3\1\0\32\3\1\0\1\3\1\0\1\3"+
    "\3\0\24\3\1\0\1\u0237\2\3\1\0\32\3\1\0"+
    "\1\3\1\0\1\3\3\0\24\3\1\0\3\3\1\0"+
    "\22\3\1\u0238\7\3\1\0\1\3\1\0\1\3\3\0"+
    "\11\3\1\u0239\12\3\1\0\3\3\1\0\32\3\1\0"+
    "\1\3\1\0\1\3\3\0\24\3\1\0\3\3\1\0"+
    "\2\3\1\u023a\1\3\1\u0209\25\3\1\0\1\3\1\0"+
    "\1\3\3\0\24\3\1\0\3\3\1\0\7\3\1\u023b"+
    "\22\3\1\0\1\3\1\0\1\3\3\0\24\3\1\0"+
    "\3\3\1\0\31\3\1\u023c\1\0\1\3\1\0\1\3"+
    "\3\0\24\3\1\0\3\3\1\0\22\3\1\u023d\7\3"+
    "\1\0\1\3\1\0\1\3\3\0\24\3\1\0\3\3"+
    "\1\0\7\3\1\u023e\22\3\1\0\1\3\1\0\1\3"+
    "\3\0\24\3\1\0\3\3\1\0\3\3\1\u0156\26\3"+
    "\1\0\1\3\1\0\1\3\3\0\11\3\1\u0236\12\3"+
    "\1\0\3\3\1\0\32\3\1\0\1\3\1\0\1\3"+
    "\3\0\24\3\1\0\3\3\1\0\7\3\1\u023f\22\3"+
    "\1\0\1\3\1\0\1\3\3\0\24\3\1\0\3\3"+
    "\1\0\7\3\1\u0240\22\3\1\0\1\3\1\0\1\3"+
    "\3\0\24\3\1\0\3\3\1\0\2\3\1\u023a\27\3"+
    "\1\0\1\3\1\0\1\3\3\0\6\3\1\u0241\15\3"+
    "\1\0\3\3\1\0\24\3\1\u0242\1\u0243\4\3\1\0"+
    "\1\3\1\0\1\3\3\0\24\3\1\0\1\u0199\2\3"+
    "\1\0\32\3\1\0\1\3\1\0\1\3\3\0\24\3"+
    "\1\0\3\3\1\0\3\3\1\u010b\26\3\1\0\1\3"+
    "\1\0\1\3\3\0\24\3\1\0\1\u0212\2\3\1\0"+
    "\32\3\1\0\1\3\1\0\1\3\3\0\11\3\1\u022d"+
    "\12\3\1\0\3\3\1\0\32\3\1\0\1\3\1\0"+
    "\1\3\3\0\6\3\1\u0241\15\3\1\0\3\3\1\0"+
    "\2\3\1\u0244\21\3\1\u0242\1\u0243\4\3\1\0\1\3"+
    "\1\0\1\3\3\0\24\3\1\0\1\u01f3\2\3\1\0"+
    "\32\3\1\0\1\3\1\0\1\3\3\0\24\3\1\0"+
    "\1\u0245\2\3\1\0\32\3\1\0\1\3\1\0\1\3"+
    "\3\0\24\3\1\0\1\u018d\2\3\1\0\32\3\1\0"+
    "\1\3\1\0\1\3\3\0\5\3\1\u0246\6\3\1\u0247"+
    "\7\3\1\0\3\3\1\0\6\3\1\u0248\5\3\1\u0249"+
    "\2\3\1\u024a\12\3\1\0\1\3\1\0\1\3\3\0"+
    "\3\3\1\u024b\20\3\1\0\3\3\1\0\32\3\1\0"+
    "\1\3\1\0\1\3\3\0\24\3\1\0\3\3\1\0"+
    "\4\3\1\u0242\25\3\1\0\1\3\1\0\1\3\3\0"+
    "\24\3\1\0\3\3\1\0\3\3\1\u0242\26\3\1\0"+
    "\1\3\1\0\1\3\3\0\3\3\1\u0233\20\3\1\0"+
    "\3\3\1\0\31\3\1\u0233\1\0\1\3\1\0\1\3"+
    "\3\0\24\3\1\0\3\3\1\0\6\3\1\u024c\5\3"+
    "\1\u0249\15\3\1\0\1\3\1\0\1\3\3\0\12\3"+
    "\1\u0167\11\3\1\0\3\3\1\0\16\3\1\u0167\13\3"+
    "\1\0\1\3\1\0\1\3\3\0\24\3\1\0\3\3"+
    "\1\0\23\3\1\u024d\6\3\1\0\1\3\1\0\1\3"+
    "\3\0\24\3\1\0\1\3\1\u0199\1\3\1\0\32\3"+
    "\1\0\1\3\1\0\1\3\3\0\20\3\1\u024e\3\3"+
    "\1\0\3\3\1\0\32\3\1\0\1\3\1\0\1\3"+
    "\3\0\20\3\1\u024f\3\3\1\0\3\3\1\0\32\3"+
    "\1\0\1\3\1\0\1\3\3\0\24\3\1\0\3\3"+
    "\1\0\11\3\1\u0250\20\3\1\0\1\3\1\0\1\3"+
    "\3\0\24\3\1\0\3\3\1\0\15\3\1\u0251\14\3"+
    "\1\0\1\3\1\0\1\3\3\0\24\3\1\0\3\3"+
    "\1\0\12\3\1\u0199\17\3\1\0\1\3\1\0\1\3"+
    "\3\0\6\3\1\u0241\15\3\1\0\3\3\1\0\32\3"+
    "\1\0\1\3\1\0\1\3\3\0\24\3\1\0\3\3"+
    "\1\0\20\3\1\u0199\11\3\1\0\1\3\1\0\1\3"+
    "\3\0\5\3\1\u0252\16\3\1\0\3\3\1\0\32\3"+
    "\1\0\1\3\1\0\1\3\3\0\24\3\1\0\3\3"+
    "\1\0\6\3\1\u024c\23\3\1\0";

  private static int [] zzUnpackTrans() {
    int [] result = new int[31552];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /* error codes */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  private static final int ZZ_NO_MATCH = 1;
  private static final int ZZ_PUSHBACK_2BIG = 2;

  /* error messages for the codes above */
  private static final String[] ZZ_ERROR_MSG = {
    "Unknown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state <code>aState</code>
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\2\0\4\1\1\11\26\1\2\11\3\1\1\11\26\1"+
    "\1\0\36\1\2\11\23\1\1\11\1\0\60\1\2\0"+
    "\112\1\1\0\113\1\1\11\1\0\103\1\1\11\325\1";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[594];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** the input device */
  private java.io.Reader zzReader;

  /** the current state of the DFA */
  private int zzState;

  /** the current lexical state */
  private int zzLexicalState = YYINITIAL;

  /** this buffer contains the current text to be matched and is
      the source of the yytext() string */
  private CharSequence zzBuffer = "";

  /** the textposition at the last accepting state */
  private int zzMarkedPos;

  /** the current text position in the buffer */
  private int zzCurrentPos;

  /** startRead marks the beginning of the yytext() string in the buffer */
  private int zzStartRead;

  /** endRead marks the last character in the buffer, that has been read
      from input */
  private int zzEndRead;

  /**
   * zzAtBOL == true <=> the scanner is currently at the beginning of a line
   */
  private boolean zzAtBOL = true;

  /** zzAtEOF == true <=> the scanner is at the EOF */
  private boolean zzAtEOF;

  /** denotes if the user-EOF-code has already been executed */
  private boolean zzEOFDone;

  /* user code: */
  public _WebAssemblyLexer() {
    this((java.io.Reader)null);
  }
    private int blockCommentStart;
    private int blockCommentDepth;


  /**
   * Creates a new scanner
   *
   * @param   in  the java.io.Reader to read input from.
   */
  _WebAssemblyLexer(java.io.Reader in) {
    this.zzReader = in;
  }


  /** 
   * Unpacks the compressed character translation table.
   *
   * @param packed   the packed character translation table
   * @return         the unpacked character translation table
   */
  private static char [] zzUnpackCMap(String packed) {
    int size = 0;
    for (int i = 0, length = packed.length(); i < length; i += 2) {
      size += packed.charAt(i);
    }
    char[] map = new char[size];
    int i = 0;  /* index in packed string  */
    int j = 0;  /* index in unpacked array */
    while (i < packed.length()) {
      int  count = packed.charAt(i++);
      char value = packed.charAt(i++);
      do map[j++] = value; while (--count > 0);
    }
    return map;
  }

  public final int getTokenStart() {
    return zzStartRead;
  }

  public final int getTokenEnd() {
    return getTokenStart() + yylength();
  }

  public void reset(CharSequence buffer, int start, int end, int initialState) {
    zzBuffer = buffer;
    zzCurrentPos = zzMarkedPos = zzStartRead = start;
    zzAtEOF  = false;
    zzAtBOL = true;
    zzEndRead = end;
    yybegin(initialState);
  }

  /**
   * Refills the input buffer.
   *
   * @return      <code>false</code>, iff there was new input.
   *
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  private boolean zzRefill() throws java.io.IOException {
    return true;
  }


  /**
   * Returns the current lexical state.
   */
  public final int yystate() {
    return zzLexicalState;
  }


  /**
   * Enters a new lexical state
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   */
  public final CharSequence yytext() {
    return zzBuffer.subSequence(zzStartRead, zzMarkedPos);
  }


  /**
   * Returns the character at position <tt>pos</tt> from the
   * matched text.
   *
   * It is equivalent to yytext().charAt(pos), but faster
   *
   * @param pos the position of the character to fetch.
   *            A value from 0 to yylength()-1.
   *
   * @return the character at position pos
   */
  public final char yycharat(int pos) {
    return zzBuffer.charAt(zzStartRead+pos);
  }


  /**
   * Returns the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occured while scanning.
   *
   * In a wellformed scanner (no or only correct usage of
   * yypushback(int) and a match-all fallback rule) this method
   * will only be called with things that "Can't Possibly Happen".
   * If this method is called, something is seriously wrong
   * (e.g. a JFlex bug producing a faulty scanner etc.).
   *
   * Usual syntax/scanner level error handling should be done
   * in error fallback rules.
   *
   * @param   errorCode  the code of the errormessage to display
   */
  private void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    }
    catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  }


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * They will be read again by then next call of the scanning method
   *
   * @param number  the number of characters to be read again.
   *                This number must not be greater than yylength()!
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }


  /**
   * Resumes scanning until the next regular expression is matched,
   * the end of input is encountered or an I/O-Error occurs.
   *
   * @return      the next token
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  public IElementType advance() throws java.io.IOException {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    CharSequence zzBufferL = zzBuffer;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;

      zzState = ZZ_LEXSTATE[zzLexicalState];

      // set up zzAction for empty match case:
      int zzAttributes = zzAttrL[zzState];
      if ( (zzAttributes & 1) == 1 ) {
        zzAction = zzState;
      }


      zzForAction: {
        while (true) {

          if (zzCurrentPosL < zzEndReadL) {
            zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL/*, zzEndReadL*/);
            zzCurrentPosL += Character.charCount(zzInput);
          }
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL/*, zzEndReadL*/);
              zzCurrentPosL += Character.charCount(zzInput);
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + ZZ_CMAP(zzInput) ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
        zzAtEOF = true;
        switch (zzLexicalState) {
            case BLOCKCOMMENTST: {
              yybegin(YYINITIAL);
        zzStartRead = blockCommentStart;
        return BLOCK_COMMENT;
            }  // fall though
            case 595: break;
            default:
        return null;
        }
      }
      else {
        switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
          case 1: 
            { return BAD_TOKEN;
            } 
            // fall through
          case 66: break;
          case 2: 
            { return TokenType.WHITE_SPACE;
            } 
            // fall through
          case 67: break;
          case 3: 
            { return LPAR;
            } 
            // fall through
          case 68: break;
          case 4: 
            { return RPAR;
            } 
            // fall through
          case 69: break;
          case 5: 
            { return UNSIGNED;
            } 
            // fall through
          case 70: break;
          case 6: 
            { return TokenType.BAD_CHARACTER;
            } 
            // fall through
          case 71: break;
          case 7: 
            { 
            } 
            // fall through
          case 72: break;
          case 8: 
            { return LINE_COMMENT;
            } 
            // fall through
          case 73: break;
          case 9: 
            { yybegin(BLOCKCOMMENTST); blockCommentDepth = 0; blockCommentStart = getTokenStart();
            } 
            // fall through
          case 74: break;
          case 10: 
            { return SIGNED;
            } 
            // fall through
          case 75: break;
          case 11: 
            { return FLOAT;
            } 
            // fall through
          case 76: break;
          case 12: 
            { return IFKEY;
            } 
            // fall through
          case 77: break;
          case 13: 
            { return STRING;
            } 
            // fall through
          case 78: break;
          case 14: 
            { return IDENTIFIER;
            } 
            // fall through
          case 79: break;
          case 15: 
            { return CONTROLINSTR_IDX;
            } 
            // fall through
          case 80: break;
          case 16: 
            { if (blockCommentDepth > 0) {
            blockCommentDepth--;
        } else {
            yybegin(YYINITIAL);
            zzStartRead = blockCommentStart;
            return BLOCK_COMMENT;
        }
            } 
            // fall through
          case 81: break;
          case 17: 
            { blockCommentDepth++;
            } 
            // fall through
          case 82: break;
          case 18: 
            { return NUMTYPE;
            } 
            // fall through
          case 83: break;
          case 19: 
            { return CONTROLINSTR;
            } 
            // fall through
          case 84: break;
          case 20: 
            { return ENDKEY;
            } 
            // fall through
          case 85: break;
          case 21: 
            { return MUTKEY;
            } 
            // fall through
          case 86: break;
          case 22: 
            { return ITEMKEY;
            } 
            // fall through
          case 87: break;
          case 23: 
            { return FUNCKEY;
            } 
            // fall through
          case 88: break;
          case 24: 
            { return TYPEKEY;
            } 
            // fall through
          case 89: break;
          case 25: 
            { return THENKEY;
            } 
            // fall through
          case 90: break;
          case 26: 
            { return CALLINSTR;
            } 
            // fall through
          case 91: break;
          case 27: 
            { return ELEMKEY;
            } 
            // fall through
          case 92: break;
          case 28: 
            { return ELSEKEY;
            } 
            // fall through
          case 93: break;
          case 29: 
            { return LOOPKEY;
            } 
            // fall through
          case 94: break;
          case 30: 
            { return DATAKEY;
            } 
            // fall through
          case 95: break;
          case 31: 
            { return PARAMETRICINSTR;
            } 
            // fall through
          case 96: break;
          case 32: 
            { return TABLEKEY;
            } 
            // fall through
          case 97: break;
          case 33: 
            { return BLOCKKEY;
            } 
            // fall through
          case 98: break;
          case 34: 
            { return LOCALKEY;
            } 
            // fall through
          case 99: break;
          case 35: 
            { return PARAMKEY;
            } 
            // fall through
          case 100: break;
          case 36: 
            { return STARTKEY;
            } 
            // fall through
          case 101: break;
          case 37: 
            { return NUMERICINSTR;
            } 
            // fall through
          case 102: break;
          case 38: 
            { return IMPORTKEY;
            } 
            // fall through
          case 103: break;
          case 39: 
            { return ALIGNEQKEY;
            } 
            // fall through
          case 104: break;
          case 40: 
            { return RESULTKEY;
            } 
            // fall through
          case 105: break;
          case 41: 
            { return EXTERNKEY;
            } 
            // fall through
          case 106: break;
          case 42: 
            { return EXPORTKEY;
            } 
            // fall through
          case 107: break;
          case 43: 
            { return OFFSETKEY;
            } 
            // fall through
          case 108: break;
          case 44: 
            { return GLOBALKEY;
            } 
            // fall through
          case 109: break;
          case 45: 
            { return MEMORYKEY;
            } 
            // fall through
          case 110: break;
          case 46: 
            { return MODULEKEY;
            } 
            // fall through
          case 111: break;
          case 47: 
            { return REFTYPE;
            } 
            // fall through
          case 112: break;
          case 48: 
            { return OFFSETEQKEY;
            } 
            // fall through
          case 113: break;
          case 49: 
            { return DECLAREKEY;
            } 
            // fall through
          case 114: break;
          case 50: 
            { return MEMORYINSTR_MEMARG;
            } 
            // fall through
          case 115: break;
          case 51: 
            { return REFNULLINSTR;
            } 
            // fall through
          case 116: break;
          case 52: 
            { return REFFUNCINSTR;
            } 
            // fall through
          case 117: break;
          case 53: 
            { return BRTABLEINSTR;
            } 
            // fall through
          case 118: break;
          case 54: 
            { return ICONST;
            } 
            // fall through
          case 119: break;
          case 55: 
            { return FCONST;
            } 
            // fall through
          case 120: break;
          case 56: 
            { return TABLEINSTR_IDX;
            } 
            // fall through
          case 121: break;
          case 57: 
            { return LOCALINSTR;
            } 
            // fall through
          case 122: break;
          case 58: 
            { return ELEMDROPINSTR;
            } 
            // fall through
          case 123: break;
          case 59: 
            { return MEMORYINSTR_IDX;
            } 
            // fall through
          case 124: break;
          case 60: 
            { return TABLEINITINSTR;
            } 
            // fall through
          case 125: break;
          case 61: 
            { return TABLECOPYINSTR;
            } 
            // fall through
          case 126: break;
          case 62: 
            { return GLOBALINSTR;
            } 
            // fall through
          case 127: break;
          case 63: 
            { return REFISNULLINST;
            } 
            // fall through
          case 128: break;
          case 64: 
            { return MEMORYINSTR;
            } 
            // fall through
          case 129: break;
          case 65: 
            { return CALLINDIRECTINSTR;
            } 
            // fall through
          case 130: break;
          default:
            zzScanError(ZZ_NO_MATCH);
          }
      }
    }
  }


}
