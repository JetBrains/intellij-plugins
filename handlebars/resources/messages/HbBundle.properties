hb.block.mismatch.inspection.close.block=''{1}'' does not match ''{0}'' from block start
hb.block.mismatch.inspection.missing.end.block=''{0}'' block not closed
hb.block.mismatch.inspection.missing.start.block=No block start for ''{0}''
hb.block.mismatch.inspection.open.block=''{0}'' does not match ''{1}'' from block end
hb.block.mismatch.inspection.empty.block=Block helper {0} usually requires a parameter

hb.block.mismatch.intention.rename.close=Change block end ''{0}'' to ''{1}''
hb.block.mismatch.intention.rename.open=Change block start ''{0}'' to ''{1}''
hb.files.file.type.description=Handlebars/Mustache
hb.page.colors.descriptor.comments.key=Comments
hb.page.colors.descriptor.data.prefix.key=Data Prefix
hb.page.colors.descriptor.escape.key=Escape Character
hb.page.colors.descriptor.identifiers.key=Identifiers
hb.page.colors.descriptor.mustaches.key=Mustaches
hb.page.colors.descriptor.operators.key=Operators
hb.page.colors.descriptor.strings.key=Strings
hb.page.colors.descriptor.values.key=Primitives
hb.page.options.commenter.language=&Language for comments\:
hb.page.options.commenter.language.tooltip=Controls which language's comment syntax to use for "Comment with Block Comment" and "Comment with Line Comment" actions
hb.pages.folding.auto.collapse.blocks=Blocks
hb.pages.options.formatter=&Enable formatting
hb.pages.options.generate.closing.tag=&Automatically insert closing tag
hb.pages.options.complete.close.mustache=Autocomplete close &mustaches
hb.pages.options.complete.close.tooltip=Insert close mustache ("}}" or "}}}") when first "}" is typed
hb.pages.options.title=Handlebars/Mustache
hb.pages.options.html.as.hb=&Open HTML files as Handlebars/Mustache
hb.parsing.comment.unclosed=Unclosed comment

hb.parsing.element.expected.boolean=Expected "true" or "false"
hb.parsing.element.expected.close=Expected Close "}}"
hb.parsing.element.expected.close.unescaped=Expected Close "}}}"
hb.parsing.element.expected.comment=Expected a Comment
hb.parsing.element.expected.comment.content=Expected a Comment text
hb.parsing.element.expected.comment.close=Expected Comment Close "}}" or "--}}"
hb.parsing.element.expected.comment.open=Expected Comment Open "{{" or "{{--"
hb.parsing.element.expected.content=Expected Template Content
hb.parsing.element.expected.data=Expected a Data identifier
hb.parsing.element.expected.equals=Expected Equals "="
hb.parsing.element.expected.id=Expected an ID
hb.parsing.element.expected.integer=Expected an Integer
hb.parsing.element.expected.invalid=Unexpected token
hb.parsing.element.expected.open=Expected Open "{{"
hb.parsing.element.expected.open_block=Expected Open Block "{{#"
hb.parsing.element.expected.open_end_block=Expected Open End Block "{{/"
hb.parsing.element.expected.open_inverse=Expected Open Inverse "{{^"
hb.parsing.element.expected.open_inverse_chain=Expected Open Inverse Chain "{{else"
hb.parsing.element.expected.open_partial=Expected Open Partial "{{>"
hb.parsing.element.expected.open_partial_block=Expected Open Partial Block "{{#>"
hb.parsing.element.expected.open_raw_block=Expected Open Raw Block "{{{{"
hb.parsing.element.expected.end_raw_block=Expected End Raw Block "{{{{/"
hb.parsing.element.expected.close_raw_block=Expected Close Raw Block "}}}}"
hb.parsing.element.expected.open_unescaped=Expected Open Unescaped "{{{"
hb.parsing.element.expected.open_sexpr=Expected Open Subexpression "("
hb.parsing.element.expected.close_sexpr=Expected Close Subexpression ")"
hb.parsing.element.expected.open_block_params=Expected Open Block Param "as |"
hb.parsing.element.expected.close_block_params=Expected Close Block Param "|"
hb.parsing.element.expected.outer_element_type=Expected Handlebars Content
hb.parsing.element.expected.separator=Expected a Separator "/" or "."
hb.parsing.element.expected.string=Expected a String
hb.parsing.element.expected.white_space=Expected White Space

hb.parsing.expected.hash=Expected a hash
hb.parsing.expected.parameter=Expected a parameter
hb.parsing.expected.partial.name=Expected partial name
hb.parsing.expected.path.or.data=Expected a path, String, Number, Boolean or @data
hb.parsing.unexpected.decorator.inverse=Unexpected inverse block on decorator
hb.parsing.invalid=Invalid
inspections.group.name=Handlebars/Mustache
handlebars.inspections.helpers.empty=Handlebars empty block helper inspection
