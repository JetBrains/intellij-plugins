Drools File
  PACKAGE_STATEMENT
    PsiElement(package)('package')
    PsiWhiteSpace(' ')
    NAMESPACE
      PsiElement(JAVA_IDENTIFIER)('foo')
    PsiElement(;)(';')
  PsiWhiteSpace('\n\n')
  RULE_STATEMENT
    PsiElement(rule)('rule')
    PsiWhiteSpace(' ')
    RULE_NAME
      STRING_ID
        PsiElement(CHARACTER_LITERAL)(''some_rule'')
    PsiWhiteSpace(' ')
    LHS
      PsiElement(when)('when')
      PsiWhiteSpace('\n    ')
      LHS_EXPRESSION
        LHS_OR
          LHS_AND
            LHS_UNARY
              LHS_PATTERN_BIND
                NAME_ID
                  PsiElement(JAVA_IDENTIFIER)('$obj')
                PsiWhiteSpace(' ')
                PsiElement(:)(':')
                PsiWhiteSpace(' ')
                LHS_PATTERN
                  LHS_PATTERN_TYPE
                    QUALIFIED_IDENTIFIER
                      IDENTIFIER
                        PsiElement(JAVA_IDENTIFIER)('MyObject')
                  PsiElement(()('(')
                  PsiWhiteSpace('\n        ')
                  CONSTRAINT
                    EQUALITY_EXPR
                      PRIMARY_EXPR
                        IDENTIFIER
                          PsiElement(JAVA_IDENTIFIER)('foo')
                      PsiWhiteSpace(' ')
                      PsiElement(>)('>')
                      PsiWhiteSpace(' ')
                      NUMBER_LITERAL
                        PsiElement(INT_TOKEN)('10')
                  PsiElement(,)(',')
                  PsiWhiteSpace('\n        ')
                  CONSTRAINT
                    EQUALITY_EXPR
                      UNARY_ASSIGN_EXPR
                        NAME_ID
                          PsiElement(JAVA_IDENTIFIER)('$baz')
                        PsiWhiteSpace(' ')
                        PsiElement(:)(':')
                        PsiWhiteSpace(' ')
                        PRIMARY_EXPR
                          IDENTIFIER
                            PsiElement(JAVA_IDENTIFIER)('bar')
                          PsiElement(.)('.')
                          IDENTIFIER
                            PsiElement(JAVA_IDENTIFIER)('buz')
                          PsiElement(!.)('!.')
                          IDENTIFIER
                            PsiElement(JAVA_IDENTIFIER)('baz')
                      PsiWhiteSpace(' ')
                      PsiElement(EQ)('==')
                      PsiWhiteSpace(' ')
                      STRING_LITERAL
                        PsiElement(STRING_TOKEN)('"Hello"')
                  PsiWhiteSpace('\n    ')
                  PsiElement())(')')
    PsiWhiteSpace('\n')
    RHS
      PsiElement(then)('then')
      PsiWhiteSpace('\n    ')
      JAVA_RHS_STATEMENT
        DroolsCompositeJavaStatementElement(JAVA_STATEMENT)
          PsiExpressionStatement
            PsiMethodCallExpression:System.out.println($baz + " World")
              PsiReferenceExpression:System.out.println
                PsiReferenceExpression:System.out
                  PsiReferenceExpression:System
                    PsiReferenceParameterList
                      <empty list>
                    PsiIdentifier:System('System')
                  PsiJavaToken:DOT('.')
                  PsiReferenceParameterList
                    <empty list>
                  PsiIdentifier:out('out')
                PsiJavaToken:DOT('.')
                PsiReferenceParameterList
                  <empty list>
                PsiIdentifier:println('println')
              PsiExpressionList
                PsiJavaToken:LPARENTH('(')
                PsiBinaryExpression:$baz + " World"
                  PsiReferenceExpression:$baz
                    PsiReferenceParameterList
                      <empty list>
                    PsiIdentifier:$baz('$baz')
                  PsiWhiteSpace(' ')
                  PsiJavaToken:PLUS('+')
                  PsiWhiteSpace(' ')
                  PsiLiteralExpression:" World"
                    PsiJavaToken:STRING_LITERAL('" World"')
                PsiJavaToken:RPARENTH(')')
            PsiJavaToken:SEMICOLON(';')
          PsiWhiteSpace('\n')
    PsiElement(end)('end')