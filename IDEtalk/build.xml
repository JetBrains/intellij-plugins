<project default="build" basedir=".">

  <property name="build.compiler" value="modern"/>

  <!-- set global properties for this build -->
  <property name="project.name" value="ideTalk"/>

  <property name="idea" value="${user.home}/IDEA_Current"/>
  <property name="src" value="${basedir}/src"/>
  <property name="tests" value="${basedir}/tests"/>
  <property name="target" value="${basedir}/target"/>
  <property name="classes_core" value="${target}/classes_core"/>
  <property name="classes_impl" value="${target}/classes_impl"/>
  <property name="classes_idea" value="${target}/classes_idea"/>
  <property name="classes_p2p" value="${target}/classes_p2p"/>
  <property name="classes_jabber" value="${target}/classes_jabber"/>
  <property name="classes_jabber_idea" value="${target}/classes_jabber_idea"/>
  <property name="classes_test" value="${target}/classes_test"/>
  <property name="resources" value="${basedir}/resources"/>
  <property name="lib" value="${basedir}/lib"/>

  <property name="dist" value="${target}/dist"/>
  <property name="jars" value="${target}/jars"/>

  <property name="test-reports" value="${target}/test-reports"/>
  <property name="html-reports" value="${target}/html-reports"/>

  <path id="idea.classpath">
    <fileset dir="${idea}/lib">
      <include name="*.jar"/>
    </fileset>
      <fileset dir="${idea}/plugins">
      <include name="*Integration/lib/*.jar"/>
    </fileset>
  </path>

  <path id="my.classpath">
    <fileset dir="${lib}">
      <include name="*.jar"/>
    </fileset>
    <pathelement location="${classes_core}"/>
    <pathelement location="${classes_impl}"/>
    <pathelement location="${classes_p2p}"/>
    <pathelement location="${classes_jabber}"/>
    <pathelement location="${classes_jabber_idea}"/>
    <pathelement location="${classes_idea}"/>
    <pathelement location="${classes_test}"/>

    <pathelement path="${java.home}/../lib/tools.jar"/>
  </path>

  <path id="classpath">
    <path refid="my.classpath"/>
    <path refid="idea.classpath"/>
  </path>

  <!--  ===================================================================  -->
  <!--  Initialization                                                       -->
  <!--  ===================================================================  -->
  <target name="init">
    <!-- Create the time stamp -->
    <tstamp>
      <format property="DSTAMP" pattern="dd-MMMM-yyyy HH:mm zz"/>
      <format property="NEWS_DSTAMP" pattern="MMM dd yyyy"/>
    </tstamp>
    <!-- Create the build directory structure used by compile -->
    <mkdir dir="${classes_core}"/>
    <mkdir dir="${classes_impl}"/>
    <mkdir dir="${classes_idea}"/>
    <mkdir dir="${classes_p2p}"/>
    <mkdir dir="${classes_jabber}"/>
    <mkdir dir="${classes_jabber_idea}"/>
    <mkdir dir="${classes_test}"/>
  </target>

  <!--  ===================================================================  -->
  <!--  Compiles the source code                                             -->
  <!--  ===================================================================  -->
  <macrodef name="compile">
    <attribute name="src"/>
    <attribute name="dest"/>
    <sequential>

      <javac2 srcdir="@{src}" destdir="@{dest}"
        classpathref="classpath"
        verbose="false"
        debug="true" target="1.5"
        />
      <copy toDir="@{dest}">
        <fileset dir="@{src}">
          <include name="**/*.properties"/>
          <include name="**/*.xml"/>
          <include name="**/*.txt"/>
        </fileset>
      </copy>
    </sequential>

  </macrodef>

  <target name="compile" depends="clean,init" description="Compile the source code">
	  <taskdef name="javac2" classname="com.intellij.ant.Javac2">
		<classpath>
            <pathelement location="${idea}/redist/javac2.jar"/>
            <pathelement location="${idea}/redist/forms_rt.jar"/>
            <pathelement location="${idea}/build/lib/javac2.jar"/>
            <pathelement location="${idea}/build/lib/forms_rt.jar"/>
            <path refid="idea.classpath"/>
        </classpath>
	  </taskdef>
    <!-- Compile the java code from ${src} into ${build} -->
    <copy todir="${classes_impl}">
      <fileset dir="${resources}">
        <include name="*/**"/>
      </fileset>
    </copy>

    <compile src="${resources}" dest="${classes_impl}"/>

    <compile src="${src}/core" dest="${classes_core}"/>
    <compile src="${src}/idea" dest="${classes_idea}"/>
    <compile src="${src}/p2p" dest="${classes_p2p}"/>
    <compile src="${src}/jabber" dest="${classes_jabber}"/>
    <compile src="${src}/jabber_idea" dest="${classes_jabber_idea}"/>
    <compile src="${src}/coreImpl" dest="${classes_impl}"/>


  </target>

  <target name="compile_test" depends="compile" description="Compile tests">
    <!-- Compile the java code from ${src} into ${build} -->

    <compile src="${tests}" dest="${classes_test}"/>

  </target>
  <!--  ===================================================================  -->
  <!--  Clean all                                                            -->
  <!--  ===================================================================  -->
  <target name="clean">
    <delete dir="${target}"/>
  </target>

  <!--  ===================================================================  -->
  <!--  All tests                                                    -->
  <!--  ===================================================================  -->
  <target name="test" description="Run all tests" depends="compile_test" unless="skip_tests">

    <mkdir dir="${test-reports}"/>

    <property name="PKG" value=""/>
    <property name="suspend" value="n"/>
    <echo message="jetbrains.communicator.${PKG}" file="pkg.txt"/>
    <replace file="pkg.txt" token="." value="/"/>
    <loadfile property="PKG1" srcfile="pkg.txt"/>
	<delete file="pkg.txt"/>

    <echo message="Running tests from ${PKG1}"/>

    <junit printsummary="yes"
      haltonfailure="no" showoutput="no"
      failureProperty="failure_found"
      fork="yes" forkmode="once" reloading="no">

      <classpath refid="classpath"/>
      <jvmarg value="-Didea.plugins.load=false"/>
      <jvmarg value="-ea"/>
      <jvmarg line="-Xdebug -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=dt_socket,server=y,suspend=${suspend},address=5009"/>

      <formatter type="xml"/>

      <batchtest todir="${test-reports}">
        <fileset dir="${tests}">
          <include name="${PKG1}**/*Test.java"/>
        </fileset>
      </batchtest>
    </junit>

    <mkdir dir="${html-reports}"/>
    <junitreport todir="${test-reports}">
      <fileset dir="${test-reports}">
        <include name="TEST-*.xml"/>
      </fileset>
      <report format="frames" todir="${html-reports}"/>
    </junitreport>

    <antcall target="check_test"/>
  </target>

  <target name="check_test" if="failure_found">
    <fail message="Failures found"/>
  </target>

  <target name="jars" depends="compile">
    <delete dir="${jars}"/>
    <mkdir dir="${jars}"/>

    <jar file="${jars}/${project.name}_core.jar" compress="false">
      <fileset dir="${classes_core}"/>
    </jar>
    <jar file="${jars}/${project.name}_impl.jar" compress="false">
      <fileset dir="${classes_impl}"/>
    </jar>
    <jar file="${jars}/${project.name}_idea.jar" compress="false">
      <fileset dir="${classes_idea}"/>
    </jar>
    <jar file="${jars}/${project.name}_p2p.jar" compress="false">
      <fileset dir="${classes_p2p}"/>
    </jar>
    <jar file="${jars}/${project.name}_jabber.jar" compress="false">
      <fileset dir="${classes_jabber}"/>
    </jar>
    <jar file="${jars}/${project.name}_jabber_idea.jar" compress="false">
      <fileset dir="${classes_jabber_idea}"/>
    </jar>
  </target>

  <target name="build" depends="clean, dist">
  	<antcall target="makeZip"/>
  </target>

  <target name="dist" depends="jars">
    <delete dir="${dist}"/>
    <mkdir dir="${dist}/${project.name}/lib"/>

    <copy todir="${dist}/${project.name}/lib">
      <fileset dir="${lib}">
	     <include name="*.jar"/>
	     <exclude name="jmock*.jar"/>
      </fileset>
      <fileset dir="${jars}" includes="*.jar"/>
    </copy>

    <jar file="${dist}/${project.name}/${project.name}-openApi-src.jar" compress="false">
      <fileset dir="${src}/core"/>
    </jar>

    <antcall target="makeZip"/>
  </target>

  <target name="makeZip">
    <zip destfile="${dist}/${project.name}.zip"
      basedir="${dist}"
      excludes="*.zip"
      />
  </target>

  <target name="idea_plugin" depends="dist">
    <unzip dest="${idea}/plugins/" src="${dist}/${project.name}.zip"/>
  </target>

  <target name="copy_to_dirs">
    <property name="own" value="${user.home}/IDEA_Current/plugins/${project.name}"/>
    <property name="public" value="/mnt/IdeaBuilds/common-plugins/${project.name}"/>

    <delete dir="${public}" quiet="true"/>
    <delete dir="${own}" quiet="true"/>

    <copy todir="${own}">
      <fileset dir="${dist}/${project.name}"/>
    </copy>
    <copy todir="${public}">
      <fileset dir="${dist}/${project.name}"/>
    </copy>

  </target>

  <target name="masterbuild" depends="clean, test, dist,copy_to_dirs" />

</project>
