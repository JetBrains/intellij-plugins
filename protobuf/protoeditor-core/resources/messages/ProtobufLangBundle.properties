# General
duplicate.package.statement=Duplicate package statement

# Import problems
bad.import.path=Backslashes, consecutive slashes, ., and .. are not allowed in the virtual path

# Symbol problems
ambiguous.import=Ambiguous import ''{0}''
ambiguous.symbol=Ambiguous symbol ''{0}''
cannot.resolve.import=Cannot resolve import ''{0}''
cannot.resolve.option=Cannot resolve option ''{0}''
cannot.resolve.symbol=Cannot resolve symbol ''{0}''
cannot.resolve.field=Cannot resolve field ''{0}''
cannot.resolve.enum.value=Cannot resolve enum value ''{0}''
symbol.already.defined.in.scope=''{0}'' is already defined in scope ''{1}''
symbol.already.defined.in.other.file=''{0}'' is already defined in file ''{1}''

# Extension options
extension.option.not.a.field=Extension option ''{0}'' is not a field
field.does.not.extend.type=Field ''{0}'' does not extend type ''{1}''
unresolved.parent.type=Unresolved parent type
invalid.any.type.domain=Domain must be ''type.googleapis.com'' or ''type.googleprod.com''
any.value.parent.field=Any value must have a parent field of type google.protobuf.Any

# String problems
illegal.escape.sequence=Illegal escape sequence in string literal
unterminated.string=Unterminated string literal

# Expected data types
floating.point.value.expected=Floating point value expected
integer.value.expected=Integer value expected
string.value.expected=String value expected
boolean.value.expected=Boolean value expected
aggregate.value.expected=Aggregate value expected
message.value.expected=Message value expected
enum.value.expected=Enum value expected
integer.value.must.be.decimal=Integer value must be decimal
message.type.expected=Message type expected
message.enum.or.builtin.type.expected=Message, enum, or built-in type expected
map.key.type=Map key cannot be float, double, bytes, message, or enum types
map.value.first.enum.value.zero=First enum value must be 0 when used as map value type

# Number boundary and formatting problems
unsigned.value.cannot.be.negative=Unsigned value cannot be negative
integer.value.out.of.range=Integer value out of range
invalid.floating.point.value=Invalid floating point value

# Invalid option values
not.allowed.as.option.value=''{0}'' not allowed as option value
message.field.cannot.have.default.value=Message field cannot have default value
non.repeated.field.specified.multiple.times=Non-repeated field ''{0}'' is specified multiple times
multiple.oneof.fields.specified=Field ''{0}'' is specified along with field ''{1}'', another member of oneof ''{2}''
missing.required.fields=One or more required members of type ''{0}'' are missing: {1}
repeated.message.aggregate.value=Repeated message field ''{0}'' must be initialized using an aggregate value
non.repeated.value.list=Value list specified for non-repeated field ''{0}''
repeated.field.default.value=Repeated fields cannot have default values

# Usage type classifications
usage.extend.type.reference=Proto extend
usage.field.type.reference=Proto field declaration
usage.option.expr.reference=Proto option expression
usage.service.type.reference=Proto service type
usage.service.method.reference=Proto service method

# Proto2 annotations
proto2.field.label.required=Fields must have labels in proto2 (optional, required, or repeated)
proto2.group.name.capital.letter=Group names must start with capital letter

# Proto3 annotations
proto3.cc_api_compatibility=cc_api_compatibility mode is not supported in proto3
proto3.messageset=MessageSet is not supported in proto3
proto3.weak.imports=Weak imports are not supported in proto3
proto3.extension.ranges=Extension ranges are not supported in proto3
proto3.required.fields=Required fields are not supported in proto3
proto3.extensions=Only option extensions are allowed in proto3
proto3.default.values=Default values are not supported in proto3
proto3.group.fields=Group fields are not supported in proto3
proto3.enums=Only proto3 enums can be used in proto3 messages
proto3.first.enum.value.zero=First enum value must be 0 in proto3
proto3.field.name.uniqueness=proto3 field names must be unique after being converted to lowercase with underscores removed

# Editions annotations
editions.unsupported=Edition ''{0}'' is not yet supported
editions.field.label.optional=The optional label is not allowed since edition 2023
editions.field.label.required=The required label is not allowed since edition 2023
editions.group.invalid=Group syntax is not allowed since edition 2023
editions.features.invalid=Features are not allowed before edition 2023
editions.field.reserved.string=String literal reserved fields are not allowed since edition 2023
editions.field.reserved.identifier=Identifier reserved fields are not allowed before edition 2023
editions.enum.value.reserved.string=String literal reserved enum values are not allowed since edition 2023
editions.enum.value.reserved.identifier=Identifier reserved enum values are not allowed before edition 2023

# Field problems
field.number.must.be.positive=Field numbers must be positive integers
field.number.in.proto.reserved.range=Field numbers {0} through {1} are reserved for the protobuf implementation
field.number.greater.than.max=Field numbers cannot be greater than {0}
field.number.already.used=Field number {0} has already been used by field ''{1}''
field.uses.reserved.number=Field ''{0}'' uses reserved number {1}
field.uses.reserved.name=Field name ''{0}'' is reserved
field.uses.extension.number=Field ''{0}'' uses extension number {1}
reserved.number.must.be.positive=Reserved numbers must be positive integers
reserved.range.overlaps.existing=Reserved range {0} to {1} overlaps with already-defined range {2} to {3}
reserved.name.multiple.times=Field name ''{0}'' is reserved multiple times
oneof.fields.cannot.have.labels=Oneof fields cannot have labels
map.fields.cannot.have.labels=Map fields cannot have labels
expected.colon.after.non.message.field=Expected ':' after non-message field name
extension.range.overlaps.existing=Extension range {0} to {1} overlaps with already-defined range {2} to {3}
extension.range.overlaps.reserved.range=Extension range {0} to {1} overlaps with reserved range {2} to {3}
extension.end.greater.than.start=Extension end must be greater than start
extension.number.must.be.positive=Extension numbers must be positive integers
extension.number.greater.than.max=Extension numbers cannot be greater than {0}
extension.field.json.name.not.allowed=Option 'json_name' is not allowed on extension fields
special.option.multiple.times=Option ''{0}'' specified multiple times
message.set.fields=MessageSets cannot have fields, only extensions
message.set.extensions.optional.messages=Extensions of MessageSets must be optional messages

# Text format schema comments
missing.filename=Missing filename
missing.message.name=Missing message name
file.and.message.comments.must.be.specified=Both 'proto-file' and 'proto-message' values must be specified

# Enum problems
enum.at.least.one.value=Enum must contain at least one value
enum.number.already.used=Enum value number {0} has already been used by value ''{1}''
enum.reserved.end.greater.than.start=Reserved range end must be greater than start
enum.reserved.name.multiple.times=Enum value name ''{0}'' is reserved multiple times
enum.reserved.range.overlaps.existing=Reserved range {0} to {1} overlaps with already-defined range {2} to {3}
enum.uses.reserved.number=Enum value ''{0}'' uses reserved number {1}
enum.uses.reserved.name=Enum value name ''{0}'' is reserved
enum.canonical.name.conflict=Enum value name ''{0}'' conflicts with already-defined name ''{1}'' when the enum prefix is removed and the name is pascal-cased (''{2}'')
enum.allow.alias.unnecessary='allow_alias' option is unnecessary for enum with no aliases
enum.allow.alias.no.effect=Setting 'allow_alias' to false has no effect

# Oneof problems
oneof.at.least.one.field=Oneof must contain at least one field

# Extend problems
extend.at.least.one.field=Extend definition must contain at least one field

# Actions and intentions
intention.add.import.path.name=Add import path to plugin settings
intention.add.import.path.popup.title=Add Import Path
intention.fix.import.problems.familyName=Fix import problems
intention.manually.configure.imports=Configure import paths manually
intention.add.import.statement.name=Add import statement and configure import path
background.task.title.add.import.prepare.variants=Searching for suitable imports

# Inspections
protobuf.inspections.group.name=Protocol Buffers
inspection.duplicated.imports.name=Duplicated import statements
inspection.duplicated.imports.optimize.imports.fix.name=Optimize imports