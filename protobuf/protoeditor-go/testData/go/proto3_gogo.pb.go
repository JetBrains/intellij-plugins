// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: proto/proto3_gogo.proto

package proto3_go_proto

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type Shapes int32

const (
	Shapes_UNKNOWN  Shapes = 0
	Shapes_TRIANGLE Shapes = 3
	Shapes_SQUARE   Shapes = 4
	Shapes_CIRCLE   Shapes = 999
)

var Shapes_name = map[int32]string{
	0:   "UNKNOWN",
	3:   "TRIANGLE",
	4:   "SQUARE",
	999: "CIRCLE",
}

var Shapes_value = map[string]int32{
	"UNKNOWN":  0,
	"TRIANGLE": 3,
	"SQUARE":   4,
	"CIRCLE":   999,
}

func (x Shapes) String() string {
	return proto.EnumName(Shapes_name, int32(x))
}

func (Shapes) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f6b440d051f1bf33, []int{0}
}

type WeirdEnumName int32

const (
	WeirdEnumName_weirdValue_name WeirdEnumName = 0
)

var WeirdEnumName_name = map[int32]string{
	0: "weirdValue_name",
}

var WeirdEnumName_value = map[string]int32{
	"weirdValue_name": 0,
}

func (x WeirdEnumName) String() string {
	return proto.EnumName(WeirdEnumName_name, int32(x))
}

func (WeirdEnumName) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f6b440d051f1bf33, []int{1}
}

type M1_NestedEnum int32

const (
	M1_UNKNOWN M1_NestedEnum = 0
	M1_RED     M1_NestedEnum = 1
	M1_GREEN   M1_NestedEnum = 2
	M1_BLUE    M1_NestedEnum = 3
)

var M1_NestedEnum_name = map[int32]string{
	0: "UNKNOWN",
	1: "RED",
	2: "GREEN",
	3: "BLUE",
}

var M1_NestedEnum_value = map[string]int32{
	"UNKNOWN": 0,
	"RED":     1,
	"GREEN":   2,
	"BLUE":    3,
}

func (x M1_NestedEnum) String() string {
	return proto.EnumName(M1_NestedEnum_name, int32(x))
}

func (M1_NestedEnum) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f6b440d051f1bf33, []int{0, 0}
}

type M1_NestedM1_NestedEnum int32

const (
	M1_NestedM1_UNKNOWN          M1_NestedM1_NestedEnum = 0
	M1_NestedM1_KNOWN_KNOWNS     M1_NestedM1_NestedEnum = 1
	M1_NestedM1_KNOWN_UNKNOWNS   M1_NestedM1_NestedEnum = 2
	M1_NestedM1_UNKNOWN_UNKNOWNS M1_NestedM1_NestedEnum = 3
)

var M1_NestedM1_NestedEnum_name = map[int32]string{
	0: "UNKNOWN",
	1: "KNOWN_KNOWNS",
	2: "KNOWN_UNKNOWNS",
	3: "UNKNOWN_UNKNOWNS",
}

var M1_NestedM1_NestedEnum_value = map[string]int32{
	"UNKNOWN":          0,
	"KNOWN_KNOWNS":     1,
	"KNOWN_UNKNOWNS":   2,
	"UNKNOWN_UNKNOWNS": 3,
}

func (x M1_NestedM1_NestedEnum) String() string {
	return proto.EnumName(M1_NestedM1_NestedEnum_name, int32(x))
}

func (M1_NestedM1_NestedEnum) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f6b440d051f1bf33, []int{0, 0, 0}
}

type M1 struct {
	SinglePrimitive   int32           `protobuf:"varint,1,opt,name=single_primitive,json=singlePrimitive,proto3" json:"single_primitive,omitempty"`
	RepeatedPrimitive []int32         `protobuf:"varint,2,rep,packed,name=repeated_primitive,json=repeatedPrimitive,proto3" json:"repeated_primitive,omitempty"`
	SingleString      string          `protobuf:"bytes,3,opt,name=single_string,json=singleString,proto3" json:"single_string,omitempty"`
	RepeatedString    []string        `protobuf:"bytes,4,rep,name=repeated_string,json=repeatedString,proto3" json:"repeated_string,omitempty"`
	SingleBytes       []byte          `protobuf:"bytes,5,opt,name=single_bytes,json=singleBytes,proto3" json:"single_bytes,omitempty"`
	RepeatedBytes     [][]byte        `protobuf:"bytes,6,rep,name=repeated_bytes,json=repeatedBytes,proto3" json:"repeated_bytes,omitempty"`
	SingleEnum        Shapes          `protobuf:"varint,7,opt,name=single_enum,json=singleEnum,proto3,enum=com.proto.test.golang.proto3.Shapes" json:"single_enum,omitempty"`
	RepeatedEnum      []Shapes        `protobuf:"varint,8,rep,packed,name=repeated_enum,json=repeatedEnum,proto3,enum=com.proto.test.golang.proto3.Shapes" json:"repeated_enum,omitempty"`
	SingleBool        bool            `protobuf:"varint,9,opt,name=single_bool,json=singleBool,proto3" json:"single_bool,omitempty"`
	RepeatedBool      []bool          `protobuf:"varint,10,rep,packed,name=repeated_bool,json=repeatedBool,proto3" json:"repeated_bool,omitempty"`
	SingleMessage     *M1_NestedM1    `protobuf:"bytes,11,opt,name=single_message,json=singleMessage,proto3" json:"single_message,omitempty"`
	RepeatedMessage   []*M1_NestedM1  `protobuf:"bytes,12,rep,name=repeated_message,json=repeatedMessage,proto3" json:"repeated_message,omitempty"`
	TestMap           map[int32]int32 `protobuf:"bytes,13,rep,name=test_map,json=testMap,proto3" json:"test_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	// Types that are valid to be assigned to TestOneof:
	//	*M1_IntChoice
	//	*M1_StringChoice
	TestOneof            isM1_TestOneof `protobuf_oneof:"test_oneof"`
	SingleEnum2          M1_NestedEnum  `protobuf:"varint,16,opt,name=single_enum2,json=singleEnum2,proto3,enum=com.proto.test.golang.proto3.M1_NestedEnum" json:"single_enum2,omitempty"`
	SingleStringPiece    string         `protobuf:"bytes,17,opt,name=single_string_piece,json=singleStringPiece,proto3" json:"single_string_piece,omitempty"`
	RepeatedStringPiece  []string       `protobuf:"bytes,18,rep,name=repeated_string_piece,json=repeatedStringPiece,proto3" json:"repeated_string_piece,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *M1) Reset()         { *m = M1{} }
func (m *M1) String() string { return proto.CompactTextString(m) }
func (*M1) ProtoMessage()    {}
func (*M1) Descriptor() ([]byte, []int) {
	return fileDescriptor_f6b440d051f1bf33, []int{0}
}
func (m *M1) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_M1.Unmarshal(m, b)
}
func (m *M1) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_M1.Marshal(b, m, deterministic)
}
func (m *M1) XXX_Merge(src proto.Message) {
	xxx_messageInfo_M1.Merge(m, src)
}
func (m *M1) XXX_Size() int {
	return xxx_messageInfo_M1.Size(m)
}
func (m *M1) XXX_DiscardUnknown() {
	xxx_messageInfo_M1.DiscardUnknown(m)
}

var xxx_messageInfo_M1 proto.InternalMessageInfo

type isM1_TestOneof interface {
	isM1_TestOneof()
}

type M1_IntChoice struct {
	IntChoice int32 `protobuf:"varint,14,opt,name=int_choice,json=intChoice,proto3,oneof" json:"int_choice,omitempty"`
}
type M1_StringChoice struct {
	StringChoice string `protobuf:"bytes,15,opt,name=string_choice,json=stringChoice,proto3,oneof" json:"string_choice,omitempty"`
}

func (*M1_IntChoice) isM1_TestOneof()    {}
func (*M1_StringChoice) isM1_TestOneof() {}

func (m *M1) GetTestOneof() isM1_TestOneof {
	if m != nil {
		return m.TestOneof
	}
	return nil
}

func (m *M1) GetSinglePrimitive() int32 {
	if m != nil {
		return m.SinglePrimitive
	}
	return 0
}

func (m *M1) GetRepeatedPrimitive() []int32 {
	if m != nil {
		return m.RepeatedPrimitive
	}
	return nil
}

func (m *M1) GetSingleString() string {
	if m != nil {
		return m.SingleString
	}
	return ""
}

func (m *M1) GetRepeatedString() []string {
	if m != nil {
		return m.RepeatedString
	}
	return nil
}

func (m *M1) GetSingleBytes() []byte {
	if m != nil {
		return m.SingleBytes
	}
	return nil
}

func (m *M1) GetRepeatedBytes() [][]byte {
	if m != nil {
		return m.RepeatedBytes
	}
	return nil
}

func (m *M1) GetSingleEnum() Shapes {
	if m != nil {
		return m.SingleEnum
	}
	return Shapes_UNKNOWN
}

func (m *M1) GetRepeatedEnum() []Shapes {
	if m != nil {
		return m.RepeatedEnum
	}
	return nil
}

func (m *M1) GetSingleBool() bool {
	if m != nil {
		return m.SingleBool
	}
	return false
}

func (m *M1) GetRepeatedBool() []bool {
	if m != nil {
		return m.RepeatedBool
	}
	return nil
}

func (m *M1) GetSingleMessage() *M1_NestedM1 {
	if m != nil {
		return m.SingleMessage
	}
	return nil
}

func (m *M1) GetRepeatedMessage() []*M1_NestedM1 {
	if m != nil {
		return m.RepeatedMessage
	}
	return nil
}

func (m *M1) GetTestMap() map[int32]int32 {
	if m != nil {
		return m.TestMap
	}
	return nil
}

func (m *M1) GetIntChoice() int32 {
	if x, ok := m.GetTestOneof().(*M1_IntChoice); ok {
		return x.IntChoice
	}
	return 0
}

func (m *M1) GetStringChoice() string {
	if x, ok := m.GetTestOneof().(*M1_StringChoice); ok {
		return x.StringChoice
	}
	return ""
}

func (m *M1) GetSingleEnum2() M1_NestedEnum {
	if m != nil {
		return m.SingleEnum2
	}
	return M1_UNKNOWN
}

func (m *M1) GetSingleStringPiece() string {
	if m != nil {
		return m.SingleStringPiece
	}
	return ""
}

func (m *M1) GetRepeatedStringPiece() []string {
	if m != nil {
		return m.RepeatedStringPiece
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*M1) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*M1_IntChoice)(nil),
		(*M1_StringChoice)(nil),
	}
}

type M1_NestedM1 struct {
	SinglePrimitive      int32                  `protobuf:"varint,99,opt,name=single_primitive,json=singlePrimitive,proto3" json:"single_primitive,omitempty"`
	RepeatedPrimitive    []int32                `protobuf:"varint,100,rep,packed,name=repeated_primitive,json=repeatedPrimitive,proto3" json:"repeated_primitive,omitempty"`
	SingleEnum           M1_NestedM1_NestedEnum `protobuf:"varint,101,opt,name=single_enum,json=singleEnum,proto3,enum=com.proto.test.golang.proto3.M1_NestedM1_NestedEnum" json:"single_enum,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *M1_NestedM1) Reset()         { *m = M1_NestedM1{} }
func (m *M1_NestedM1) String() string { return proto.CompactTextString(m) }
func (*M1_NestedM1) ProtoMessage()    {}
func (*M1_NestedM1) Descriptor() ([]byte, []int) {
	return fileDescriptor_f6b440d051f1bf33, []int{0, 0}
}
func (m *M1_NestedM1) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_M1_NestedM1.Unmarshal(m, b)
}
func (m *M1_NestedM1) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_M1_NestedM1.Marshal(b, m, deterministic)
}
func (m *M1_NestedM1) XXX_Merge(src proto.Message) {
	xxx_messageInfo_M1_NestedM1.Merge(m, src)
}
func (m *M1_NestedM1) XXX_Size() int {
	return xxx_messageInfo_M1_NestedM1.Size(m)
}
func (m *M1_NestedM1) XXX_DiscardUnknown() {
	xxx_messageInfo_M1_NestedM1.DiscardUnknown(m)
}

var xxx_messageInfo_M1_NestedM1 proto.InternalMessageInfo

func (m *M1_NestedM1) GetSinglePrimitive() int32 {
	if m != nil {
		return m.SinglePrimitive
	}
	return 0
}

func (m *M1_NestedM1) GetRepeatedPrimitive() []int32 {
	if m != nil {
		return m.RepeatedPrimitive
	}
	return nil
}

func (m *M1_NestedM1) GetSingleEnum() M1_NestedM1_NestedEnum {
	if m != nil {
		return m.SingleEnum
	}
	return M1_NestedM1_UNKNOWN
}

type WeirdMessageName struct {
	SinglePrimitive        int32    `protobuf:"varint,1,opt,name=single_primitive,json=singlePrimitive,proto3" json:"single_primitive,omitempty"`
	RepeatedPrimitiveCount int32    `protobuf:"varint,3,opt,name=Repeated_primitiveCount,json=RepeatedPrimitiveCount,proto3" json:"Repeated_primitiveCount,omitempty"`
	XXX_NoUnkeyedLiteral   struct{} `json:"-"`
	XXX_unrecognized       []byte   `json:"-"`
	XXX_sizecache          int32    `json:"-"`
}

func (m *WeirdMessageName) Reset()         { *m = WeirdMessageName{} }
func (m *WeirdMessageName) String() string { return proto.CompactTextString(m) }
func (*WeirdMessageName) ProtoMessage()    {}
func (*WeirdMessageName) Descriptor() ([]byte, []int) {
	return fileDescriptor_f6b440d051f1bf33, []int{1}
}
func (m *WeirdMessageName) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WeirdMessageName.Unmarshal(m, b)
}
func (m *WeirdMessageName) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WeirdMessageName.Marshal(b, m, deterministic)
}
func (m *WeirdMessageName) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WeirdMessageName.Merge(m, src)
}
func (m *WeirdMessageName) XXX_Size() int {
	return xxx_messageInfo_WeirdMessageName.Size(m)
}
func (m *WeirdMessageName) XXX_DiscardUnknown() {
	xxx_messageInfo_WeirdMessageName.DiscardUnknown(m)
}

var xxx_messageInfo_WeirdMessageName proto.InternalMessageInfo

func (m *WeirdMessageName) GetSinglePrimitive() int32 {
	if m != nil {
		return m.SinglePrimitive
	}
	return 0
}

func (m *WeirdMessageName) GetRepeatedPrimitiveCount() int32 {
	if m != nil {
		return m.RepeatedPrimitiveCount
	}
	return 0
}

func init() {
	proto.RegisterEnum("com.proto.test.golang.proto3.Shapes", Shapes_name, Shapes_value)
	proto.RegisterEnum("com.proto.test.golang.proto3.WeirdEnumName", WeirdEnumName_name, WeirdEnumName_value)
	proto.RegisterEnum("com.proto.test.golang.proto3.M1_NestedEnum", M1_NestedEnum_name, M1_NestedEnum_value)
	proto.RegisterEnum("com.proto.test.golang.proto3.M1_NestedM1_NestedEnum", M1_NestedM1_NestedEnum_name, M1_NestedM1_NestedEnum_value)
	proto.RegisterType((*M1)(nil), "com.proto.test.golang.proto3.M1")
	proto.RegisterMapType((map[int32]int32)(nil), "com.proto.test.golang.proto3.M1.TestMapEntry")
	proto.RegisterType((*M1_NestedM1)(nil), "com.proto.test.golang.proto3.M1.NestedM1")
	proto.RegisterType((*WeirdMessageName)(nil), "com.proto.test.golang.proto3.weirdMessage_name")
}

func init() {
	proto.RegisterFile("golang/src/itest/resources/proto3_gogo.proto", fileDescriptor_f6b440d051f1bf33)
}

var fileDescriptor_f6b440d051f1bf33 = []byte{
	// 744 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x55, 0x51, 0x4f, 0xda, 0x50,
	0x14, 0xa6, 0xad, 0x40, 0x39, 0x14, 0xb8, 0x5c, 0xdd, 0xd6, 0x98, 0x25, 0x76, 0x6c, 0x66, 0xd5,
	0x4d, 0x88, 0xb8, 0xcc, 0xc5, 0xec, 0x45, 0x58, 0xa3, 0x66, 0xc2, 0xdc, 0x45, 0xb6, 0x64, 0x2f,
	0x4d, 0xc5, 0x3b, 0x6c, 0x06, 0x2d, 0x69, 0x8b, 0xc6, 0xbf, 0xb1, 0xdf, 0xb7, 0xf7, 0xfd, 0x8d,
	0xe5, 0xde, 0xdb, 0x16, 0x70, 0xd3, 0xe9, 0x0b, 0x39, 0xfd, 0xee, 0x77, 0xbe, 0x9e, 0x9e, 0xf3,
	0x9d, 0x0b, 0xbc, 0x1e, 0xfa, 0x23, 0xc7, 0x1b, 0x36, 0xc2, 0x60, 0xd0, 0x70, 0x23, 0x1a, 0x46,
	0x8d, 0x80, 0x86, 0xfe, 0x34, 0x18, 0xd0, 0xb0, 0x31, 0x09, 0xfc, 0xc8, 0xdf, 0xb1, 0x87, 0xfe,
	0xd0, 0xaf, 0xf3, 0x18, 0x3f, 0x1d, 0xf8, 0x63, 0x11, 0xd6, 0x19, 0xb7, 0x2e, 0x92, 0x05, 0xb2,
	0x53, 0xfb, 0x05, 0x20, 0x77, 0xb6, 0xf1, 0x06, 0xa0, 0xd0, 0xf5, 0x86, 0x23, 0x6a, 0x4f, 0x02,
	0x77, 0xec, 0x46, 0xee, 0x25, 0xd5, 0x25, 0x43, 0x32, 0xb3, 0xa4, 0x22, 0xf0, 0x93, 0x04, 0xc6,
	0x5b, 0x80, 0x03, 0x3a, 0xa1, 0x4e, 0x44, 0xcf, 0xe7, 0xc8, 0xb2, 0xa1, 0x98, 0x59, 0x52, 0x4d,
	0x4e, 0x66, 0xf4, 0xe7, 0x50, 0x8a, 0x95, 0xc3, 0x28, 0x70, 0xbd, 0xa1, 0xae, 0x18, 0x92, 0x59,
	0x20, 0x9a, 0x00, 0x7b, 0x1c, 0xc3, 0x2f, 0xa1, 0x92, 0x6a, 0xc6, 0xb4, 0x25, 0x43, 0x31, 0x0b,
	0xa4, 0x9c, 0xc0, 0x31, 0xf1, 0x19, 0xc4, 0x89, 0xf6, 0xd9, 0x75, 0x44, 0x43, 0x3d, 0x6b, 0x48,
	0xa6, 0x46, 0x8a, 0x02, 0x6b, 0x31, 0x08, 0xaf, 0x43, 0x9a, 0x14, 0x93, 0x72, 0x86, 0x62, 0x6a,
	0xa4, 0x94, 0xa0, 0x82, 0x66, 0x41, 0x9c, 0x65, 0x53, 0x6f, 0x3a, 0xd6, 0xf3, 0x86, 0x64, 0x96,
	0x9b, 0x2f, 0xea, 0x77, 0x35, 0xab, 0xde, 0xbb, 0x70, 0x26, 0x34, 0x24, 0x20, 0x12, 0x2d, 0x6f,
	0x3a, 0xc6, 0x47, 0x90, 0xea, 0x0a, 0x21, 0xd5, 0x50, 0xee, 0x2d, 0xa4, 0x25, 0xa9, 0x5c, 0x6a,
	0x2d, 0xad, 0xe8, 0xcc, 0xf7, 0x47, 0x7a, 0xc1, 0x90, 0x4c, 0x35, 0x79, 0x57, 0xcb, 0xf7, 0x47,
	0xac, 0x95, 0xb3, 0x2f, 0x63, 0x14, 0x30, 0x14, 0x53, 0x9d, 0xa9, 0x70, 0xd2, 0x09, 0x94, 0x63,
	0x95, 0x31, 0x0d, 0x43, 0x67, 0x48, 0xf5, 0xa2, 0x21, 0x99, 0xc5, 0xe6, 0xc6, 0xdd, 0x15, 0x75,
	0xb6, 0xeb, 0x5d, 0x1a, 0x46, 0xf4, 0xbc, 0xb3, 0x4d, 0xe2, 0x81, 0x75, 0x44, 0x3e, 0x3e, 0x05,
	0x94, 0xbe, 0x36, 0xd1, 0xd4, 0x0c, 0xe5, 0x61, 0x9a, 0xe9, 0x7c, 0x13, 0xd5, 0x43, 0x50, 0x59,
	0x8a, 0x3d, 0x76, 0x26, 0x7a, 0x89, 0xab, 0x6d, 0xfd, 0x57, 0xed, 0x94, 0x86, 0x51, 0xc7, 0x99,
	0x58, 0x5e, 0x14, 0x5c, 0x93, 0x7c, 0x24, 0x9e, 0xf0, 0x1a, 0x80, 0xeb, 0x45, 0xf6, 0xe0, 0xc2,
	0x77, 0x07, 0x54, 0x2f, 0x33, 0xd7, 0x1e, 0x66, 0x48, 0xc1, 0xf5, 0xa2, 0x36, 0x87, 0xf0, 0x3a,
	0x94, 0x84, 0xa9, 0x12, 0x4e, 0x85, 0x59, 0xf0, 0x30, 0x43, 0x34, 0x01, 0xc7, 0xb4, 0x6e, 0xea,
	0x2d, 0x36, 0xc8, 0xa6, 0x8e, 0xb8, 0x25, 0x5e, 0xdd, 0xf3, 0x1b, 0xd9, 0x08, 0x13, 0x23, 0xb2,
	0xb8, 0x89, 0x9b, 0xb0, 0xbc, 0xe0, 0x7c, 0x7b, 0xe2, 0xd2, 0x01, 0xd5, 0xab, 0xec, 0xe5, 0x2d,
	0x59, 0x95, 0x49, 0x75, 0x7e, 0x07, 0x4e, 0xd8, 0x21, 0x7e, 0x0b, 0x8f, 0x6e, 0x2c, 0x42, 0x9c,
	0x85, 0xd9, 0x3a, 0xf0, 0xac, 0xe5, 0xc5, 0x95, 0xe0, 0x79, 0xab, 0x3f, 0x65, 0x50, 0x93, 0x5e,
	0xff, 0x73, 0x99, 0x07, 0x0f, 0x59, 0xe6, 0xf3, 0xdb, 0x96, 0xb9, 0xbf, 0xb8, 0x34, 0x94, 0x77,
	0xe8, 0xcd, 0xbd, 0x5d, 0x30, 0xdf, 0xaa, 0xb9, 0x25, 0xaa, 0xf5, 0x01, 0x66, 0x27, 0xb8, 0x08,
	0xf9, 0x7e, 0xf7, 0x63, 0xf7, 0xd3, 0xd7, 0x2e, 0xca, 0x60, 0x04, 0x1a, 0x0f, 0x6d, 0xfe, 0xdb,
	0x43, 0x12, 0xc6, 0x50, 0x16, 0x48, 0x4c, 0xea, 0x21, 0x19, 0xaf, 0x00, 0x8a, 0x9f, 0x66, 0xa8,
	0xb2, 0xba, 0x07, 0xda, 0xbc, 0x63, 0x30, 0x02, 0xe5, 0x07, 0xbd, 0x8e, 0xef, 0x35, 0x16, 0xe2,
	0x15, 0xc8, 0x5e, 0x3a, 0xa3, 0x29, 0xbb, 0xbe, 0x18, 0x26, 0x1e, 0xf6, 0xe4, 0x77, 0x52, 0x6d,
	0xf7, 0xf6, 0x92, 0xf2, 0xa0, 0x10, 0xeb, 0x03, 0x92, 0x70, 0x01, 0xb2, 0x07, 0xc4, 0xb2, 0xba,
	0x48, 0xc6, 0x2a, 0x2c, 0xb5, 0x8e, 0xfb, 0x16, 0x52, 0x5a, 0x1a, 0x00, 0xf7, 0xb5, 0xef, 0x51,
	0xff, 0x7b, 0xed, 0x0a, 0xaa, 0x57, 0xd4, 0x0d, 0x12, 0xd7, 0xdb, 0x9e, 0x33, 0xa6, 0x0f, 0xb9,
	0x6c, 0x77, 0xe1, 0x09, 0xf9, 0x6b, 0x3e, 0x6d, 0x7f, 0xea, 0x45, 0xfc, 0x1e, 0xcd, 0x92, 0xc7,
	0xe4, 0xe6, 0x90, 0xf8, 0xe9, 0xe6, 0x7b, 0xc8, 0x89, 0x4b, 0x66, 0xb1, 0x76, 0x0d, 0xd4, 0x53,
	0x72, 0xb4, 0xdf, 0x3d, 0x38, 0xb6, 0x90, 0x82, 0x01, 0x72, 0xbd, 0xcf, 0xfd, 0x7d, 0x62, 0xa1,
	0x25, 0x5c, 0x84, 0x5c, 0xfb, 0x88, 0xb4, 0x8f, 0x2d, 0xf4, 0x3b, 0xbf, 0xb9, 0x0e, 0x65, 0x5e,
	0x36, 0xfb, 0x78, 0x51, 0xf3, 0x32, 0x54, 0x38, 0xf2, 0x85, 0x75, 0x88, 0x43, 0x28, 0xd3, 0xaa,
	0x7e, 0xab, 0xa4, 0xff, 0x37, 0x36, 0x8f, 0xce, 0x72, 0x02, 0xf8, 0x13, 0x00, 0x00, 0xff, 0xff,
	0xb0, 0xa8, 0x5d, 0x2b, 0xa4, 0x06, 0x00, 0x00,
}
