// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.22.0
// 	protoc        v3.14.0
// source: proto/proto3.proto

package proto3_go_proto

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Shapes int32

const (
	Shapes_UNKNOWN  Shapes = 0
	Shapes_TRIANGLE Shapes = 3
	Shapes_SQUARE   Shapes = 4
	Shapes_CIRCLE   Shapes = 999
)

// Enum value maps for Shapes.
var (
	Shapes_name = map[int32]string{
		0:   "UNKNOWN",
		3:   "TRIANGLE",
		4:   "SQUARE",
		999: "CIRCLE",
	}
	Shapes_value = map[string]int32{
		"UNKNOWN":  0,
		"TRIANGLE": 3,
		"SQUARE":   4,
		"CIRCLE":   999,
	}
)

func (x Shapes) Enum() *Shapes {
	p := new(Shapes)
	*p = x
	return p
}

func (x Shapes) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Shapes) Descriptor() protoreflect.EnumDescriptor {
	return file_golang_src_itest_resources_proto3_proto_enumTypes[0].Descriptor()
}

func (Shapes) Type() protoreflect.EnumType {
	return &file_golang_src_itest_resources_proto3_proto_enumTypes[0]
}

func (x Shapes) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Shapes.Descriptor instead.
func (Shapes) EnumDescriptor() ([]byte, []int) {
	return file_golang_src_itest_resources_proto3_proto_rawDescGZIP(), []int{0}
}

type WeirdEnumName int32

const (
	WeirdEnumName_weirdValue_name WeirdEnumName = 0
)

// Enum value maps for WeirdEnumName.
var (
	WeirdEnumName_name = map[int32]string{
		0: "weirdValue_name",
	}
	WeirdEnumName_value = map[string]int32{
		"weirdValue_name": 0,
	}
)

func (x WeirdEnumName) Enum() *WeirdEnumName {
	p := new(WeirdEnumName)
	*p = x
	return p
}

func (x WeirdEnumName) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WeirdEnumName) Descriptor() protoreflect.EnumDescriptor {
	return file_golang_src_itest_resources_proto3_proto_enumTypes[1].Descriptor()
}

func (WeirdEnumName) Type() protoreflect.EnumType {
	return &file_golang_src_itest_resources_proto3_proto_enumTypes[1]
}

func (x WeirdEnumName) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WeirdEnumName.Descriptor instead.
func (WeirdEnumName) EnumDescriptor() ([]byte, []int) {
	return file_golang_src_itest_resources_proto3_proto_rawDescGZIP(), []int{1}
}

type M1_NestedEnum int32

const (
	M1_UNKNOWN M1_NestedEnum = 0
	M1_RED     M1_NestedEnum = 1
	M1_GREEN   M1_NestedEnum = 2
	M1_BLUE    M1_NestedEnum = 3
)

// Enum value maps for M1_NestedEnum.
var (
	M1_NestedEnum_name = map[int32]string{
		0: "UNKNOWN",
		1: "RED",
		2: "GREEN",
		3: "BLUE",
	}
	M1_NestedEnum_value = map[string]int32{
		"UNKNOWN": 0,
		"RED":     1,
		"GREEN":   2,
		"BLUE":    3,
	}
)

func (x M1_NestedEnum) Enum() *M1_NestedEnum {
	p := new(M1_NestedEnum)
	*p = x
	return p
}

func (x M1_NestedEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (M1_NestedEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_golang_src_itest_resources_proto3_proto_enumTypes[2].Descriptor()
}

func (M1_NestedEnum) Type() protoreflect.EnumType {
	return &file_golang_src_itest_resources_proto3_proto_enumTypes[2]
}

func (x M1_NestedEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use M1_NestedEnum.Descriptor instead.
func (M1_NestedEnum) EnumDescriptor() ([]byte, []int) {
	return file_golang_src_itest_resources_proto3_proto_rawDescGZIP(), []int{0, 0}
}

type M1_NestedM1_NestedEnum int32

const (
	M1_NestedM1_UNKNOWN          M1_NestedM1_NestedEnum = 0
	M1_NestedM1_KNOWN_KNOWNS     M1_NestedM1_NestedEnum = 1
	M1_NestedM1_KNOWN_UNKNOWNS   M1_NestedM1_NestedEnum = 2
	M1_NestedM1_UNKNOWN_UNKNOWNS M1_NestedM1_NestedEnum = 3
)

// Enum value maps for M1_NestedM1_NestedEnum.
var (
	M1_NestedM1_NestedEnum_name = map[int32]string{
		0: "UNKNOWN",
		1: "KNOWN_KNOWNS",
		2: "KNOWN_UNKNOWNS",
		3: "UNKNOWN_UNKNOWNS",
	}
	M1_NestedM1_NestedEnum_value = map[string]int32{
		"UNKNOWN":          0,
		"KNOWN_KNOWNS":     1,
		"KNOWN_UNKNOWNS":   2,
		"UNKNOWN_UNKNOWNS": 3,
	}
)

func (x M1_NestedM1_NestedEnum) Enum() *M1_NestedM1_NestedEnum {
	p := new(M1_NestedM1_NestedEnum)
	*p = x
	return p
}

func (x M1_NestedM1_NestedEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (M1_NestedM1_NestedEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_golang_src_itest_resources_proto3_proto_enumTypes[3].Descriptor()
}

func (M1_NestedM1_NestedEnum) Type() protoreflect.EnumType {
	return &file_golang_src_itest_resources_proto3_proto_enumTypes[3]
}

func (x M1_NestedM1_NestedEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use M1_NestedM1_NestedEnum.Descriptor instead.
func (M1_NestedM1_NestedEnum) EnumDescriptor() ([]byte, []int) {
	return file_golang_src_itest_resources_proto3_proto_rawDescGZIP(), []int{0, 0, 0}
}

type M1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SinglePrimitive   int32           `protobuf:"varint,1,opt,name=single_primitive,json=singlePrimitive,proto3" json:"single_primitive,omitempty"`
	RepeatedPrimitive []int32         `protobuf:"varint,2,rep,packed,name=repeated_primitive,json=repeatedPrimitive,proto3" json:"repeated_primitive,omitempty"`
	SingleString      string          `protobuf:"bytes,3,opt,name=single_string,json=singleString,proto3" json:"single_string,omitempty"`
	RepeatedString    []string        `protobuf:"bytes,4,rep,name=repeated_string,json=repeatedString,proto3" json:"repeated_string,omitempty"`
	SingleBytes       []byte          `protobuf:"bytes,5,opt,name=single_bytes,json=singleBytes,proto3" json:"single_bytes,omitempty"`
	RepeatedBytes     [][]byte        `protobuf:"bytes,6,rep,name=repeated_bytes,json=repeatedBytes,proto3" json:"repeated_bytes,omitempty"`
	SingleEnum        Shapes          `protobuf:"varint,7,opt,name=single_enum,json=singleEnum,proto3,enum=com.proto.test.golang.proto3.Shapes" json:"single_enum,omitempty"`
	RepeatedEnum      []Shapes        `protobuf:"varint,8,rep,packed,name=repeated_enum,json=repeatedEnum,proto3,enum=com.proto.test.golang.proto3.Shapes" json:"repeated_enum,omitempty"`
	SingleBool        bool            `protobuf:"varint,9,opt,name=single_bool,json=singleBool,proto3" json:"single_bool,omitempty"`
	RepeatedBool      []bool          `protobuf:"varint,10,rep,packed,name=repeated_bool,json=repeatedBool,proto3" json:"repeated_bool,omitempty"`
	SingleMessage     *M1_NestedM1    `protobuf:"bytes,11,opt,name=single_message,json=singleMessage,proto3" json:"single_message,omitempty"`
	RepeatedMessage   []*M1_NestedM1  `protobuf:"bytes,12,rep,name=repeated_message,json=repeatedMessage,proto3" json:"repeated_message,omitempty"`
	TestMap           map[int32]int32 `protobuf:"bytes,13,rep,name=test_map,json=testMap,proto3" json:"test_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	// Types that are assignable to TestOneof:
	//	*M1_IntChoice
	//	*M1_StringChoice
	TestOneof           isM1_TestOneof `protobuf_oneof:"test_oneof"`
	SingleEnum2         M1_NestedEnum  `protobuf:"varint,16,opt,name=single_enum2,json=singleEnum2,proto3,enum=com.proto.test.golang.proto3.M1_NestedEnum" json:"single_enum2,omitempty"`
	SingleStringPiece   string         `protobuf:"bytes,17,opt,name=single_string_piece,json=singleStringPiece,proto3" json:"single_string_piece,omitempty"`
	RepeatedStringPiece []string       `protobuf:"bytes,18,rep,name=repeated_string_piece,json=repeatedStringPiece,proto3" json:"repeated_string_piece,omitempty"`
}

func (x *M1) Reset() {
	*x = M1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_golang_src_itest_resources_proto3_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *M1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*M1) ProtoMessage() {}

func (x *M1) ProtoReflect() protoreflect.Message {
	mi := &file_golang_src_itest_resources_proto3_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use M1.ProtoReflect.Descriptor instead.
func (*M1) Descriptor() ([]byte, []int) {
	return file_golang_src_itest_resources_proto3_proto_rawDescGZIP(), []int{0}
}

func (x *M1) GetSinglePrimitive() int32 {
	if x != nil {
		return x.SinglePrimitive
	}
	return 0
}

func (x *M1) GetRepeatedPrimitive() []int32 {
	if x != nil {
		return x.RepeatedPrimitive
	}
	return nil
}

func (x *M1) GetSingleString() string {
	if x != nil {
		return x.SingleString
	}
	return ""
}

func (x *M1) GetRepeatedString() []string {
	if x != nil {
		return x.RepeatedString
	}
	return nil
}

func (x *M1) GetSingleBytes() []byte {
	if x != nil {
		return x.SingleBytes
	}
	return nil
}

func (x *M1) GetRepeatedBytes() [][]byte {
	if x != nil {
		return x.RepeatedBytes
	}
	return nil
}

func (x *M1) GetSingleEnum() Shapes {
	if x != nil {
		return x.SingleEnum
	}
	return Shapes_UNKNOWN
}

func (x *M1) GetRepeatedEnum() []Shapes {
	if x != nil {
		return x.RepeatedEnum
	}
	return nil
}

func (x *M1) GetSingleBool() bool {
	if x != nil {
		return x.SingleBool
	}
	return false
}

func (x *M1) GetRepeatedBool() []bool {
	if x != nil {
		return x.RepeatedBool
	}
	return nil
}

func (x *M1) GetSingleMessage() *M1_NestedM1 {
	if x != nil {
		return x.SingleMessage
	}
	return nil
}

func (x *M1) GetRepeatedMessage() []*M1_NestedM1 {
	if x != nil {
		return x.RepeatedMessage
	}
	return nil
}

func (x *M1) GetTestMap() map[int32]int32 {
	if x != nil {
		return x.TestMap
	}
	return nil
}

func (m *M1) GetTestOneof() isM1_TestOneof {
	if m != nil {
		return m.TestOneof
	}
	return nil
}

func (x *M1) GetIntChoice() int32 {
	if x, ok := x.GetTestOneof().(*M1_IntChoice); ok {
		return x.IntChoice
	}
	return 0
}

func (x *M1) GetStringChoice() string {
	if x, ok := x.GetTestOneof().(*M1_StringChoice); ok {
		return x.StringChoice
	}
	return ""
}

func (x *M1) GetSingleEnum2() M1_NestedEnum {
	if x != nil {
		return x.SingleEnum2
	}
	return M1_UNKNOWN
}

func (x *M1) GetSingleStringPiece() string {
	if x != nil {
		return x.SingleStringPiece
	}
	return ""
}

func (x *M1) GetRepeatedStringPiece() []string {
	if x != nil {
		return x.RepeatedStringPiece
	}
	return nil
}

type isM1_TestOneof interface {
	isM1_TestOneof()
}

type M1_IntChoice struct {
	IntChoice int32 `protobuf:"varint,14,opt,name=int_choice,json=intChoice,proto3,oneof"`
}

type M1_StringChoice struct {
	StringChoice string `protobuf:"bytes,15,opt,name=string_choice,json=stringChoice,proto3,oneof"`
}

func (*M1_IntChoice) isM1_TestOneof() {}

func (*M1_StringChoice) isM1_TestOneof() {}

type WeirdMessageName struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SinglePrimitive        int32 `protobuf:"varint,1,opt,name=single_primitive,json=singlePrimitive,proto3" json:"single_primitive,omitempty"`
	RepeatedPrimitiveCount int32 `protobuf:"varint,3,opt,name=Repeated_primitiveCount,json=RepeatedPrimitiveCount,proto3" json:"Repeated_primitiveCount,omitempty"`
}

func (x *WeirdMessageName) Reset() {
	*x = WeirdMessageName{}
	if protoimpl.UnsafeEnabled {
		mi := &file_golang_src_itest_resources_proto3_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WeirdMessageName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WeirdMessageName) ProtoMessage() {}

func (x *WeirdMessageName) ProtoReflect() protoreflect.Message {
	mi := &file_golang_src_itest_resources_proto3_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WeirdMessageName.ProtoReflect.Descriptor instead.
func (*WeirdMessageName) Descriptor() ([]byte, []int) {
	return file_golang_src_itest_resources_proto3_proto_rawDescGZIP(), []int{1}
}

func (x *WeirdMessageName) GetSinglePrimitive() int32 {
	if x != nil {
		return x.SinglePrimitive
	}
	return 0
}

func (x *WeirdMessageName) GetRepeatedPrimitiveCount() int32 {
	if x != nil {
		return x.RepeatedPrimitiveCount
	}
	return 0
}

type M1_NestedM1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SinglePrimitive   int32                  `protobuf:"varint,99,opt,name=single_primitive,json=singlePrimitive,proto3" json:"single_primitive,omitempty"`
	RepeatedPrimitive []int32                `protobuf:"varint,100,rep,packed,name=repeated_primitive,json=repeatedPrimitive,proto3" json:"repeated_primitive,omitempty"`
	SingleEnum        M1_NestedM1_NestedEnum `protobuf:"varint,101,opt,name=single_enum,json=singleEnum,proto3,enum=com.proto.test.golang.proto3.M1_NestedM1_NestedEnum" json:"single_enum,omitempty"`
}

func (x *M1_NestedM1) Reset() {
	*x = M1_NestedM1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_golang_src_itest_resources_proto3_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *M1_NestedM1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*M1_NestedM1) ProtoMessage() {}

func (x *M1_NestedM1) ProtoReflect() protoreflect.Message {
	mi := &file_golang_src_itest_resources_proto3_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use M1_NestedM1.ProtoReflect.Descriptor instead.
func (*M1_NestedM1) Descriptor() ([]byte, []int) {
	return file_golang_src_itest_resources_proto3_proto_rawDescGZIP(), []int{0, 0}
}

func (x *M1_NestedM1) GetSinglePrimitive() int32 {
	if x != nil {
		return x.SinglePrimitive
	}
	return 0
}

func (x *M1_NestedM1) GetRepeatedPrimitive() []int32 {
	if x != nil {
		return x.RepeatedPrimitive
	}
	return nil
}

func (x *M1_NestedM1) GetSingleEnum() M1_NestedM1_NestedEnum {
	if x != nil {
		return x.SingleEnum
	}
	return M1_NestedM1_UNKNOWN
}

var File_golang_src_itest_resources_proto3_proto protoreflect.FileDescriptor

var file_golang_src_itest_resources_proto3_proto_rawDesc = []byte{
	0x0a, 0x27, 0x67, 0x6f, 0x6c, 0x61, 0x6e, 0x67, 0x2f, 0x73, 0x72, 0x63, 0x2f, 0x69, 0x74, 0x65,
	0x73, 0x74, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1c, 0x63, 0x6f, 0x6d, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x67, 0x6f, 0x6c, 0x61, 0x6e, 0x67,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33, 0x22, 0xdc, 0x0a, 0x0a, 0x02, 0x4d, 0x31, 0x12, 0x29,
	0x0a, 0x10, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x5f, 0x70, 0x72, 0x69, 0x6d, 0x69, 0x74, 0x69,
	0x76, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65,
	0x50, 0x72, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x76, 0x65, 0x12, 0x2d, 0x0a, 0x12, 0x72, 0x65, 0x70,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x70, 0x72, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x76, 0x65, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x11, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x50,
	0x72, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x76, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x69, 0x6e, 0x67,
	0x6c, 0x65, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x27, 0x0a,
	0x0f, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65,
	0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x73, 0x69,
	0x6e, 0x67, 0x6c, 0x65, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x70,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x0c, 0x52, 0x0d, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x74, 0x65, 0x73,
	0x12, 0x45, 0x0a, 0x0b, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x5f, 0x65, 0x6e, 0x75, 0x6d, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x67, 0x6f, 0x6c, 0x61, 0x6e, 0x67, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33, 0x2e, 0x53, 0x68, 0x61, 0x70, 0x65, 0x73, 0x52, 0x0a, 0x73, 0x69, 0x6e,
	0x67, 0x6c, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x49, 0x0a, 0x0d, 0x72, 0x65, 0x70, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x65, 0x6e, 0x75, 0x6d, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x24,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x2e,
	0x67, 0x6f, 0x6c, 0x61, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33, 0x2e, 0x53, 0x68,
	0x61, 0x70, 0x65, 0x73, 0x52, 0x0c, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x45, 0x6e,
	0x75, 0x6d, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x5f, 0x62, 0x6f, 0x6f,
	0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x42,
	0x6f, 0x6f, 0x6c, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x62, 0x6f, 0x6f, 0x6c, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x08, 0x52, 0x0c, 0x72, 0x65, 0x70, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x42, 0x6f, 0x6f, 0x6c, 0x12, 0x50, 0x0a, 0x0e, 0x73, 0x69, 0x6e, 0x67,
	0x6c, 0x65, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x29, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x74, 0x65, 0x73,
	0x74, 0x2e, 0x67, 0x6f, 0x6c, 0x61, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33, 0x2e,
	0x4d, 0x31, 0x2e, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x4d, 0x31, 0x52, 0x0d, 0x73, 0x69, 0x6e,
	0x67, 0x6c, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x54, 0x0a, 0x10, 0x72, 0x65,
	0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x0c,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x67, 0x6f, 0x6c, 0x61, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33, 0x2e, 0x4d, 0x31, 0x2e, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x4d, 0x31, 0x52,
	0x0f, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x48, 0x0a, 0x08, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x0d, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x74,
	0x65, 0x73, 0x74, 0x2e, 0x67, 0x6f, 0x6c, 0x61, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33, 0x2e, 0x4d, 0x31, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x07, 0x74, 0x65, 0x73, 0x74, 0x4d, 0x61, 0x70, 0x12, 0x1f, 0x0a, 0x0a, 0x69, 0x6e,
	0x74, 0x5f, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x48, 0x00,
	0x52, 0x09, 0x69, 0x6e, 0x74, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x12, 0x25, 0x0a, 0x0d, 0x73,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x0c, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x43, 0x68, 0x6f, 0x69,
	0x63, 0x65, 0x12, 0x4e, 0x0a, 0x0c, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x5f, 0x65, 0x6e, 0x75,
	0x6d, 0x32, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2b, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x67, 0x6f, 0x6c, 0x61, 0x6e, 0x67,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33, 0x2e, 0x4d, 0x31, 0x2e, 0x4e, 0x65, 0x73, 0x74, 0x65,
	0x64, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x0b, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x45, 0x6e, 0x75,
	0x6d, 0x32, 0x12, 0x32, 0x0a, 0x13, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x5f, 0x73, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x5f, 0x70, 0x69, 0x65, 0x63, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x02, 0x08, 0x02, 0x52, 0x11, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x50, 0x69, 0x65, 0x63, 0x65, 0x12, 0x36, 0x0a, 0x15, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x69, 0x65, 0x63, 0x65, 0x18,
	0x12, 0x20, 0x03, 0x28, 0x09, 0x42, 0x02, 0x08, 0x02, 0x52, 0x13, 0x72, 0x65, 0x70, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x50, 0x69, 0x65, 0x63, 0x65, 0x1a, 0x92,
	0x02, 0x0a, 0x08, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x4d, 0x31, 0x12, 0x29, 0x0a, 0x10, 0x73,
	0x69, 0x6e, 0x67, 0x6c, 0x65, 0x5f, 0x70, 0x72, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x76, 0x65, 0x18,
	0x63, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x50, 0x72, 0x69,
	0x6d, 0x69, 0x74, 0x69, 0x76, 0x65, 0x12, 0x2d, 0x0a, 0x12, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x70, 0x72, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x76, 0x65, 0x18, 0x64, 0x20, 0x03,
	0x28, 0x05, 0x52, 0x11, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x64, 0x50, 0x72, 0x69, 0x6d,
	0x69, 0x74, 0x69, 0x76, 0x65, 0x12, 0x55, 0x0a, 0x0b, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x5f,
	0x65, 0x6e, 0x75, 0x6d, 0x18, 0x65, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x34, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x67, 0x6f, 0x6c, 0x61,
	0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33, 0x2e, 0x4d, 0x31, 0x2e, 0x4e, 0x65, 0x73,
	0x74, 0x65, 0x64, 0x4d, 0x31, 0x2e, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x45, 0x6e, 0x75, 0x6d,
	0x52, 0x0a, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x22, 0x55, 0x0a, 0x0a,
	0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e,
	0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x4b, 0x4e, 0x4f, 0x57, 0x4e,
	0x5f, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x53, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x4b, 0x4e, 0x4f,
	0x57, 0x4e, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x53, 0x10, 0x02, 0x12, 0x14, 0x0a,
	0x10, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e,
	0x53, 0x10, 0x03, 0x1a, 0x3a, 0x0a, 0x0c, 0x54, 0x65, 0x73, 0x74, 0x4d, 0x61, 0x70, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0x37, 0x0a, 0x0a, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x0b, 0x0a,
	0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x52, 0x45,
	0x44, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x47, 0x52, 0x45, 0x45, 0x4e, 0x10, 0x02, 0x12, 0x08,
	0x0a, 0x04, 0x42, 0x4c, 0x55, 0x45, 0x10, 0x03, 0x42, 0x0c, 0x0a, 0x0a, 0x74, 0x65, 0x73, 0x74,
	0x5f, 0x6f, 0x6e, 0x65, 0x6f, 0x66, 0x22, 0x77, 0x0a, 0x11, 0x77, 0x65, 0x69, 0x72, 0x64, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x73,
	0x69, 0x6e, 0x67, 0x6c, 0x65, 0x5f, 0x70, 0x72, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x76, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x50, 0x72, 0x69,
	0x6d, 0x69, 0x74, 0x69, 0x76, 0x65, 0x12, 0x37, 0x0a, 0x17, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x70, 0x72, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x76, 0x65, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x16, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x50, 0x72, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x76, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x2a,
	0x3c, 0x0a, 0x06, 0x53, 0x68, 0x61, 0x70, 0x65, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b,
	0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x54, 0x52, 0x49, 0x41, 0x4e, 0x47,
	0x4c, 0x45, 0x10, 0x03, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x51, 0x55, 0x41, 0x52, 0x45, 0x10, 0x04,
	0x12, 0x0b, 0x0a, 0x06, 0x43, 0x49, 0x52, 0x43, 0x4c, 0x45, 0x10, 0xe7, 0x07, 0x2a, 0x25, 0x0a,
	0x0e, 0x77, 0x65, 0x69, 0x72, 0x64, 0x45, 0x6e, 0x75, 0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x13, 0x0a, 0x0f, 0x77, 0x65, 0x69, 0x72, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x10, 0x00, 0x42, 0x11, 0x5a, 0x0f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33, 0x5f, 0x67,
	0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_golang_src_itest_resources_proto3_proto_rawDescOnce sync.Once
	file_golang_src_itest_resources_proto3_proto_rawDescData = file_golang_src_itest_resources_proto3_proto_rawDesc
)

func file_golang_src_itest_resources_proto3_proto_rawDescGZIP() []byte {
	file_golang_src_itest_resources_proto3_proto_rawDescOnce.Do(func() {
		file_golang_src_itest_resources_proto3_proto_rawDescData = protoimpl.X.CompressGZIP(file_golang_src_itest_resources_proto3_proto_rawDescData)
	})
	return file_golang_src_itest_resources_proto3_proto_rawDescData
}

var file_golang_src_itest_resources_proto3_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_golang_src_itest_resources_proto3_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_golang_src_itest_resources_proto3_proto_goTypes = []interface{}{
	(Shapes)(0),                 // 0: com.proto.test.golang.proto3.Shapes
	(WeirdEnumName)(0),          // 1: com.proto.test.golang.proto3.weirdEnum_name
	(M1_NestedEnum)(0),          // 2: com.proto.test.golang.proto3.M1.NestedEnum
	(M1_NestedM1_NestedEnum)(0), // 3: com.proto.test.golang.proto3.M1.NestedM1.NestedEnum
	(*M1)(nil),                  // 4: com.proto.test.golang.proto3.M1
	(*WeirdMessageName)(nil),    // 5: com.proto.test.golang.proto3.weirdMessage_name
	(*M1_NestedM1)(nil),         // 6: com.proto.test.golang.proto3.M1.NestedM1
	nil,                         // 7: com.proto.test.golang.proto3.M1.TestMapEntry
}
var file_golang_src_itest_resources_proto3_proto_depIdxs = []int32{
	0, // 0: com.proto.test.golang.proto3.M1.single_enum:type_name -> com.proto.test.golang.proto3.Shapes
	0, // 1: com.proto.test.golang.proto3.M1.repeated_enum:type_name -> com.proto.test.golang.proto3.Shapes
	6, // 2: com.proto.test.golang.proto3.M1.single_message:type_name -> com.proto.test.golang.proto3.M1.NestedM1
	6, // 3: com.proto.test.golang.proto3.M1.repeated_message:type_name -> com.proto.test.golang.proto3.M1.NestedM1
	7, // 4: com.proto.test.golang.proto3.M1.test_map:type_name -> com.proto.test.golang.proto3.M1.TestMapEntry
	2, // 5: com.proto.test.golang.proto3.M1.single_enum2:type_name -> com.proto.test.golang.proto3.M1.NestedEnum
	3, // 6: com.proto.test.golang.proto3.M1.NestedM1.single_enum:type_name -> com.proto.test.golang.proto3.M1.NestedM1.NestedEnum
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_golang_src_itest_resources_proto3_proto_init() }
func file_golang_src_itest_resources_proto3_proto_init() {
	if File_golang_src_itest_resources_proto3_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_golang_src_itest_resources_proto3_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*M1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_golang_src_itest_resources_proto3_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WeirdMessageName); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_golang_src_itest_resources_proto3_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*M1_NestedM1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_golang_src_itest_resources_proto3_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*M1_IntChoice)(nil),
		(*M1_StringChoice)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_golang_src_itest_resources_proto3_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_golang_src_itest_resources_proto3_proto_goTypes,
		DependencyIndexes: file_golang_src_itest_resources_proto3_proto_depIdxs,
		EnumInfos:         file_golang_src_itest_resources_proto3_proto_enumTypes,
		MessageInfos:      file_golang_src_itest_resources_proto3_proto_msgTypes,
	}.Build()
	File_golang_src_itest_resources_proto3_proto = out.File
	file_golang_src_itest_resources_proto3_proto_rawDesc = nil
	file_golang_src_itest_resources_proto3_proto_goTypes = nil
	file_golang_src_itest_resources_proto3_proto_depIdxs = nil
}
