missing.resource.property.inspection.display.name=Missing required property
missing.resource.property.inspection.required.properties.error.message=Missing required properties: {0}
missing.resource.property.inspection.add.properties.quick.fix.name=Add properties: {0}
missing.resource.property.inspection.add.properties.quick.fix.family.name=Add missing properties

conflicting.resource.property.inspection.display.name=Conflicting properties
conflicting.resource.property.inspection.error.message=Conflicts with: {0}

deprecated.element.inspection.display.name=Deprecated blocks/properties
deprecated.element.inspection.deprecated.property.error.message=Deprecated property: {0}{2, choice, 0# : {1}|1#}
deprecated.element.inspection.deprecated.block.error.message=Deprecated block: {0}{2, choice, 0# : {1}|1#}

unknown.block.type.inspection.display.name=Unknown block type
unknown.block.type.inspection.unknown.block.type.error.message=Unknown block type {0}
unknown.block.type.inspection.missing.closing.brace.error.message=Missing closing brace on previous line
unknown.block.type.inspection.add.closing.brace.quick.fix.test=Add closing braces before element

block.name.validness.inspection.display.name=Invalid block names
block.name.validness.inspection.block.name.should.not.be.empty.error.message=Block name should not be empty
block.name.validness.inspection.invalid.name.error.message=A name must start with a letter or underscore and may contain only letters, digits, underscores, and dashes.
block.name.validness.inspection.missing.block.name.error.message={0} more name elements required
block.name.validness.inspection.extra.block.name.error.message=Too many block name elements
block.name.validness.inspection.add.name.quick.fix.name=Add name elements
block.name.validness.inspection.remove.name.quick.fix.name=Remove extra name elements
block.name.validness.inspection.rename.block.quick.fix.name=Rename

terraform.files.duplicates.inspection.group.display.name=Duplicates

duplicated.block.property.inspection.display.name=Duplicated property
duplicated.block.property.inspection.duplicate.property.error.message=Property ''{0}'' declared multiple times inside one block

duplicated.inspection.base.navigate.to.duplicate.quick.fix.name=Navigate to {0} duplicate
duplicated.inspection.base.navigate.to.duplicate.quick.fix.name.first=first
duplicated.inspection.base.show.other.duplicates.quick.fix.name=View duplicates like this

duplicated.output.inspection.display.name=Duplicated output
duplicated.output.inspection.output.declared.multiple.times.error.message=Output ''{0}'' declared multiple times
duplicated.output.inspection.delete.output.quick.fix.name=Delete output
duplicated.output.inspection.rename.output.quick.fix=Rename output

duplicated.provider.inspection.display.name=Duplicated provider
duplicated.provider.inspection.display.name.multiple.declaration.error.message=Provider ''{0}'' declared multiple times
duplicated.provider.inspection.display.name.add.provider.alias.quick.fix.name=Add provider alias
duplicated.provider.inspection.display.name.change.provider.alias.quick.fix.name=Change provider alias

duplicated.variable.inspection.display.name=Duplicated variable
duplicated.variable.inspection.multiple.declaration.error.message=Variable ''{0}'' declared multiple times
duplicated.variable.inspection.delete.variable.quick.fix.name=Delete variable
duplicated.variable.inspection.rename.variable.quick.fix.name=Rename variable

incorrect.variable.type.inspection.display.name=Incorrect variable type
incorrect.variable.type.inspection.legacy.variable.error.message=Incorrect variable type in ''legacy form'' (pre Terraform 0.12), expected {0}
incorrect.variable.type.inspection.type.mismatch.error.message=Variable value type ''{0}'' doesn''t match default value type ''{1}''
incorrect.variable.type.inspection.type.mismatch.simplified.error.message=Variable value type doesn''t match default value type ''{0}''
incorrect.variable.type.inspection.change.type.quick.fix.name=Change variable type to {0}

missing.module.inspection.display.name=Unresolved module
missing.module.inspection.missing.module.error.message=Cannot locate module locally: {0}
missing.module.inspection.ru.terraform.get.quick.fix.name=Run ''terraform get'' in {0}
missing.module.inspection.ru.terraform.get.quick.fix.family.name=Run ''terraform get''
missing.module.inspection.ru.terraform.get.quick.fix.failure.message=Failed to run ''terraform get'': {0}
missing.module.inspection.ru.terraform.get.quick.fix.failure.title=Fetching Terraform Modules Failed

illegal.interpolations.inspection.display.name=Illegal interpolation
illegal.interpolations.inspection.no.double.quotes.error.message=Module source should be a double-quoted string
illegal.interpolations.inspection.in.variable.error.message=Interpolations are not allowed in variables
illegal.interpolations.inspection.no.function.calls.error.message=A single static variable reference is required: only attribute access and indexing with constant keys (no calculations, function calls, template expressions, and so on).
illegal.interpolations.inspection.depends.on.error.message=Interpolations are not allowed in {0}

tfvars.unsupported.element.inspection.display.name=Incorrect .tfvars content
tfvars.unsupported.element.inspection.only.key.values.allowed.error.message=Only 'key=value' elements allowed
tfvars.unsupported.element.inspection.illegal.value.type.error.message=Property value should be either number, double-quoted string, list, or object
tfvars.unsupported.element.inspection.no.quotes.in.argument.name.error.message=Argument names must not be quoted
tfvars.unsupported.element.inspection.undefined.variable.error.message=Undefined variable ''{0}''
tfvars.unsupported.element.inspection.incorrect.variable.type.error.message=Incorrect variable value type. Expected: {0}
tfvars.unsupported.element.inspection.incorrect.variable.type.error.message.string.expected=simple value (string or number)
tfvars.unsupported.element.inspection.convert.to.double.quoted.string.quick.fix.name=Convert to double-quoted string

type.specification.validator.illegal.type.specification.error.message=A type specification is either a primitive type keyword (bool, number, string) or a complex type constructor call, like list(string)
type.specification.validator.exact.type.required.error.message=The keyword {0} cannot be used in this type specification: an exact type is required
type.specification.validator.collection.argument.required.error.message=The {0} type constructor requires one argument specifying the element type
type.specification.validator.object.argument.required.error.message=The object type constructor requires one argument specifying the attribute types and values as a map
type.specification.validator.tuple.argument.required.error.message=The tuple type constructor requires one argument specifying the element types as a list
type.specification.validator.invalid.type.specification.error.message=The keyword {0} is not a valid type specification
type.specification.validator.simple.keyword.required.for.call.error.message=Method name must be a simple keyword
type.specification.validator.no.argument.expected.error.message=Primitive type keyword {0} does not expect arguments
type.specification.validator.object.argument.map.required.error.message=Object type constructor requires a map whose keys are attribute names and whose values are the corresponding attribute types
type.specification.validator.block.not.allowed.error.message=Blocks not allowed, only properties
type.specification.validator.object.constructor.map.keys.must.be.attribute.names.error.message=Object constructor map keys must be attribute names
type.specification.validator.invalid.type.constructor.error.message=Keyword {0} is not a valid type constructor

terraform.files.inspection.group.display.name=Terraform configs

hil.scope.not.available.in.context.inspection.display.name=Unavailable scope
hil.scope.not.available.in.context.inspection.illegal.self.use.message=Referencing 'self' allowed only in 'provisioner' and 'connection' blocks inside resource definition

hil.unknown.resource.type.inspection.display.name=Unknown resource types referenced
hil.unknown.resource.type.inspection.unknown.resource.type.error.message=Unknown resource type

hil.unresolved.reference.inspection.display.name=Unresolved reference
hil.unresolved.reference.inspection.unresolved.reference.error.message=Unresolved reference {0}

hil.operation.types.mismatch.inspection.display.name=Operation argument type mismatch
hil.operation.types.mismatch.inspection.number.expected.error.message=Number expected instead of {0}
hil.operation.types.mismatch.inspection.boolean.expected.error.message=Boolean expected instead of {0}
hil.operation.types.mismatch.inspection.boolean.or.string.expected.error.message=Condition should be boolean or string with boolean value
hil.operation.types.mismatch.inspection.both.branches.must.have.same.type.error.message=Both branches expected to have the same type. ''then'' is {0}, ''else'' is {1}

hil.convert.to.hcl.inspection.display.name=HIL expression can be converted to HCL2
hil.convert.to.hcl.inspection.interpolation.could.be.replaced.with.hcl2.message=Interpolation can be replaced with HCL2 expression
hil.convert.to.hcl.inspection.convert.to.hcl2.quick.fix.text=Convert to HCL2 expression

hcl.simplify.expression.inspection.display.name=Suboptimal expression
hcl.simplify.expression.inspection.could.be.replaced.with.list.indexing.message=Can be replaced with list indexing (may change semantics)
hcl.simplify.expression.inspection.replace.with.list.indexing.quick.fix.text=Replace with list indexing
hcl.simplify.expression.inspection.replace.with.list.indexing.quick.fix.family.name=Simplify expression

terraform.name=Terraform
terraform.name.lowercase=terraform
terraform.configuration.title=Terraform
terraform.configuration.type.description=Runs Terraform with specified parameters
run.configuration.no.working.directory.specified=No working directory specified
run.configuration.no.terraform.specified=Path to Terraform executable is not set
run.configuration.terraform.path.incorrect=Path to Terraform executable is incorrect

introduce.variable.title=Introduce Variable
refactoring.introduce.selection.error=Can't perform refactoring using selected element(s)
refactoring.introduce.variable.scope.error=Name clashes with existing variable
refactoring.introduce.name.error=Incorrect name
refactoring.introduce.anchor.error=Can't find place for the result
refactoring.introduce.error=Introduce Error

label.runs.terraform.fmt="Runs `terraform fmt` on a Terraform HCL config file"

inspection.suppressor.suppress.for.property.action.name=Suppress for property
inspection.suppressor.suppress.for.element.action.name=Suppress for {0}
terraform.fmt.commit.error.details.caption=\\&Details...
terraform.fmt.commit.error.message=<html><body>'terraform fmt' returned non-zero code on some of the files.<br/>Would you like to commit anyway?</body></html>

AddVariableFix.family.name=Add variable
AddVariableFix.text=Add variable ''{0}''

HCLFileType.description=HashiCorp Configuration Language files
HILFileType.description=HashiCorp Interpolation Language file
TerraformFileType.description=Terraform config files

code.style.align.properties.title=Align properties
code.style.formatting.options.group.name=Formatting options
code.style.line.commenter.character.title=Line commenter character
code.style.code.conventions.group.name=Code conventions

hcl.code.style.settings.braces=Braces
hcl.code.style.settings.equals=Equals
hcl.code.style.settings.arrays=Arrays
hcl.code.style.settings.objects=Objects

hcl.color.settings.braces.and.operators.brackets=Braces and Operators//Brackets
hcl.color.settings.braces.and.operators.braces=Braces and Operators//Braces
hcl.color.settings.braces.and.operators.comma=Braces and Operators//Comma
hcl.color.settings.braces.and.operators.operation.sign=Braces and Operators//Operation sign
hcl.color.settings.number=Number
hcl.color.settings.keyword=Keyword
hcl.color.settings.identifier=Identifier
hcl.color.settings.comments.line.comment=Comments//Line comment
hcl.color.settings.comments.block.comment=Comments//Block comment
hcl.color.settings.property.name=Property name
hcl.color.settings.block.only.name.type=Block//Block only name/type
hcl.color.settings.block.first.type=Block//Block first type
hcl.color.settings.block.second.type=Block//Block second type
hcl.color.settings.block.other.types=Block//Block other types
hcl.color.settings.block.name=Block//Block name
hcl.color.settings.string.text=String//String text
hcl.color.settings.string.valid.escape.sequence=String//Valid escape sequence
hcl.color.settings.string.invalid.escape.sequence=String//Invalid escape sequence

hil.color.settings.braces.operators.parentheses=Braces and Operators//Parentheses
hil.color.settings.braces.operators.braces=Braces and Operators//Braces
hil.color.settings.braces.operators.brackets=Braces and Operators//Brackets
hil.color.settings.braces.operators.comma=Braces and Operators//Comma
hil.color.settings.braces.operators.operation.sign=Braces and Operators//Operation sign
hil.color.settings.braces.operators.dot=Braces and Operators//Dot
hil.color.settings.number=Number
hil.color.settings.string=String
hil.color.settings.keyword=Keyword
hil.color.settings.identifier=Identifier
hil.color.settings.predefined.scope=Predefined scope
hil.color.settings.resource.type.reference=Resource type reference
hil.color.settings.resource.instance.reference=Resource instance reference
hil.color.settings.property.reference=Property reference
hil.color.settings.valid.escape.sequence=Valid escape sequence
hil.color.settings.invalid.escape.sequence=Invalid escape sequence

HCLFindUsagesProvider.type.module=module
HCLFindUsagesProvider.type.variable=input variable
HCLFindUsagesProvider.type.output.value=output value
HCLFindUsagesProvider.type.provider=provider
HCLFindUsagesProvider.type.resource=resource
HCLFindUsagesProvider.type.data.source=data source
HCLFindUsagesProvider.type.terraform.configuration=terraform configuration
HCLFindUsagesProvider.type.local.values=local values
HCLFindUsagesProvider.type.backend.configuration=backend configuration
HCLFindUsagesProvider.type.local.value=local value
HCLFindUsagesProvider.type.property=property
HCLFindUsagesProvider.type.dynamic.iterator=dynamic iterator
HCLFindUsagesProvider.type.for.loop.variable=for loop variable
HCLFindUsagesProvider.type.named.block=block({0})
HCLFindUsagesProvider.type.untyped.named.element=<Untyped PsiNamedElement {0}>
HCLFindUsagesProvider.type.untyped.non.psi.named.element=<Untyped non-PsiNamedElement {0}>

hcl.literal.annotator.property.key=property key
hcl.literal.annotator.block.only.name.identifier=block only name identifier
hcl.literal.annotator.block.name.identifier=block name identifier
hcl.literal.annotator.block.type.1.element=block type 1 element
hcl.literal.annotator.block.type.2.element=block type 2 element
hcl.literal.annotator.block.type.3.element=block type 3+ element
hcl.literal.annotator.missing.closing.quote=Missing closing quote
hcl.literal.annotator.illegal.octal.escape.sequence=Illegal octal escape sequence
hcl.literal.annotator.illegal.hex.escape.sequence=Illegal hex escape sequence
hcl.literal.annotator.illegal.unicode.escape.sequence=Illegal unicode escape sequence
hcl.literal.annotator.illegal.escape.sequence=Illegal escape sequence
hcl.literal.annotator.argument.names.must.not.be.quoted=Argument names must not be quoted
hcl.literal.annotator.illegal.number.literal=Illegal number literal
hcl.literal.annotator.add.closing.quote.quick.fix.text=Add closing quote

hil.literal.annotator.unwrap.string.quick.fix.text=Convert to identifier

hil.variable.annotator.expression.start.expected=Start of expression expected
hil.variable.annotator.expanded.function.argument.must.be.immediately.followed.by.closing.parentheses=Closing parentheses expected immediately after an expanded function argument

hil.introduce.variable.handler.dialog.caption=Introduce Variable
hil.inplace.variable.introducer.title=Introduce Variable


terraform.executable.macro.description=Terraform executable path
terraform.settings.executable.path.label=Terraform executable path
terraform.settings.reloading.terraform.model.progress.title=Reloading terraform model
terraform.settings.reload.terraform.metadata.model=Reload Terraform Metadata Model

terraform.run.configuration.name=Terraform Run
terraform.run.configuration.type.plan.name.suffix=Plan
terraform.run.configuration.type.apply.name.suffix=Apply

introduce.dialogs.replace.all.checkbox.title={0} ({1} occurrences)

TFExecutor.finished.successfully.notification.text=Finished successfully
TFExecutor.interrupted.notification.text=Interrupted
TFExecutor.unknown.error.notification.text=Unknown error, see logs for details
TFExecutor.failed.to.run.notification.text=Failed to run
notification.group.terraform.execution=Terraform execution finished

action.GenerateTFResource.text=Resource...
action.GenerateTFDataSource.text=Data Source...
action.GenerateTFVariable.text=Variable...
action.GenerateTFOutput.text=Output...
action.GenerateTFProvider.text=Provider...
action.GenerateTFModule.text=Module...
action.TFFmtFileAction.text=Format File
action.TFFmtFileAction.description=Format selected file with 'terraform fmt' util

group.TFTools.text=Terraform Tools
group.TFTools.description=Terraform external tools