terraform.display.name=Terraform/OpenTofu

missing.resource.property.inspection.display.name=Missing required property
missing.resource.property.inspection.required.properties.error.message=Missing required properties: {0}
missing.resource.property.inspection.add.properties.quick.fix.name=Add missing properties
disable.deep.variable.search=Disable variable search in nested directories

conflicting.resource.property.inspection.display.name=Conflicting properties
conflicting.resource.property.inspection.error.message=Conflicts with: {0}

deprecated.element.inspection.display.name=Deprecated blocks/properties
deprecated.element.inspection.deprecated.property.error.message=Deprecated property: {0}{2, choice, 0# : {1}|1#}
deprecated.element.inspection.deprecated.block.error.message=Deprecated block: {0}{2, choice, 0# : {1}|1#}

unknown.block.type.inspection.display.name=Unknown block type
unknown.block.type.inspection.unknown.block.type.error.message=Unknown block type {0}
unknown.block.type.inspection.missing.closing.brace.error.message=Missing closing brace on previous line
unknown.block.type.inspection.add.closing.brace.quick.fix.test=Add closing braces before element
unknown.block.type.inspection.quick.fix.name=Remove unknown block

unused.local.inspection.display.name=Unused elements
unused.local.inspection.error.message=Local ''{0}'' is never used
unused.local.inspection.quick.fix.name=Remove unused local
unused.variable.inspection.error.message=Variable ''{0}'' is never used
unused.variable.inspection.quick.fix.name=Remove unused variable
unused.data.source.inspection.error.message=Data source ''{0}'' is never used
unused.data.source.inspection.quick.fix.name=Remove unused data source

unknown.property.in.block.inspection.display.name=Unknown property
unknown.property.in.block.inspection.error.message=Unknown property {0}
unknown.property.in.block.inspection.quick.fix.name=Remove unknown property

unknown.resource.identifier.inspection.display.name=Unknown resource type
unknown.resource.identifier.inspection.error.message=Unknown {0}: "{1}"
unknown.resource.identifier.for.known.provider=For the provider "{2}", {0} "{1}" is not defined

block.name.validness.inspection.display.name=Invalid block names
block.name.validness.inspection.block.name.should.not.be.empty.error.message=Block name should not be empty
block.name.validness.inspection.invalid.name.error.message=A name must start with a letter or underscore and may contain only letters, digits, underscores, and dashes.
block.name.validness.inspection.missing.block.name.error.message={0} more name elements required
block.name.validness.inspection.extra.block.name.error.message=Too many block name elements
block.name.validness.inspection.add.name.quick.fix.name=Add name elements
block.name.validness.inspection.remove.name.quick.fix.name=Remove extra name elements
block.name.validness.inspection.rename.block.quick.fix.name=Rename

terraform.files.duplicates.inspection.group.display.name=Duplicates

duplicated.block.property.inspection.display.name=Duplicated property
duplicated.block.property.inspection.duplicate.property.error.message=Property ''{0}'' declared multiple times inside one block

duplicated.inspection.base.navigate.to.duplicate.quick.fix.name=Navigate to {0} duplicate
duplicated.inspection.base.navigate.to.duplicate.quick.fix.name.first=first
duplicated.inspection.base.show.other.duplicates.quick.fix.name=View duplicates like this

duplicated.output.inspection.display.name=Duplicated output
duplicated.output.inspection.output.declared.multiple.times.error.message=Output ''{0}'' declared multiple times
duplicated.output.inspection.delete.output.quick.fix.name=Delete output
duplicated.output.inspection.rename.output.quick.fix=Rename output

duplicated.provider.inspection.display.name=Duplicated provider
duplicated.provider.inspection.display.name.multiple.declaration.error.message=Provider ''{0}'' declared multiple times
duplicated.provider.inspection.display.name.add.provider.alias.quick.fix.name=Add provider alias
duplicated.provider.inspection.display.name.change.provider.alias.quick.fix.name=Change provider alias

duplicated.variable.inspection.display.name=Duplicated variable
duplicated.variable.inspection.multiple.declaration.error.message=Variable ''{0}'' declared multiple times
duplicated.variable.inspection.delete.variable.quick.fix.name=Delete variable
duplicated.variable.inspection.rename.variable.quick.fix.name=Rename variable

incorrect.variable.type.inspection.display.name=Incorrect variable type
incorrect.variable.type.inspection.legacy.variable.error.message=Incorrect variable type in ''legacy form'' (pre Terraform 0.12), expected {0}
incorrect.variable.type.inspection.type.mismatch.error.message=Variable value type ''{0}'' doesn''t match default value type ''{1}''
incorrect.variable.type.inspection.type.mismatch.simplified.error.message=Variable value type doesn''t match default value type ''{0}''
incorrect.variable.type.inspection.change.type.quick.fix.name=Change variable type to {0}

missing.module.inspection.display.name=Unresolved module
missing.module.inspection.missing.module.error.message=Cannot locate module locally: {0}
missing.module.inspection.run.terraform.get.quick.fix.name=Run ''{1} get'' in {0}
missing.module.inspection.run.terraform.get.quick.fix.family.name=Run ''{0} get''
missing.module.inspection.run.terraform.get.quick.fix.failure.message=Failed to run ''{1} get'': {0}
missing.module.inspection.run.terraform.get.quick.fix.failure.title=Fetching {0} Modules Failed

not.initialized.inspection.display.name=Module directory isn't initialized
not.initialized.inspection.error.message=Module directory is not initialized

illegal.interpolations.inspection.display.name=Illegal interpolation
illegal.interpolations.inspection.no.double.quotes.error.message=Module source should be a double-quoted string
illegal.interpolations.inspection.in.variable.error.message=Interpolations are not allowed in variables
illegal.interpolations.inspection.no.function.calls.error.message=A single static variable reference is required: only attribute access and indexing with constant keys (no calculations, function calls, template expressions, and so on).
illegal.interpolations.inspection.depends.on.error.message=Interpolations are not allowed in {0}

tfvars.unsupported.element.inspection.display.name=Incorrect .tfvars content
tfvars.unsupported.element.inspection.only.key.values.allowed.error.message=Only 'key=value' elements allowed
tfvars.unsupported.element.inspection.illegal.value.type.error.message=Property value should be either number, double-quoted string, list, or object
tfvars.unsupported.element.inspection.no.quotes.in.argument.name.error.message=Argument names must not be quoted
tfvars.unsupported.element.inspection.undefined.variable.error.message=Undefined variable ''{0}''
tfvars.unsupported.element.inspection.incorrect.variable.type.error.message=Incorrect variable value type. Expected: {0}
tfvars.unsupported.element.inspection.incorrect.variable.type.error.message.string.expected=simple value (string or number)
tfvars.unsupported.element.inspection.convert.to.double.quoted.string.quick.fix.name=Convert to double-quoted string

type.specification.validator.illegal.type.specification.error.message=A type specification is either a primitive type keyword (bool, number, string) or a complex type constructor call, like list(string)
type.specification.validator.exact.type.required.error.message=The keyword {0} cannot be used in this type specification: an exact type is required
type.specification.validator.collection.argument.required.error.message=The {0} type constructor requires one argument specifying the element type
type.specification.validator.object.argument.required.error.message=The object type constructor requires one argument specifying the attribute types and values as a map
type.specification.validator.tuple.argument.required.error.message=The tuple type constructor requires one argument specifying the element types as a list
type.specification.validator.optional.argument.required.error.message=The optional type constructor requires one or two arguments specifying element type and default value
type.specification.validator.invalid.type.specification.error.message=The keyword {0} is not a valid type specification
type.specification.validator.no.argument.expected.error.message=Primitive type keyword {0} does not expect arguments
type.specification.validator.object.argument.map.required.error.message=Object type constructor requires a map whose keys are attribute names and whose values are the corresponding attribute types
type.specification.validator.block.not.allowed.error.message=Blocks not allowed, only properties
type.specification.validator.object.constructor.map.keys.must.be.attribute.names.error.message=Object constructor map keys must be attribute names
type.specification.validator.invalid.type.constructor.error.message=Keyword {0} is not a valid type constructor

terraform.files.inspection.group.display.name=Terraform/OpenTofu

hil.scope.not.available.in.context.inspection.display.name=Unavailable scope
hil.scope.not.available.in.context.inspection.illegal.self.use.message=Referencing 'self' allowed only in 'provisioner' and 'connection' blocks inside resource definition

hil.unknown.resource.type.inspection.display.name=Unknown resource types referenced
hil.unknown.resource.type.inspection.unknown.resource.type.error.message=Unknown resource type

hil.unresolved.reference.inspection.display.name=Unresolved reference
hil.unresolved.reference.inspection.unresolved.reference.error.message=Unresolved reference {0}

hil.operation.types.mismatch.inspection.display.name=Operation argument type mismatch
hil.operation.types.mismatch.inspection.number.expected.error.message=Number expected instead of {0}
hil.operation.types.mismatch.inspection.boolean.expected.error.message=Boolean expected instead of {0}
hil.operation.types.mismatch.inspection.boolean.or.string.expected.error.message=Condition should be boolean or string with boolean value
hil.operation.types.mismatch.inspection.both.branches.must.have.same.type.error.message=Both branches expected to have the same type. ''then'' is {0}, ''else'' is {1}

hil.convert.to.hcl.inspection.display.name=HIL expression can be converted to HCL2
hil.convert.to.hcl.inspection.interpolation.could.be.replaced.with.hcl2.message=Interpolation can be replaced with HCL2 expression
hil.convert.to.hcl.inspection.convert.to.hcl2.quick.fix.text=Convert to HCL2 expression

hcl.simplify.expression.inspection.display.name=Suboptimal expression
hcl.simplify.expression.inspection.could.be.replaced.with.list.indexing.message=Can be replaced with list indexing (may change semantics)
hcl.simplify.expression.inspection.replace.with.list.indexing.quick.fix.text=Replace with list indexing
hcl.simplify.expression.inspection.replace.with.list.indexing.quick.fix.family.name=Simplify expression

terraform.name=Terraform
terraform.name.lowercase=terraform
terraform.configuration.type.description=Run {0} with specified parameters
run.configuration.no.working.directory.specified=No working directory specified
run.configuration.no.terraform.specified=Path to {0} executable is not set
run.configuration.terraform.path.incorrect=Could not find {1} executable at the specified path: <br>{0}
run.configuration.terraform.path.title={0} executable path error
terraform.open.settings=Open settings
terraform.run.text=Run {0}

introduce.variable.title=Introduce Variable
refactoring.introduce.selection.error=Can't perform refactoring using selected element(s)
refactoring.introduce.variable.scope.error=Name clashes with existing variable
refactoring.introduce.name.error=Incorrect name
refactoring.introduce.anchor.error=Can't find place for the result
refactoring.introduce.error=Introduce Error

label.runs.terraform.fmt="Runs `terraform/tofu fmt` on an HCL-compatible config file"

inspection.suppressor.suppress.for.property.action.name=Suppress for property
inspection.suppressor.suppress.for.element.action.name=Suppress for {0}
terraform.fmt.commit.error.message=Couldn't apply 'terraform fmt' on chosen files

AddVariableFix.family.name=Add variable
AddVariableFix.text=Add variable ''{0}''

HCLFileType.description=HashiCorp Configuration Language files
HILFileType.description=HashiCorp Interpolation Language file
TerraformFileType.description=Terraform config files

terraform.template.file.type=Terraform template files

code.style.align.properties.title=Align properties while formatting:
code.style.line.commenter.character.title=Line commenter symbol:
code.style.run.tf.fmt.title=Invoke 'terraform/tofu fmt' for formatting
code.style.run.tf.fmt.comment=<html>When you invoke the Reformat File action, 'terraform/tofu fmt' will be used as a formatting tool instead of the plugin's formatter.<br><br>Note that 'terraform fmt' supports only <code>.tf</code>, <code>.tfvars</code>, and <code>.tftest.hcl</code> files.<br><br>The 'tofu fmt' command supports terraform files and <code>.tofu</code> ones</html>
code.style.run.tf.fmt.header=Use 'terraform/tofu fmt' instead of built-in formatter
code.style.import.provider.automatically=Import providers automatically on completion
code.style.import.provider.text=Insert the provider requirements into the current file when you complete the resource name. Add the <code>required_providers</code> block if it's missing.
code.style.import.provider.header=Add 'required_providers' on completion

hcl.code.style.settings.braces=Braces
hcl.code.style.settings.equals=Equals
hcl.code.style.settings.arrays=Arrays
hcl.code.style.settings.objects=Objects

hcl.color.settings.braces.and.operators.brackets=Braces and Operators//Brackets
hcl.color.settings.braces.and.operators.braces=Braces and Operators//Braces
hcl.color.settings.braces.and.operators.comma=Braces and Operators//Comma
hcl.color.settings.braces.and.operators.operation.sign=Braces and Operators//Operation sign
hcl.color.settings.number=Number
hcl.color.settings.keyword=Keyword
hcl.color.settings.identifier=Identifier
hcl.color.settings.comments.line.comment=Comments//Line comment
hcl.color.settings.comments.block.comment=Comments//Block comment
hcl.color.settings.property.name=Property name
hcl.color.settings.block.only.name.type=Block//Block only name/type
hcl.color.settings.block.first.type=Block//Block first type
hcl.color.settings.block.second.type=Block//Block second type
hcl.color.settings.block.other.types=Block//Block other types
hcl.color.settings.block.name=Block//Block name
hcl.color.settings.string.text=String//String text
hcl.color.settings.string.valid.escape.sequence=String//Valid escape sequence
hcl.color.settings.string.invalid.escape.sequence=String//Invalid escape sequence

hil.color.settings.braces.operators.parentheses=Braces and Operators//Parentheses
hil.color.settings.braces.operators.braces=Braces and Operators//Braces
hil.color.settings.braces.operators.brackets=Braces and Operators//Brackets
hil.color.settings.braces.operators.comma=Braces and Operators//Comma
hil.color.settings.braces.operators.operation.sign=Braces and Operators//Operation sign
hil.color.settings.braces.operators.dot=Braces and Operators//Dot
hil.color.settings.number=Number
hil.color.settings.string=String
hil.color.settings.keyword=Keyword
hil.color.settings.identifier=Identifier
hil.color.settings.predefined.scope=Predefined scope
hil.color.settings.resource.type.reference=Resource type reference
hil.color.settings.resource.instance.reference=Resource instance reference
hil.color.settings.property.reference=Property reference
hil.color.settings.valid.escape.sequence=Valid escape sequence
hil.color.settings.invalid.escape.sequence=Invalid escape sequence
hil.color.settings.template.background=Template segment background

HCLFindUsagesProvider.type.module=module
HCLFindUsagesProvider.type.variable=input variable
HCLFindUsagesProvider.type.output.value=output value
HCLFindUsagesProvider.type.provider=provider
HCLFindUsagesProvider.type.resource=resource
HCLFindUsagesProvider.type.data.source=data source
HCLFindUsagesProvider.type.terraform.configuration=terraform configuration
HCLFindUsagesProvider.type.local.values=local values
HCLFindUsagesProvider.type.backend.configuration=backend configuration
HCLFindUsagesProvider.type.local.value=local value
HCLFindUsagesProvider.type.property=property
HCLFindUsagesProvider.type.dynamic.iterator=dynamic iterator
HCLFindUsagesProvider.type.for.loop.variable=for loop variable
HCLFindUsagesProvider.type.named.block=block({0})
HCLFindUsagesProvider.type.untyped.named.element=<Untyped PsiNamedElement {0}>
HCLFindUsagesProvider.type.untyped.non.psi.named.element=<Untyped non-PsiNamedElement {0}>

hcl.literal.inspection.display.name=Invalid string and number literal
hcl.literal.inspection.missing.closing.quote=Missing closing quote
hcl.literal.inspection.illegal.octal.escape.sequence=Illegal octal escape sequence
hcl.literal.inspection.illegal.hex.escape.sequence=Illegal hex escape sequence
hcl.literal.inspection.illegal.unicode.escape.sequence=Illegal unicode escape sequence
hcl.literal.inspection.illegal.escape.sequence=Illegal escape sequence
hcl.literal.inspection.argument.names.must.not.be.quoted=Argument names must not be quoted
hcl.literal.inspection.illegal.number.literal=Illegal number literal
hcl.literal.inspection.add.closing.quote.quick.fix.text=Add closing quote
hcl.literal.inspection.invalid.quotes=Double-quotes should be used in Terraform files
hcl.literal.inspection.replace.quotes.quick.fix.text=Replace with double-quotes

hcl.literal.annotator.property.key=Property key
hcl.literal.annotator.block.only.name.identifier=Block only name identifier
hcl.literal.annotator.block.name.identifier=block name identifier
hcl.literal.annotator.block.type.1.element=block type 1 element
hcl.literal.annotator.block.type.2.element=block type 2 element
hcl.literal.annotator.block.type.3.element=block type 3+ element

hil.literal.annotator.unwrap.string.quick.fix.text=Convert to identifier

hil.variable.annotator.expression.start.expected=Start of expression expected
hil.variable.annotator.expanded.function.argument.must.be.immediately.followed.by.closing.parentheses=Closing parentheses expected immediately after an expanded function argument

hil.introduce.variable.handler.dialog.caption=Introduce Variable
hil.inplace.variable.introducer.title=Introduce Variable

terraform.executable.macro.description=Terraform executable path
tool.settings.executable.path.label={0} executable path:

tool.detectAndTestButton.text=Detect and Test
tool.testButton.text=Test
tool.testResultLabel.progressTitle=Testing\u2026
tool.testResultLabel.not.found=Cannot find {0}
tool.testResultLabel.installed={0} installed
tool.testResultLabel.not.installed=Cannot install {0}
tool.testResultLabel.download.progress.title=Downloading {0}\u2026
tool.installButton.text=Install
tool.executor.version=Getting {0} version
tool.executor.unrecognized.version=Unrecognized {0} version
tool.executor.invalid.path=Specified path doesn't exist

terraform.run.configuration.name={0} Run
terraform.run.configuration.command.label=Main command:
terraform.run.configuration.global.options.label=Global options:
terraform.run.configuration.global.options.fragment=Global options
terraform.run.configuration.command.combobox.none.item=Custom
terraform.run.configuration.arguments.label=Program arguments:
terraform.run.configuration.arguments.empty.validation.text='Program arguments' should not be empty when \u2018Custom\u2019 is selected. Please provide a valid Terraform command or options
terraform.run.configuration.init.name.suffix=Init
terraform.run.configuration.validate.name.suffix=Validate
terraform.run.configuration.plan.name.suffix=Plan
terraform.run.configuration.apply.name.suffix=Apply
terraform.run.configuration.destroy.name.suffix=Destroy
terraform.run.configuration.custom.name.suffix=Custom

group.TerraformRunConfigurationActions.text=Terraform Run Configurations
group.TerraformRunConfigurationActions.description=Manage and run Terraform configurations in your project

group.OpenTofuRunConfigurationActions.text=OpenTofu Run Configurations
group.OpenTofuRunConfigurationActions.description=Manage and run OpenTofu configurations in your project

action.TfInitConfigAction.text=Terraform Init
action.TfInitConfigAction.description=Initialize the Terraform working directory
action.TfValidateConfigAction.text=Terraform Validate
action.TfValidateConfigAction.description=Check whether the configuration is valid
action.TfPlanConfigAction.text=Terraform Plan
action.TfPlanConfigAction.description=Show changes required by the current configuration
action.TfApplyConfigAction.text=Terraform Apply
action.TfApplyConfigAction.description=Create or update infrastructure
action.TfDestroyConfigAction.text=Terraform Destroy
action.TfDestroyConfigAction.description=Destroy previously created infrastructure

action.OtInitConfigAction.text=OpenTofu Init
action.OtInitConfigAction.description=Initialize the OpenTofu working directory
action.OtValidateConfigAction.text=OpenTofu Validate
action.OtValidateConfigAction.description=Check whether the configuration is valid
action.OtPlanConfigAction.text=OpenTofu Plan
action.OtPlanConfigAction.description=Show changes required by the current configuration
action.OtApplyConfigAction.text=OpenTofu Apply
action.OtApplyConfigAction.description=Create or update infrastructure
action.OtDestroyConfigAction.text=OpenTofu Destroy
action.OtDestroyConfigAction.description=Destroy previously created infrastructure


introduce.dialogs.replace.all.checkbox.title={0} ({1} occurrences)

TFExecutor.finished.successfully.notification.text=Finished successfully
TFExecutor.interrupted.notification.text=Interrupted
TFExecutor.unknown.error.notification.text=Unknown error, see logs for details
TFExecutor.failed.to.run.notification.text=Failed to run
notification.group.terraform.execution=Terraform execution finished

action.TFFmtFileAction.text=Reformat Using Terraform/Tofu Fmt
action.TFFmtFileAction.description=Format selected file with 'terraform/tofu fmt' util
action.TFInitAction.text=Initialize
action.TFInitAction.description=Runs 'terraform/tofu init' util in the module directory
action.TFInitRequiredAction.text=Initialize Module Directory
action.TFInitRequiredAction.description=Runs 'terraform/tofu init' to properly initialize module directory
action.TFGenerateLocalMetadataAction.text=Generate Providers Metadata
action.TFGenerateLocalMetadataAction.description=Generates providers metadata with `terraform/tofu providers schema -json` command
dialog.message.failed.to.get.output.terraform.providers.command.for=Failed to get output of `{2} providers` command for {0}, exit code = {1}
notification.title.cant.generate.model=Can't generate model
notification.content.there.no.terraform.lock.hcl.found.please.run.terraform.init=There is no ''.terraform.lock.hcl'' found, please run ''{0} init''
action.AddProviderAction.text=Add bundled resource provider

action.NewTerraformFile.text=Terraform File
action.new.empty.terraform.file.description=Empty file
action.new.template.terraform.file.description=Main
action.new.outputs.terraform.file.description=Outputs
action.new.variables.terraform.file.description=Variables
action.create.terraform.file=Create Terraform File {0}
action.create.terraform.file.title=New Terraform File

binary.installation.progress.title=Installing binary\u2026
binary.installation.failed=Binary installation failed
binary.installation.downloading.binary.progress.title=Downloading binary from ''{0}''\u2026
binary.installation.download.failed=Failed to download ''{0}''
binary.installation.search.failed=Unable to find downloaded binary with expected name: ''{0}''
binary.installation.calculating.hash.progress.title=Calculating checksum for downloaded binary\u2026
binary.installation.verification.failed=Failed to verify download. The expected and actual checksum don't match
binary.installation.make.executable.failed=Failed to make ''{0}'' executable
binary.installation.move.to.installation.dir=Moving binary to ''{0}''
binary.installation.move.to.installation.dir.failed=Failed to move binary to installation directory: ''{0}''
binary.installation.succeeded=Binary ''{0}'' installed successfully to ''{1}''

action.Terraform.InstallTerraform.text=Install Terraform
action.Terraform.InstallTerraform.description=Download and install the latest stable version of Terraform

group.TFTools.text=Terraform Tools
group.TFTools.description=Terraform external tools

rebuilding.local.schema=Rebuilding local schema
progress.title.terraform.init=Initializing working directory
progress.title.removing.unused.metadata=Removing unused metadata
notification.content.cannot.find.directory=Cannot find directory {0}
notification.content.terraform.init.succeed={0} init succeeded
notification.content.terraform.init.failed={0} init failed
notification.content.local.model.has.been.generated.successfully=Local model has been generated successfully

terraform.doc.label.local.value.0=Local value {0}
terraform.doc.property.0=Property {0}>
terraform.doc.module.0=Module "{0}"
terraform.doc.input.variable.0=Input variable "{0}"
terraform.doc.output.value.0=Output value "{0}"
terraform.doc.provider.0=Provider "{0}"
terraform.doc.resource.0.of.type.1=Resource "{0}" of type {1}
terraform.doc.data.source.0.of.type.1=Data source "{0}" of type {1}
terraform.doc.argument.0.1=Argument {0}.{1}
terraform.doc.terraform.configuration=Terraform configuration
terraform.doc.local.values=Local values
terraform.doc.generic.block=Block
terraform.doc.block.type.0={0} {1}
terraform.doc.property.0.1.br.2=<p>Property <b>{0}</b> ({1})</p>{2}
terraform.doc.local.value.0=Local value {0}
terraform.doc.variable.0.1.2.3=<p>Variable <b>{0}</b></p> {1} {2} {3}
terraform.doc.hcl.resource.0.of.type.1=Resource "<b>{0}</b>" of type <b>{1}</b><br> {2}
terraform.doc.hcl.datasource.0.of.type.1=Datasource "<b>{0}</b>" of type <b>{1}</b><br> {2}
terraform.doc.hcl.provider.0.of.type.1=Provider "<b>{0}</b>"<br>{1}
terraform.doc.hcl.output.0.of.type.1=Output "<b>{0}</b>"<br>{1}
terraform.doc.block.0.br.1=Block <b>{0}</b><br>{1}
terraform.doc.argument.0.1.br.2=Argument "<b>{0}.{1}</b>"<br>{2}
terraform.doc.block.type.0.br.1=Block type <b>{0}</b><br>{1}
unknown.block.0=Unknown block {0}

tftpl.loop.variable.title=loop variable
tftpl.external.variable.title=external variable
live.template.context.name=Terraform template context (.tftpl)
progress.text.loading.documentation=Loading documentation
documentation.for.0.1.on.terraform.website=Documentation for {0}{1} on Terraform website
progress.title.opening.terraform.documentation=Opening Terraform documentation
parsing.error.recover.to.token=Expected {0} token, but got {1}
parsing.error.empty.tags.not.allowed=Empty tags are not allowed
inspection.unselected.data.language.name=No template data language selected
inspection.possible.template.group.name=Terraform template
inspection.possible.template.name=Possible template file
inspection.possible.template.add.association.fix.name=Treat this file as a Terraform Template
inspection.possible.template.ignore.association.fix.name=Dismiss
inspection.possible.template.remove.association.fix.name=Stop considering this file a Terraform Template

advanced.setting.terraform=Terraform
terraform.documentation.download.enabled=Enables the possibility to download Terraform documentation automatically. If disabled, the built-in metadata description will be used.
advanced.setting.org.intellij.terraform.config.documentation.download=Download Terraform documentation automatically
terraform.metadata.build.auto=Enables automatic building of the Terraform local metadata by running `terraform providers schema -json` for each initialized project.
advanced.setting.org.intellij.terraform.config.build.metadata.auto=Build local metadata automatically
terraform.metadata.build.eagerly=When enabled, the local metadata is rebuilt when any related file is changed or added to the project. When disabled, metadata is built only when requested.
advanced.setting.org.intellij.terraform.config.build.metadata.eagerly=Build local metadata in advance
terraform.use.global.meta=When enabled, metadata from `terraform.d` or `.terraform.d` will be loaded
advanced.setting.org.intellij.terraform.use.global.meta=Use Global metadata
terraform.variables.deep.search=When enabled, variables will be looked up in the nested directories. When disabled, variables will be looked up in current directory only
advanced.setting.org.intellij.terraform.config.variables.deep.search=Deep search for variables
terraform.variables.search.fallback=When enabled, the old variable search strategy will be used (which was before the 2024.3 release)
advanced.setting.org.intellij.terraform.variables.search.fallback=Fallback search for variables
advanced.setting.org.intellij.terraform.code.vision.usages.limit=Maximum number of usages to show in inlay hints

terraform.formatter.error.title=`{} fmt` error
terraform.formatter.error.message=Cannot run `{1} fmt` on {0}
terraform.add.provider.dialog.title=Add {0}
terraform.add.required.properties.command.name=Add Required Properties
popup.content.could.not.find.bundled.provider.for=Could not find bundled provider for the {0} "<b>{1}</b>"<p>Refer to the <a href="https://registry.terraform.io/search/providers?q={2}" target="_blank">terraform registry</a> for provider info</p>
progress.title.detecting.terraform.executable=Detecting {0} executable\u2026

terraform.inlay.hints.usages.text={0,choice, 0#no usages|1#1 usage|2#{0,number}'{1,choice, |1#+}' usages}
terraform.inlay.hints.indefinite.usages.text=Indefinite number of usages

progress.title.adding.required.properties=Adding required properties
popup.advertisement.press.to.show.partner.community.providers=Press {0} to show partner and community providers

opentofu.name=OpenTofu
opentofu.display.name=OpenTofu
opentofu.filetype.description=OpenTofu config files

opentofu.key_provider.pbkdf2.passphrase.description=Long and complex passphrase, with a minimum of 16 characters
opentofu.key_provider.pbkdf2.key_length.description=Number of bytes to generate as a key, {0} to {1} bytes
opentofu.key_provider.pbkdf2.iterations.description=Number of iterations, from 200.000 to 600.000
opentofu.key_provider.pbkdf2.salt_length.description=Length of the salt for the key derivation from 1 to 32 bytes
opentofu.key_provider.pbkdf2.hash_function.description=Hash function, either sha256 or sha512

opentofu.key_provider.aws_kms.kms_key_id.description=Key identifiers act like names for your KMS keys.
opentofu.key_provider.aws_kms.key_spec.description=Key spec is a property that represents the cryptographic configuration of a key. The meaning of the key spec differs with the key type.

opentofu.key_provider.gcp_kms.kms_encryption_key.description=A Cloud KMS key is a named object containing one or more key versions, along with metadata for the key. A key exists on exactly one key ring tied to a specific location.
opentofu.key_provider.gcp_kms.key_length.description=Number of bytes to generate as a key, {0} to {1} bytes.

opentofu.files.inspection.group.display.name=OpenTofu
opentofu.unknown.key.provider.inspection.display.name=Unknown encryption key provider
opentofu.unknown.key.provider.inspection.message=Unknown encryption key provider: {0}

opentofu.unknown.encryption.method.inspection.display.name=Unknown encryption method
opentofu.unknown.encryption.method.inspection.message=Unknown encryption method: {0}

terraform.opentofu.settings.label=Terraform and OpenTofu
tool.format.display={0} fmt

module.detection.error.no.dir.found=No .terraform found under `{1}` folder, please initialize it or run `{0} get` in this folder
module.detection.error.no.path.found=Path `.terraform/{0}` not found among modules, please initialize the module or run `{1} get`. Also, it could be a non-referenced module, e.g. subdir of some module
module.detection.error.no.relative.path.found=Path `{0}` not found among modules, please initialize the module or run `{1} get`. Also, it could be a non-referenced module, e.g. subdir of some module
module.detection.error.no.module.dir.found=Could not find module directory in `{0}/.terraform/modules`
module.detection.error.no.psi.dir=Can''t find PsiDirectory for {0}
module.detection.error.no.relative.dir.in.manifest=Can''t find relative dir `{0}` in `{1}`
module.detection.error.no.modules.json.found=No modules/modules.json found in .terraform directory, please initialize the module or run `{0} get`
module.detection.error.failed.parse.modules.json=Failed to parse .terraform/modules/modules.json, please initialize the module or run `{0} get`
module.detection.error.name.not.defined=Module name is not defined
module.detection.error.no.source.property="No 'source' property"
module.detection.error.no.containing.directory=File `{0}` does not have containing directory
module.detection.error.no.module.source=Cannot get module source value
tool.executor.unknown.error=Unknown installation error