aws.cloudformation.inspections.group.name=AWS CloudFormation Inspections
aws.cloudformation.inspections.formatViolation=CloudFormation format violation
aws.cloudformation.inspections.unresolvedReference=Unresolved reference
aws.cloudformation.template.context.type.json=AWS CloudFormation (JSON)
aws.cloudformation.template.context.type.yaml=AWS CloudFormation (YAML)

aws.cloudformation.new.json.file.action=AWS CloudFormation JSON Template
aws.cloudformation.new.json.file.action.description=Creates new AWS CloudFormation JSON Template

aws.cloudformation.new.yaml.file.action=AWS CloudFormation YAML Template
aws.cloudformation.new.yaml.file.action.description=Creates new AWS CloudFormation YAML Template

format.unknownVersion=Unknown AWS CloudFormation template version \#ref. Supported versions\: {0}
format.expected.quoted.string=A string literal is expected
format.unknown.section=Unknown section\: {0}
format.unknown.value=Unknown type of value\: {0}
format.expected.json.object=Expected JSON object
format.max.outputs.exceeded=Exceeded a maximum of {0} outputs in template
format.max.parameters.exceeded=Exceeded a maximum of {0} parameters in template
format.max.mappings.exceeded=Exceeded a maximum of {0} mappings in template
format.unknown.type=Unknown CloudFormation resource type\: {0}
format.unknown.resource.type.property=Unknown resource type property\: {0}
format.unknown.resource.property=Unknown resource property\: {0}
format.required.resource.properties.are.not.set=Required resource properties are not set\: {0}
livetemplate.description.ref=Inserts reference to an entity
reference.expects.one.string.argument=Reference expects one string argument
condition.reference.expects.one.string.argument=Condition reference expects one string argument
base64.reference.expects.1.argument=Base64 reference expects 1 argument
findinmap.requires.3.arguments=FindInMap requires 3 arguments
getattr.in.short.form.requires.argument.in.the.format.logicalnameofresource.attributename=GetAttr in short form requires argument in the format logicalNameOfResource.attributeName
getatt.requires.two.string.arguments.in.full.form.or.one.string.argument.in.short.form=GetAtt requires two string arguments in full form or one string argument in short form
implicit.iam.function.role.supports.only.arn.attribute=Implicit IAM Function Role supports only 'Arn' attribute
unknown.attribute.in.resource.type.0.1=Unknown attribute in resource type ''{0}'': {1}
getazs.expects.one.argument=GetAZs expects one argument
cidr.expects.two.or.three.arguments=Cidr expects two or three arguments
importvalue.expects.one.argument=ImportValue expects one argument
join.expects.a.string.argument.and.an.array.argument=Join expects a string argument and an array argument
split.expects.two.string.arguments=Split expects two string arguments
select.expects.an.index.argument.and.an.array.argument=Select expects an index argument and an array argument
select.index.should.be.a.valid.non.negative.number=Select index should be a valid non-negative number
sub.expects.one.argument.plus.an.optional.value.map=Sub expects one argument plus an optional value map
0.expects.at.least.2.arguments={0} expects at least 2 arguments
equals.expects.exactly.2.arguments=Equals expects exactly 2 arguments
if.s.first.argument.should.be.a.condition.name=If's first argument should be a condition name
if.expects.exactly.3.arguments=If expects exactly 3 arguments
not.expects.exactly.1.argument=Not expects exactly 1 argument
type.value.is.required=Type value is required
outputs.section.must.declare.at.least.one.stack.output=Outputs section must declare at least one stack output
globals.section.supported.with.0.transform.only=Globals section supported with {0} transform only
globals.section.must.provide.defaults.for.at.least.one.resource=Globals section must provide defaults for at least one resource
unsupported.globals.section.0.the.following.sections.are.supported.1=Unsupported globals section ''{0}''. The following sections are supported: {1}
property.0.is.unsupported.in.1.sections.of.globals=Property {0} is unsupported in ''{1}'' sections of Globals
parameters.section.must.declare.at.least.one.parameter=Parameters section must declare at least one parameter
expected.a.string=Expected a string
required.property.type.is.missing.or.empty=Required property Type is missing or empty
unknown.parameter.type.0=Unknown parameter type: {0}
unknown.parameter.property.0=Unknown parameter property: {0}
expected.an.array=Expected an array
0.is.too.long.1.chars.maximum.allowed.length.is.2={0} is too long ({1} chars), maximum allowed length is {2}
expected.a.number=Expected a number
0.property.is.valid.for.1.type.only={0} property is valid for {1} type only
expected.an.integer.or.float=Expected an integer or float
0.property.is.valid.for.1.type.only1={0} property is valid for {1} type only
only.true.value.is.allowed=Only 'True' value is allowed
mappings.section.must.declare.at.least.one.parameter=Mappings section must declare at least one parameter
type.property.is.required.for.resource=Type property is required for resource
resources.section.should.declare.at.least.one.resource=Resources section should declare at least one resource
resources.section.is.missing=Resources section is missing
filetype.aws.cloudformation.templates.json.description=AWS CloudFormation templates (JSON)
filetype.aws.cloudformation.templates.json.display.name="AWS CloudFormation (JSON)"
a.non.empty.key.is.expected=A non-empty key is expected
a.value.is.expected=A value is expected
expected.an.expression=Expected an expression
expected.a.string.or.an.array.of.strings=Expected a string or an array of strings
filetype.aws.cloudformation.templates.yaml.description=AWS CloudFormation templates (YAML)
filetype.aws.cloudformation.templates.yaml.display.name=AWS CloudFormation (YAML)
expected.a.name=Expected a name
unknown.cloudformation.function.0=Unknown CloudFormation function: {0}
too.many.values=Too many values
cloudformation.function.expects.a.scalar.value.or.a.sequence=CloudFormation function expects a scalar value or a sequence
expected.yaml.mapping=Expected YAML mapping
a.string.literal.is.expected=A string literal is expected
unexpected.tag.0=Unexpected tag: {0}
unexpected.yaml.document=Unexpected YAML document
expected.top.level.value=Expected top-level value
required.property=Required

