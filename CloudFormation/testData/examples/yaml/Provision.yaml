AWSTemplateFormatVersion: '2010-09-09'
Description: 'Master stack that collects: EC2Role + S3Bucket + EC2 + RDS'
Outputs:
  DBName:
    Value:
      Ref: DBName
  DBPort:
    Value:
      Fn::GetAtt:
      - RDSStack
      - Outputs.DBPort
  DBUrl:
    Value:
      Fn::GetAtt:
      - RDSStack
      - Outputs.DBUrl
  DBUser:
    Value:
      Ref: DBUser
  ElasticIp:
    Value:
      Fn::GetAtt:
      - EC2Stack
      - Outputs.ElasticIp
  S3BucketName:
    Value:
      Fn::GetAtt:
      - S3Stack
      - Outputs.S3BucketName
Parameters:
  ParentNetworkStackName:
    Description: 'Stack name of parent Network stack.'
    Type: String
  DBAllocatedStorage:
    ConstraintDescription: must be between 5+
    Default: '5'
    Description: The size of the database (Gb)
    MaxValue: '6144'
    MinValue: '5'
    Type: Number
  DBInstanceType:
    AllowedValues:
    - db.t1.micro
    - db.m1.small
    - db.t2.micro
    - db.t2.small
    - db.t2.medium
    - db.t2.large
    - db.m4.large
    - db.m4.xlarge
    - db.m4.2xlarge
    - db.m4.4xlarge
    - db.m4.10xlarge
    - db.r3.large
    - db.r3.xlarge
    - db.r3.2xlarge
    - db.r3.4xlarge
    - db.r3.8xlarge
    Default: db.t1.micro
    Description: The Key Pair to launch instances with
    Type: String
  DBName:
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: must begin with a letter and contain only alphanumeric
      characters.
    Default: pgdb
    Description: The database name
    MaxLength: '8'
    MinLength: '1'
    Type: String
  DBPassword:
    AllowedPattern: '[a-zA-Z0-9]*'
    ConstraintDescription: must contain only alphanumeric characters.
    Default: 1234qwerasdfzxcv
    Description: Database admin account password
    MaxLength: '41'
    MinLength: '1'
    NoEcho: 'true'
    Type: String
  DBUser:
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: must begin with a letter and contain only alphanumeric
      characters.
    Default: dbuser
    Description: Database admin account name
    MaxLength: '16'
    MinLength: '1'
    Type: String
  EC2InstanceType:
    AllowedValues:
    - t2.micro
    - t2.small
    - t2.medium
    - t2.large
    - m4.large
    - m4.xlarge
    - m4.2xlarge
    - m4.4xlarge
    - m4.10xlarge
    - m3.medium
    - m3.large
    - m3.xlarge
    - m3.2xlarge
    - c4.large
    - c4.xlarge
    - c4.2xlarge
    - c4.4xlarge
    - c4.8xlarge
    - c3.large
    - c3.xlarge
    - c3.2xlarge
    - c3.4xlarge
    - c3.8xlarge
    - r3.large
    - r3.xlarge
    - r3.2xlarge
    - r3.4xlarge
    - r3.8xlarge
    - i2.xlarge
    - i2.2xlarge
    - i2.4xlarge
    - i2.8xlarge
    ConstraintDescription: Must be a valid EC2 HVM instance type.
    Default: t2.micro
    Description: EC2 HVM instance type (t2.micro, m3.medium, etc).
    Type: String
  EC2VolumeSize:
    Default: '10'
    Description: EBS Volume Size (data) to be attached to application node in GBs
    MaxValue: '200'
    MinValue: '5'
    Type: Number
  KeyName:
    Description: Name of an existing EC2 KeyPair. EC2 instances will launch with this
      KeyPair.
    Type: AWS::EC2::KeyPair::KeyName
  S3Bucket:
    Default: https://s3.amazonaws.com/10clouds-cf-templates/
    Description: S3 storage for sub stacks
    Type: String
Resources:
  RDSStack:
    Properties:
      Parameters:
        ParentNetworkStackName:
          Ref: ParentNetworkStackName
        DBAllocatedStorage:
          Ref: DBAllocatedStorage
        DBInstanceType:
          Ref: DBInstanceType
        ParentStackName:
          Ref: AWS::StackName
      TemplateURL:
        Fn::Join:
        - ''
        - - Ref: S3Bucket
          - RDSStack.yaml
      TimeoutInMinutes: '40'
    Type: AWS::CloudFormation::Stack
  S3Stack:
    DependsOn: RDSStack
    Properties:
      TemplateURL:
        Fn::Join:
        - ''
        - - Ref: S3Bucket
          - S3Stack.yaml
      TimeoutInMinutes: '3'
    Type: AWS::CloudFormation::Stack
  EC2Stack:
    DependsOn: S3Stack
    Properties:
      Parameters:
        ParentNetworkStackName:
          Ref: ParentNetworkStackName
        EC2VolumeSize:
          Ref: EC2VolumeSize
        InstanceType:
          Ref: EC2InstanceType
        KeyName:
          Ref: KeyName
        ParentStackName:
          Ref: AWS::StackName
        S3BucketName:
          Fn::GetAtt:
          - S3Stack
          - Outputs.S3BucketName
      TemplateURL:
        Fn::Join:
        - ''
        - - Ref: S3Bucket
          - EC2Stack.yaml
      TimeoutInMinutes: '10'
    Type: AWS::CloudFormation::Stack