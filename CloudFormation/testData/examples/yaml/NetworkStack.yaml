# https://raw.githubusercontent.com/tramwaj29/infrastructure-as-code/master/cf/NetworkStack.yaml
AWSTemplateFormatVersion: '2010-09-09'
Description: VPC, Public (for EC2) and Private (for RDS) subnets within 2 Availability Zones
Mappings:
  VpcCidrs:
    private-subnet-a:
      cidr: 10.0.116.0/20
    private-subnet-b:
      cidr: 10.0.132.0/20
    public-subnet-a:
      cidr: 10.0.16.0/20
    vpc:
      cidr: 10.0.0.0/16
Resources:
  InternetGateway:
    Properties:
      Tags:
      - Key: Name
        Value:
          Fn::Join:
          - '-'
          - - Ref: AWS::StackName
            - IG
    Type: AWS::EC2::InternetGateway
  NATElasticIP:
    Properties:
      Domain: vpc
    Type: AWS::EC2::EIP
  NATGateway:
    DependsOn: VPCGatewayAttachment
    Properties:
      AllocationId:
        Fn::GetAtt:
        - NATElasticIP
        - AllocationId
      SubnetId:
        Ref: PublicSubnet
    Type: AWS::EC2::NatGateway
  NATGatewayPrivateRoute:
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: NATGateway
      RouteTableId:
        Ref: PrivateRouteTable
    Type: AWS::EC2::Route
  PrivateRouteTable:
    Properties:
      Tags:
      - Key: Name
        Value: PrivateRouteTable
      VpcId:
        Ref: VPC
    Type: AWS::EC2::RouteTable
  PrivateSubnet:
    Properties:
      AvailabilityZone:
        Fn::Select:
        - '0'
        - Fn::GetAZs:
            Ref: AWS::Region
      CidrBlock:
        Fn::FindInMap:
        - VpcCidrs
        - private-subnet-a
        - cidr
      Tags:
      - Key: Name
        Value:
          Fn::Join:
          - '-'
          - - Ref: AWS::StackName
            - PrivateSubnet
      VpcId:
        Ref: VPC
    Type: AWS::EC2::Subnet
  PrivateSubnetB:
    Properties:
      AvailabilityZone:
        Fn::Select:
        - '1'
        - Fn::GetAZs:
            Ref: AWS::Region
      CidrBlock:
        Fn::FindInMap:
        - VpcCidrs
        - private-subnet-b
        - cidr
      Tags:
      - Key: Name
        Value:
          Fn::Join:
          - '-'
          - - Ref: AWS::StackName
            - PrivateSubnetB
      VpcId:
        Ref: VPC
    Type: AWS::EC2::Subnet
  PublicRouteTable:
    Properties:
      Tags:
      - Key: Name
        Value: PublicRouteTable
      VpcId:
        Ref: VPC
    Type: AWS::EC2::RouteTable
  PublicSubnet:
    Properties:
      AvailabilityZone:
        Fn::Select:
        - '0'
        - Fn::GetAZs:
            Ref: AWS::Region
      CidrBlock:
        Fn::FindInMap:
        - VpcCidrs
        - public-subnet-a
        - cidr
      MapPublicIpOnLaunch: true
      Tags:
      - Key: Name
        Value:
          Fn::Join:
          - '-'
          - - Ref: AWS::StackName
            - PublicSubnet
      VpcId:
        Ref: VPC
    Type: AWS::EC2::Subnet
  RouteTableAssociationPrivateSubnet:
    Properties:
      RouteTableId:
        Ref: PrivateRouteTable
      SubnetId:
        Ref: PrivateSubnet
    Type: AWS::EC2::SubnetRouteTableAssociation
  RouteTableAssociationPrivateSubnetB:
    Properties:
      RouteTableId:
        Ref: PrivateRouteTable
      SubnetId:
        Ref: PrivateSubnetB
    Type: AWS::EC2::SubnetRouteTableAssociation
  RouteTableAssociationPublicSubnet:
    Properties:
      RouteTableId:
        Ref: PublicRouteTable
      SubnetId:
        Ref: PublicSubnet
    Type: AWS::EC2::SubnetRouteTableAssociation
  RouteTablePublicInternetRoute:
    DependsOn: VPCGatewayAttachment
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: InternetGateway
      RouteTableId:
        Ref: PublicRouteTable
    Type: AWS::EC2::Route
  VPC:
    Properties:
      CidrBlock:
        Fn::FindInMap:
        - VpcCidrs
        - vpc
        - cidr
      EnableDnsHostnames: 'true'
      EnableDnsSupport: 'true'
      Tags:
      - Key: Name
        Value:
          Fn::Join:
          - '-'
          - - Ref: AWS::StackName
            - VPC
    Type: AWS::EC2::VPC
  VPCGatewayAttachment:
    DependsOn: VPC
    Properties:
      InternetGatewayId:
        Ref: InternetGateway
      VpcId:
        Ref: VPC
    Type: AWS::EC2::VPCGatewayAttachment
Outputs:
  PrivateSubnetId:
    Description: Private Subnet
    Value:
      Ref: PrivateSubnet
    Export:
      Name: !Sub '${AWS::StackName}-PrivateSubnetId'
  PrivateSubnetBId:
    Description: Private Subnet B
    Value:
      Ref: PrivateSubnetB
    Export:
      Name: !Sub '${AWS::StackName}-PrivateSubnetBId'
  PublicSubnetId:
    Description: Public Subnet
    Value:
      Ref: PublicSubnet
    Export:
      Name: !Sub '${AWS::StackName}-PublicSubnetId'
  VpcCird:
    Description: VPC CIRD
    Value:
      Fn::GetAtt:
      - VPC
      - CidrBlock
    Export:
      Name: !Sub '${AWS::StackName}-VpcCird'
  VpcId:
    Description: VPC
    Value:
      Ref: VPC
    Export:
      Name: !Sub '${AWS::StackName}-VpcId'