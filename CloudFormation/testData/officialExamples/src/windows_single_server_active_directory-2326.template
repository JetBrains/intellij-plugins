{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "This template creates a single server installation of Active Directory. Domain Administrator password will be the one retrieved from the instance. For adding members to the domain, ensure that they are launched in domain member security group created by this template and then configure them to use this instance's private IP as the DNS server. **WARNING** This template creates Amazon EC2 Windows instance and related resources. You will be billed for the AWS resources used if you create a stack from this template.",

  "Parameters" : {
    "KeyName" : {
      "Description" : "Name of an existing EC2 KeyPair",
      "Type" : "AWS::EC2::KeyPair::KeyName",
      "ConstraintDescription" : "must be the name of an existing EC2 KeyPair."
    },

    "InstanceType" : {
      "Description" : "Amazon EC2 instance type",
      "Type" : "String",
      "Default" : "m4.large",
      "AllowedValues" : [ "t1.micro", "t2.micro", "t2.small", "t2.medium", "m1.small", "m1.medium", "m1.large", "m1.xlarge", "m2.xlarge", "m2.2xlarge", "m2.4xlarge", "m3.medium", "m3.large", "m3.xlarge", "m3.2xlarge", "m4.large", "m4.xlarge", "m4.2xlarge", "m4.4xlarge", "m4.10xlarge", "c1.medium", "c1.xlarge", "c3.large", "c3.xlarge", "c3.2xlarge", "c3.4xlarge", "c3.8xlarge", "c4.large", "c4.xlarge", "c4.2xlarge", "c4.4xlarge", "c4.8xlarge", "g2.2xlarge", "r3.large", "r3.xlarge", "r3.2xlarge", "r3.4xlarge", "r3.8xlarge", "i2.xlarge", "i2.2xlarge", "i2.4xlarge", "i2.8xlarge", "d2.xlarge", "d2.2xlarge", "d2.4xlarge", "d2.8xlarge", "hi1.4xlarge", "hs1.8xlarge", "cr1.8xlarge", "cc2.8xlarge", "cg1.4xlarge"]
,
      "ConstraintDescription" : "must be a valid EC2 instance type."
    },
    "DomainDNSName" : {
      "Description" : "Fully qualified domain name (FQDN) of the forest root domain e.g. corp.example.com",
      "Type" : "String",
      "MinLength" : "3",
      "MaxLength" : "25",
      "AllowedPattern" : "[a-zA-Z0-9]+\\..+"
    },
    "DomainNetBIOSName" : {
      "Description" : "NetBIOS name of the domain (upto 15 characters) for users of earlier versions of Windows e.g. CORP",
      "Type" : "String",
      "MinLength" : "1",
      "MaxLength" : "15",
      "AllowedPattern" : "[a-zA-Z0-9]+"
    },   
    "RestoreModePassword" : {
      "Description" : "Password for a separate Administrator account when the domain controller is in Restore Mode. Must be at least 8 characters containing letters, numbers and symbols",
      "Type" : "String",
      "MinLength" : "8",
      "MaxLength" : "32",
      "AllowedPattern" : "(?=^.{6,255}$)((?=.*\\d)(?=.*[A-Z])(?=.*[a-z])|(?=.*\\d)(?=.*[^A-Za-z0-9])(?=.*[a-z])|(?=.*[^A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z])|(?=.*\\d)(?=.*[A-Z])(?=.*[^A-Za-z0-9]))^.*",
      "NoEcho" : "True"
    },
    "SourceCidrForRDP" : {
      "Description" : "IP Cidr from which you are likely to RDP into the instances. You can add rules later by modifying the created security groups e.g. 54.32.98.160/32",
      "Type" : "String",
      "MinLength" : "9",
      "MaxLength" : "18",
      "AllowedPattern" : "^([0-9]+\\.){3}[0-9]+\\/[0-9]+$"
    }
  },

  "Mappings" : {
    "AWSRegion2AMI" : {
      "us-east-1"        : {"Windows2008r2" : "ami-05053a58f18d79165", "Windows2012r2" : "ami-066663db63b3aa675"},
      "us-west-2"        : {"Windows2008r2" : "ami-09baf7dca5abb5477", "Windows2012r2" : "ami-07c77fe35092981e9"},
      "us-west-1"        : {"Windows2008r2" : "ami-0103343efe39caae9", "Windows2012r2" : "ami-08462bc4d6a8eb5c1"},
      "eu-west-1"        : {"Windows2008r2" : "ami-0146d7f51c6677e99", "Windows2012r2" : "ami-009af7c43be38087d"},
      "eu-west-2"        : {"Windows2008r2" : "ami-0c83c0bcaf872d604", "Windows2012r2" : "ami-025fc1fa28fdf1a87"},
      "eu-west-3"        : {"Windows2008r2" : "ami-03af3787c0ef4ca0d", "Windows2012r2" : "ami-0cbc109ce3fe6584e"},
      "eu-central-1"     : {"Windows2008r2" : "ami-098bba2f7c9962b56", "Windows2012r2" : "ami-0ece2db131cd3c16a"},
      "eu-north-1"       : {"Windows2008r2" : "ami-0da3dcb725fd36774", "Windows2012r2" : "ami-01e97bc0f89e9ca04"},
      "ap-northeast-1"   : {"Windows2008r2" : "ami-085b9d0f82b3d500b", "Windows2012r2" : "ami-0d99aa7f0403a9ba4"},
      "ap-northeast-2"   : {"Windows2008r2" : "ami-05d7911c701557f98", "Windows2012r2" : "ami-0163c75ba997507aa"},
      "ap-northeast-3"   : {"Windows2008r2" : "ami-0b9d45b41271b9dff", "Windows2012r2" : "ami-0646ac68d679b1b73"},
      "ap-southeast-1"   : {"Windows2008r2" : "ami-08cde6692201557a8", "Windows2012r2" : "ami-00230cfcbc0180362"},
      "ap-southeast-2"   : {"Windows2008r2" : "ami-0e17bfe822c550bff", "Windows2012r2" : "ami-0f66d840816e8a35f"},
      "ap-south-1"       : {"Windows2008r2" : "ami-033ede8dc37ea7fb6", "Windows2012r2" : "ami-0437fea2a5ba5aacd"},
      "us-east-2"        : {"Windows2008r2" : "ami-0ccd4940b0cd75ce3", "Windows2012r2" : "ami-00890851afd74dda3"},
      "ca-central-1"     : {"Windows2008r2" : "ami-0ce5dfea946fa499d", "Windows2012r2" : "ami-051f75c651d856381"},
      "sa-east-1"        : {"Windows2008r2" : "ami-0876972eb2541a9d5", "Windows2012r2" : "ami-0f7eee4d47377680e"},
      "cn-north-1"       : {"Windows2008r2" : "ami-04d3dc91707f96a37", "Windows2012r2" : "ami-0524bf2ce3a8bab46"},
      "cn-northwest-1"   : {"Windows2008r2" : "ami-006c99da93a40e535", "Windows2012r2" : "ami-0ce900e3a255d57a2"}
    }

  },

  "Resources" : {    
    "DomainController": {  
      "Type" : "AWS::EC2::Instance",
      "Metadata" : {
        "AWS::CloudFormation::Init" : {          
          "config" : {
            "files" : {
              "c:\\cfn\\cfn-hup.conf" : {
                "content" : { "Fn::Join" : ["", [
                  "[main]\n",
                  "stack=", { "Ref" : "AWS::StackId" }, "\n",
                  "region=", { "Ref" : "AWS::Region" }, "\n"
                ]]}
              },

              "c:\\cfn\\hooks.d\\cfn-auto-reloader.conf" : {
                "content": { "Fn::Join" : ["", [
                  "[cfn-auto-reloader-hook]\n",
                  "triggers=post.update\n",
                  "path=Resources.DomainController.Metadata.AWS::CloudFormation::Init\n",
                  "action=cfn-init.exe -v -s ", { "Ref" : "AWS::StackId" },
                        " -r DomainController",
                        " --region ", { "Ref" : "AWS::Region" }, "\n"
                ]]}
              },
              
              "C:\\cfn\\RunCommand.bat" : {
                "content" : "%~1\nIF %ERRORLEVEL% GTR 10 ( exit /b 1 ) else ( exit /b 0 )"
              }
            },
        
            "commands" : {
              "1-run-dcpromo" : {
                "command" : { "Fn::Join" : [ "", [
                  "C:\\cfn\\RunCommand.bat \"dcpromo /unattend  /ReplicaOrNewDomain:Domain  /NewDomain:Forest  /NewDomainDNSName:",
                  { "Ref" : "DomainDNSName" },
                  "  /ForestLevel:4 /DomainNetbiosName:",
                  { "Ref" : "DomainNetBIOSName" },
                  " /DomainLevel:4  /InstallDNS:Yes  /ConfirmGc:Yes  /CreateDNSDelegation:No  /DatabasePath:\"C:\\Windows\\NTDS\"  /LogPath:\"C:\\Windows\\NTDS\"  /SYSVOLPath:\"C:\\Windows\\SYSVOL\" /SafeModeAdminPassword=", 
                  { "Ref" : "RestoreModePassword" }, 
                  " /RebootOnCompletion:Yes\"" 
                  ]]},
                "waitAfterCompletion" : "forever"
              },
              "2-signal-success" : { 
                "command" : { "Fn::Join" : ["", [ 
                  "cfn-signal.exe -e 0 \"", { "Fn::Base64" : { "Ref" : "DomainControllerWaitHandle" } },"\"" ]]
                }
              }
            },
            
            "services" : {
              "windows" : {
                "cfn-hup" : {
                  "enabled" : "true",
                  "ensureRunning" : "true",
                  "files" : ["c:\\cfn\\cfn-hup.conf", "c:\\cfn\\hooks.d\\cfn-auto-reloader.conf"]
                }
              }
            }
          }
        }
      },
      
      "Properties": {
        "ImageId" : { "Fn::FindInMap" : [ "AWSRegion2AMI", { "Ref" : "AWS::Region" }, "Windows2008r2" ]},
        "InstanceType" : { "Ref" : "InstanceType" },
        "SecurityGroups" : [ {"Ref" : "DomainControllerSecurityGroup"} ],
        "KeyName" : { "Ref" : "KeyName" },
        "UserData" : { "Fn::Base64" : { "Fn::Join" : ["", [
            "<script>\n",
          
            "cfn-init.exe -v -s ", { "Ref" : "AWS::StackId" }, 
            " -r DomainController ",
            " --region ", { "Ref" : "AWS::Region" }, "\n",

            "</script>"          
        ]]}}        
      }
    },
    
    "DomainControllerWaitCondition" : {
      "Type" : "AWS::CloudFormation::WaitCondition",
      "DependsOn" : "DomainController",
      "Properties" : {
        "Handle" : {"Ref" : "DomainControllerWaitHandle"},
        "Timeout" : "1500"
      }
    },
    
    "DomainControllerWaitHandle" : {
      "Type" : "AWS::CloudFormation::WaitConditionHandle"
    },
    
    "DomainControllerSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Domain Controller",
        "SecurityGroupIngress" : [
          {"IpProtocol" : "udp", "FromPort" : "123", "ToPort" : "123", "SourceSecurityGroupName" : { "Ref" : "DomainMemberSecurityGroup" } },
          {"IpProtocol" : "tcp", "FromPort" : "135", "ToPort" : "135", "SourceSecurityGroupName" : { "Ref" : "DomainMemberSecurityGroup" } },
          {"IpProtocol" : "udp", "FromPort" : "138", "ToPort" : "138", "SourceSecurityGroupName" : { "Ref" : "DomainMemberSecurityGroup" } },
          {"IpProtocol" : "tcp", "FromPort" : "1024", "ToPort" : "65535", "SourceSecurityGroupName" : { "Ref" : "DomainMemberSecurityGroup" } },
          {"IpProtocol" : "tcp", "FromPort" : "389", "ToPort" : "389", "SourceSecurityGroupName" : { "Ref" : "DomainMemberSecurityGroup" } },
          {"IpProtocol" : "udp", "FromPort" : "389", "ToPort" : "389", "SourceSecurityGroupName" : { "Ref" : "DomainMemberSecurityGroup" } },
          {"IpProtocol" : "tcp", "FromPort" : "636", "ToPort" : "636", "SourceSecurityGroupName" : { "Ref" : "DomainMemberSecurityGroup" } },
          {"IpProtocol" : "tcp", "FromPort" : "3268", "ToPort" : "3268", "SourceSecurityGroupName" : { "Ref" : "DomainMemberSecurityGroup" } },
          {"IpProtocol" : "tcp", "FromPort" : "3269", "ToPort" : "3269", "SourceSecurityGroupName" : { "Ref" : "DomainMemberSecurityGroup" } },
          {"IpProtocol" : "tcp", "FromPort" : "53", "ToPort" : "53", "SourceSecurityGroupName" : { "Ref" : "DomainMemberSecurityGroup" } },
          {"IpProtocol" : "udp", "FromPort" : "53", "ToPort" : "53", "SourceSecurityGroupName" : { "Ref" : "DomainMemberSecurityGroup" } },
          {"IpProtocol" : "tcp", "FromPort" : "88", "ToPort" : "88", "SourceSecurityGroupName" : { "Ref" : "DomainMemberSecurityGroup" } },
          {"IpProtocol" : "udp", "FromPort" : "88", "ToPort" : "88", "SourceSecurityGroupName" : { "Ref" : "DomainMemberSecurityGroup" } },
          {"IpProtocol" : "tcp", "FromPort" : "445", "ToPort" : "445", "SourceSecurityGroupName" : { "Ref" : "DomainMemberSecurityGroup" } },
          {"IpProtocol" : "udp", "FromPort" : "445", "ToPort" : "445", "SourceSecurityGroupName" : { "Ref" : "DomainMemberSecurityGroup" } },
          {"IpProtocol" : "udp", "FromPort" : "135", "ToPort" : "135", "SourceSecurityGroupName" : { "Ref" : "DomainMemberSecurityGroup" } },
          {"IpProtocol" : "tcp", "FromPort" : "3389", "ToPort" : "3389", "CidrIp" : { "Ref" : "SourceCidrForRDP" }},
          {"IpProtocol" : "icmp", "FromPort" : "-1", "ToPort" : "-1", "SourceSecurityGroupName" : { "Ref" : "DomainMemberSecurityGroup" }}
        ]
      }      
    }, 
    
    "DomainMemberSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Domain Members",
        "SecurityGroupIngress" : [
        ]
      }      
    },   
    
    "DomainMemberSecurityGroupIngress1" : {
      "Type" : "AWS::EC2::SecurityGroupIngress",
      "Properties" : { "GroupName" : { "Ref" : "DomainMemberSecurityGroup" }, "IpProtocol" : "tcp", "FromPort" : "3389", "ToPort" : "3389", "CidrIp" : { "Ref" : "SourceCidrForRDP" } }
    }    
  },

  "Outputs" : {
    "DomainControllerDNSName" : {
      "Value" : { "Fn::GetAtt" : [ "DomainController", "PublicDnsName" ] },
      "Description" : "Public DNS name of Active Directory server for RDP connection"
    },
    "DomainControllerIP" : {
      "Value" : { "Fn::GetAtt" : [ "DomainController", "PrivateIp" ] },
      "Description" : "Private IP address of Active Directory server which is also a DNS server"
    },
    "DomainAdmin" : {
      "Value" : { "Fn::Join" : ["", [{ "Ref" : "DomainNetBIOSName" }, "\\Administrator" ]] },
      "Description" : "Default domain administrator account"
    },
    "DomainAdminPassword" : {
      "Value" : "Please retrieve Administrator password of the instance"
    }
  }  
}
