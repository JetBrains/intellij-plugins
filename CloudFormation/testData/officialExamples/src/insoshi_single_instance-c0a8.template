{
  "AWSTemplateFormatVersion" : "2010-09-09",
  
  "Description" : "AWS CloudFormation Sample Template Insoshi_Single_Instance: Insoshi is an open source social networking platform in Ruby on Rails. This template creates a Insoshi stack using a single EC2 instance and a local MySQL database for storage. It demonstrates using the AWS CloudFormation bootstrap scripts to install the packages and files necessary to deploy the Insoshi, Rails, MySQL and all dependent packages at instance launch time. **WARNING** This template creates an Amazon EC2 instance and other AWS resources. You will be billed for the AWS resources used if you create a stack from this template.",
  
  "Parameters" : {
      
    "KeyName": {
      "Description" : "Name of an existing EC2 KeyPair to enable SSH access to the instances",
      "Type": "String",
      "MinLength": "1",
      "MaxLength": "255",
      "AllowedPattern" : "[\\x20-\\x7E]*",
      "ConstraintDescription" : "can contain only ASCII characters."
    },    

    "DBName": {
      "Default": "insoshi",
      "Description" : "MySQL database name",
      "Type": "String",
      "MinLength": "1",
      "MaxLength": "64",
      "AllowedPattern" : "[a-zA-Z][a-zA-Z0-9]*",
      "ConstraintDescription" : "must begin with a letter and contain only alphanumeric characters."
    },

    "DBUsername": {
      "NoEcho": "true",
      "Description" : "Username for MySQL database access",
      "Type": "String",
      "MinLength": "1",
      "MaxLength": "16",
      "AllowedPattern" : "[a-zA-Z][a-zA-Z0-9]*",
      "ConstraintDescription" : "must begin with a letter and contain only alphanumeric characters."
    },

    "DBPassword": {
      "NoEcho": "true",
      "Description" : "Password MySQL database access",
      "Type": "String",
      "MinLength": "1",
      "MaxLength": "41",
      "AllowedPattern" : "[a-zA-Z0-9]*",
      "ConstraintDescription" : "must contain only alphanumeric characters."
    },

    "DBRootPassword": {
      "NoEcho": "true",
      "Description" : "Root password for MySQL",
      "Type": "String",
      "MinLength": "1",
      "MaxLength": "41",
      "AllowedPattern" : "[a-zA-Z0-9]*",
      "ConstraintDescription" : "must contain only alphanumeric characters."
    },

    "InstanceType" : {
      "Description" : "WebServer EC2 instance type",
      "Type" : "String",
      "Default" : "m1.small",
      "AllowedValues" : [ "t1.micro","m1.small","m1.medium","m1.large","m1.xlarge","m2.xlarge","m2.2xlarge","m2.4xlarge","m3.xlarge","m3.2xlarge","c1.medium","c1.xlarge","cc1.4xlarge","cc2.8xlarge","cg1.4xlarge"],
      "ConstraintDescription" : "must be a valid EC2 instance type."
    },
    "SSHLocation" : {
      "Description" : " The IP address range that can be used to SSH to the EC2 instances",
      "Type": "String",
      "MinLength": "9",
      "MaxLength": "18",
      "Default": "0.0.0.0/0",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
    }   
  },
  
  "Mappings" : {
    "AWSInstanceType2Arch" : {
      "t1.micro"    : { "Arch" : "64" },
      "m1.small"    : { "Arch" : "64" },
      "m1.medium"   : { "Arch" : "64" },
      "m1.large"    : { "Arch" : "64" },
      "m1.xlarge"   : { "Arch" : "64" },
      "m2.xlarge"   : { "Arch" : "64" },
      "m2.2xlarge"  : { "Arch" : "64" },
      "m2.4xlarge"  : { "Arch" : "64" },
      "m3.xlarge"   : { "Arch" : "64" },
      "m3.2xlarge"  : { "Arch" : "64" },
      "c1.medium"   : { "Arch" : "64" },
      "c1.xlarge"   : { "Arch" : "64" },
      "cc1.4xlarge" : { "Arch" : "64HVM" },
      "cc2.8xlarge" : { "Arch" : "64HVM" },
      "cg1.4xlarge" : { "Arch" : "64HVM" }
    },

    "AWSRegionArch2AMI" : {
      "us-east-1"      : { "32" : "ami-31814f58", "64" : "ami-1b814f72", "64HVM" : "ami-0da96764" },
      "us-west-2"      : { "32" : "ami-38fe7308", "64" : "ami-30fe7300", "64HVM" : "NOT_YET_SUPPORTED" },
      "us-west-1"      : { "32" : "ami-11d68a54", "64" : "ami-1bd68a5e", "64HVM" : "NOT_YET_SUPPORTED" },
      "eu-west-1"      : { "32" : "ami-973b06e3", "64" : "ami-953b06e1", "64HVM" : "NOT_YET_SUPPORTED" },
      "ap-southeast-1" : { "32" : "ami-b4b0cae6", "64" : "ami-beb0caec", "64HVM" : "NOT_YET_SUPPORTED" },
      "ap-southeast-2" : { "32" : "ami-b3990e89", "64" : "ami-bd990e87", "64HVM" : "NOT_YET_SUPPORTED" },
      "ap-northeast-1" : { "32" : "ami-0644f007", "64" : "ami-0a44f00b", "64HVM" : "NOT_YET_SUPPORTED" },
      "sa-east-1"      : { "32" : "ami-3e3be423", "64" : "ami-3c3be421", "64HVM" : "NOT_YET_SUPPORTED" }
    }
  },
    
  "Resources" : {     
      
  "WebServer": {  
      "Type": "AWS::EC2::Instance",
      "Metadata" : {
        "AWS::CloudFormation::Init" : {
          "configSets" : { "full_install" : [ "install_prereqs", "setup_mysql", "setup_rubygems", "install_insoshi" ] },

          "install_prereqs" : {
            "packages" : {
              "yum" : {
                "git"               : [],
                "gcc-c++"           : [],
                "make"              : [],
                "ruby-devel"        : [],
                "ruby18-rdoc"       : [],
                "rubygems"          : [],
                "mysql"             : [],
                "mysql-server"      : [],
                "mysql-devel"       : [],
                "mysql-libs"        : [],
                "libjpeg-devel"     : [],
                "libpng-devel"      : [],
                "libtiff-devel"     : [],
                "freetype-devel"    : [],
                "ghostscript-devel" : [],
                "ImageMagick-devel" : []
              }
            },
            "services" : {
              "sysvinit" : {  
                "mysqld" : {
                  "enabled"       : "true",
                  "ensureRunning" : "true"                
                }
              }
            }
          },

          "setup_mysql" : {
            "files" : {
              "/tmp/setup.mysql" : {
                "content" : { "Fn::Join" : ["", [
                  "GRANT ALL ON ", { "Ref" : "DBName" }, ".* TO '", { "Ref" : "DBUsername" }, "'@'localhost' IDENTIFIED BY '", { "Ref" : "DBPassword"} , "';\n"
                  ]]},
                "mode"  : "000600",
                "owner" : "root",
                "group" : "root"
              },
              "/tmp/setup_mysql" : {
                "content" : { "Fn::Join" : ["", [
                  "# Setup MySQL root password and create a user\n",
                  "mysqladmin -u root password '", { "Ref" : "DBRootPassword" }, "'\n",
                  "mysql -u root --password='", { "Ref" : "DBRootPassword" }, "' < /tmp/setup.mysql\n"
                  ]]},
                "mode"  : "000700",
                "owner" : "root",
                "group" : "root"
              }
            },
            "commands" : {
              "01_create_accounts" : {
                "command" : "/tmp/setup_mysql &> /var/log/setup_mysql.log"
              },
              "02_cleanup" : {
                "command" : "rm /tmp/setup_mysql /tmp/setup.mysql"
              }
            }
          },

          "setup_rubygems" : {
            "commands" : {
              "01_install_version_142" : {
                "command" : "gem update --system 1.4.2 &> /var/log/gem_update.log"
              }
            }
          },

          "install_insoshi" : {
            "packages" : {
              "rubygems" : {
                "mysql"           : ["2.9.1"],
                "rake"            : ["0.8.7"],
                "rails"           : ["2.3.15"],
                "chronic"         : ["0.9.1"],
                "rdiscount"       : ["2.0.7.3"],
                "rmagick"         : ["2.13.2"]
              }
            },

            "sources" : {
              "/home/ec2-user/sphinx"      : "http://sphinxsearch.com/files/sphinx-2.0.6-release.tar.gz",
              "/home/ec2-user/insoshi"     : "http://github.com/insoshi/insoshi/tarball/master"
            },

            "files" : {
              "/home/ec2-user/insoshi/config/database.yml" : {
                "content" : { "Fn::Join" : ["", [
                  "development:\n",
                  "  adapter: mysql\n",
                  "  database: ", { "Ref" : "DBName" }, "\n",
                  "  host: localhost\n",
                  "  username: ", { "Ref" : "DBUsername" }, "\n",
                  "  password: ", { "Ref" : "DBPassword" }, "\n",
                  "  timeout: 5000\n"
                  ]]},
                "mode"  : "000600",
                "owner" : "root",
                "group" : "root"
              },

              "/home/ec2-user/build_sphinx" : {
                "content" : { "Fn::Join" : ["", [
                  "# Build search indexer\n",
                  "./configure\n",
                  "make\n",
                  "make install\n"
                  ]]},
                "mode"  : "000700",
                "owner" : "root",
                "group" : "root"
              },

              "/home/ec2-user/configure_insoshi" : {
                "content" : { "Fn::Join" : ["", [
                  "# Install Insoshi with search indexer configured\n",
                  "export PATH=$PATH:/usr/local/bin\n",
                  "script/install\n",
                  "rake ultrasphinx:configure\n",
                  "rake ultrasphinx:index\n",
                  "rake ultrasphinx:daemon:start\n",
                  "script/server -d -p 80\n"
                  ]]},
                "mode"  : "000700",
                "owner" : "root",
                "group" : "root"
              }
            },

            "commands" : {
              "01_build_sphinx" : {
                "command" : "/home/ec2-user/build_sphinx &> /var/log/build_sphinx.log",
                "cwd" : "/home/ec2-user/sphinx/sphinx-2.0.6-release"
              },
              "02_configure_insoshi" : {
                "command" : "/home/ec2-user/configure_insoshi &> /var/log/configure_insoshi.log",
                "cwd" : "/home/ec2-user/insoshi"
              },
              "03_cleanup" : {
                "command" : "rm -Rf build_sphinx configure_insoshi sphinx",
                "cwd" : "/home/ec2-user"
              }
            }
          }
        }
      },
      "Properties": {
        "ImageId" : { "Fn::FindInMap" : [ "AWSRegionArch2AMI", { "Ref" : "AWS::Region" },
                          { "Fn::FindInMap" : [ "AWSInstanceType2Arch", { "Ref" : "InstanceType" }, "Arch" ] } ] },
        "InstanceType"   : { "Ref" : "InstanceType" },
        "SecurityGroups" : [ {"Ref" : "WebServerSecurityGroup"} ],
        "KeyName"        : { "Ref" : "KeyName" },
        "UserData"       : { "Fn::Base64" : { "Fn::Join" : ["", [
          "#!/bin/bash -v\n",
          "yum update -y aws-cfn-bootstrap\n",

          "# Install packages\n",
          "/opt/aws/bin/cfn-init --stack ", { "Ref" : "AWS::StackId" },
          "                      --resource WebServer ",
          "                      --configsets full_install ",
          "                      --region ", { "Ref" : "AWS::Region" }, "\n",


          "# Signal completion\n",
          "/opt/aws/bin/cfn-signal -e $? -r \"Failed to run cfn-init\" '", { "Ref" : "WaitHandle" }, "'\n"
        ]]}}        
      }
    },

    "WaitHandle" : {
      "Type" : "AWS::CloudFormation::WaitConditionHandle"
    },

    "WaitCondition" : {
      "Type" : "AWS::CloudFormation::WaitCondition",
      "DependsOn" : "WebServer",
      "Properties" : {
        "Handle" : {"Ref" : "WaitHandle"},
        "Timeout" : "1500"
      }
    },
    
    "WebServerSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Enable HTTP access via port 80, the indexer port plus SSH access",
        "SecurityGroupIngress" : [
          {"IpProtocol" : "tcp", "FromPort" : "80", "ToPort" : "80", "CidrIp" : "0.0.0.0/0"},
          {"IpProtocol" : "tcp", "FromPort" : "22", "ToPort" : "22", "CidrIp" : { "Ref" : "SSHLocation"}}
        ]
      }      
    }          
  },
  
  "Outputs" : {
    "WebsiteURL" : {
      "Value" : { "Fn::Join" : ["", ["http://", { "Fn::GetAtt" : [ "WebServer", "PublicDnsName" ]} ]] },
      "Description" : "URL for Insoshi"
    }
  }
}
