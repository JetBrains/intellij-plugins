AWSTemplateFormatVersion: '2010-09-09'
Outputs:
  A:
    Value: "folded \"to a space,\n\
                      to a line feed, \
                      or \t \tnon-content"
  B:
    Value: !Sub "folded \"to a space,\n\
                      to a line feed, \
                      or \t \tnon-content"
  C:
    Value: 0@<!Sub "aaa" "folded \"to a space,\n\
                      to a line feed, \
                      or \t \tnon-content">
  D:
    Value: !Sub 'http://${WebServer.PublicDnsName}/wordpress'
  E:
    Value: 'http://${WebServer.PublicDnsName}/wordpress'
  F:
    Value: !Sub ABC

0: Too many values

CfnRootNode{
  metadataNode=<null>
  transformNode=<null>
  parametersNode=<null>
  mappingsNode=<null>
  conditionsNode=<null>
  resourcesNode=<null>
  globalsNode=<null>
  outputsNode=CfnOutputsNode{
    properties=[
      CfnOutputNode{
        value=CfnObjectValueNode{
          properties=[
            CfnNameValueNode{
              value=CfnScalarValueNode{
                value=folded "to a space,
to a line feed, or 	 	non-content
              }
              name=CfnScalarValueNode{
                value=Value
              }
            }
          ]
        }
        name=CfnScalarValueNode{
          value=A
        }
      },
      CfnOutputNode{
        value=CfnObjectValueNode{
          properties=[
            CfnNameValueNode{
              value=CfnFunctionNode{
                name=CfnScalarValueNode{
                  value=Sub
                }
                args=[
                  CfnScalarValueNode{
                    value=folded "to a space,
to a line feed, or 	 	non-content
                  }
                ]
              }
              name=CfnScalarValueNode{
                value=Value
              }
            }
          ]
        }
        name=CfnScalarValueNode{
          value=B
        }
      },
      CfnOutputNode{
        value=CfnObjectValueNode{
          properties=[
            CfnNameValueNode{
              value=CfnFunctionNode{
                name=CfnScalarValueNode{
                  value=Sub
                }
                args=[
                  CfnScalarValueNode{
                    value=aaa
                  }
                ]
              }
              name=CfnScalarValueNode{
                value=Value
              }
            }
          ]
        }
        name=CfnScalarValueNode{
          value=C
        }
      },
      CfnOutputNode{
        value=CfnObjectValueNode{
          properties=[
            CfnNameValueNode{
              value=CfnFunctionNode{
                name=CfnScalarValueNode{
                  value=Sub
                }
                args=[
                  CfnScalarValueNode{
                    value=http://${WebServer.PublicDnsName}/wordpress
                  }
                ]
              }
              name=CfnScalarValueNode{
                value=Value
              }
            }
          ]
        }
        name=CfnScalarValueNode{
          value=D
        }
      },
      CfnOutputNode{
        value=CfnObjectValueNode{
          properties=[
            CfnNameValueNode{
              value=CfnScalarValueNode{
                value=http://${WebServer.PublicDnsName}/wordpress
              }
              name=CfnScalarValueNode{
                value=Value
              }
            }
          ]
        }
        name=CfnScalarValueNode{
          value=E
        }
      },
      CfnOutputNode{
        value=CfnObjectValueNode{
          properties=[
            CfnNameValueNode{
              value=CfnFunctionNode{
                name=CfnScalarValueNode{
                  value=Sub
                }
                args=[
                  CfnScalarValueNode{
                    value=ABC
                  }
                ]
              }
              name=CfnScalarValueNode{
                value=Value
              }
            }
          ]
        }
        name=CfnScalarValueNode{
          value=F
        }
      }
    ]
    name=CfnScalarValueNode{
      value=Outputs
    }
  }
}
