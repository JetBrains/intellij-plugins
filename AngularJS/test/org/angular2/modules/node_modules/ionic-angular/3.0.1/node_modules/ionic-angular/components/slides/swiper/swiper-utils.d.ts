import {Slides} from '../slides';
import {Platform} from '../../../platform/platform';

export declare function round(a: any): number;
export declare function inlineStyle(ele: any, styles: any): void;
export declare function addClass(ele: any, className: string): void;
export declare function removeClass(ele: any, className: any): void;
export declare function getElementIndex(ele: any): number;
export declare function queryChildren(parentEle: HTMLElement, query: string): HTMLElement[];
export declare function eachChild(parentEle: HTMLElement, query: string, callback: {
    (foundEle: HTMLElement): void;
}): void;
export declare function transform(ele: HTMLElement, val: any): void;
export declare function transition(ele: HTMLElement, duration: any): void;
export declare function triggerTransitionEnd(plt: Platform, ele: HTMLElement): void;
export declare function offset(ele: HTMLElement, plt: Platform): {
    top: number;
    left: number;
};
export declare function updateSlidesOffset(s: Slides): void;
export declare function isHorizontal(s: Slides): boolean;
export declare function isFormElement(el: any): boolean;
export declare function minTranslate(s: Slides): number;
export declare function maxTranslate(s: Slides): number;
export declare const CLS: {
    noSwiping: string;
    containerModifier: string;
    slide: string;
    slideActive: string;
    slideDuplicateActive: string;
    slideVisible: string;
    slideDuplicate: string;
    slideNext: string;
    slideDuplicateNext: string;
    slidePrev: string;
    slideDuplicatePrev: string;
    wrapper: string;
    bullet: string;
    bulletActive: string;
    buttonDisabled: string;
    paginationCurrent: string;
    paginationTotal: string;
    paginationHidden: string;
    paginationProgressbar: string;
    paginationClickable: string;
    paginationModifier: string;
    lazyLoading: string;
    lazyStatusLoading: string;
    lazyStatusLoaded: string;
    lazyPreloader: string;
    notification: string;
    preloader: string;
    zoomContainer: string;
};
