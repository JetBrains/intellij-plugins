import { ChangeDetectorRef, OnDestroy, PipeTransform } from '@angular/core';
import { TranslocoService } from './transloco.service';
import { HashMap, ProviderScope } from './types';
import * as ɵngcc0 from '@angular/core';
export declare class TranslocoPipe implements PipeTransform, OnDestroy {
    private translocoService;
    private providerScope;
    private providerLang;
    private cdr;
    private subscription;
    private lastValue;
    private lastKey;
    private listenToLangChange;
    private path;
    private langResolver;
    private scopeResolver;
    constructor(translocoService: TranslocoService, providerScope: string | ProviderScope | null, providerLang: string | null, cdr: ChangeDetectorRef);
    transform(key: string, params?: HashMap | undefined, inlineLang?: string | undefined): string;
    ngOnDestroy(): void;
    private updateValue;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<TranslocoPipe>;
    static ɵpipe: ɵngcc0.ɵɵPipeDefWithMeta<TranslocoPipe, "transloco">;
}

//# sourceMappingURL=transloco.pipe.d.ts.map