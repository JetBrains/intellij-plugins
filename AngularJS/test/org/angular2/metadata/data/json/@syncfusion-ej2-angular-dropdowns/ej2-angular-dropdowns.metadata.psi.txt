MetadataFile:ej2-angular-dropdowns.metadata.json
  @syncfusion/ej2-angular-dropdowns <metadata node module>
    export * from @syncfusion/ej2-dropdowns <metadata module export>('')
    ɵa <metadata array>
      actionFailureTemplate <metadata string>('')
      allowFiltering <metadata string>('')
      cssClass <metadata string>('')
      dataSource <metadata string>('')
      enablePersistence <metadata string>('')
      enableRtl <metadata string>('')
      enabled <metadata string>('')
      fields <metadata string>('')
      filterBarPlaceholder <metadata string>('')
      floatLabelType <metadata string>('')
      footerTemplate <metadata string>('')
      groupTemplate <metadata string>('')
      headerTemplate <metadata string>('')
      htmlAttributes <metadata string>('')
      ignoreAccent <metadata string>('')
      index <metadata string>('')
      itemTemplate <metadata string>('')
      locale <metadata string>('')
      noRecordsTemplate <metadata string>('')
      placeholder <metadata string>('')
      popupHeight <metadata string>('')
      popupWidth <metadata string>('')
      query <metadata string>('')
      readonly <metadata string>('')
      showClearButton <metadata string>('')
      sortOrder <metadata string>('')
      text <metadata string>('')
      value <metadata string>('')
      valueTemplate <metadata string>('')
      width <metadata string>('')
      zIndex <metadata string>('')
    ɵb <metadata array>
      actionBegin <metadata string>('')
      actionComplete <metadata string>('')
      actionFailure <metadata string>('')
      beforeOpen <metadata string>('')
      blur <metadata string>('')
      change <metadata string>('')
      close <metadata string>('')
      created <metadata string>('')
      dataBound <metadata string>('')
      destroyed <metadata string>('')
      filtering <metadata string>('')
      focus <metadata string>('')
      open <metadata string>('')
      select <metadata string>('')
      valueChange <metadata string>('')
    ɵc <metadata array>
      actionFailureTemplate <metadata string>('')
      allowCustom <metadata string>('')
      allowFiltering <metadata string>('')
      autofill <metadata string>('')
      cssClass <metadata string>('')
      dataSource <metadata string>('')
      enablePersistence <metadata string>('')
      enableRtl <metadata string>('')
      enabled <metadata string>('')
      fields <metadata string>('')
      filterBarPlaceholder <metadata string>('')
      floatLabelType <metadata string>('')
      footerTemplate <metadata string>('')
      groupTemplate <metadata string>('')
      headerTemplate <metadata string>('')
      htmlAttributes <metadata string>('')
      ignoreAccent <metadata string>('')
      index <metadata string>('')
      itemTemplate <metadata string>('')
      locale <metadata string>('')
      noRecordsTemplate <metadata string>('')
      placeholder <metadata string>('')
      popupHeight <metadata string>('')
      popupWidth <metadata string>('')
      query <metadata string>('')
      readonly <metadata string>('')
      showClearButton <metadata string>('')
      sortOrder <metadata string>('')
      text <metadata string>('')
      value <metadata string>('')
      valueTemplate <metadata string>('')
      width <metadata string>('')
      zIndex <metadata string>('')
    ɵd <metadata array>
      actionBegin <metadata string>('')
      actionComplete <metadata string>('')
      actionFailure <metadata string>('')
      beforeOpen <metadata string>('')
      blur <metadata string>('')
      change <metadata string>('')
      close <metadata string>('')
      created <metadata string>('')
      customValueSpecifier <metadata string>('')
      dataBound <metadata string>('')
      destroyed <metadata string>('')
      filtering <metadata string>('')
      focus <metadata string>('')
      open <metadata string>('')
      select <metadata string>('')
      valueChange <metadata string>('')
    ɵe <metadata array>
      actionFailureTemplate <metadata string>('')
      allowCustom <metadata string>('')
      allowFiltering <metadata string>('')
      autofill <metadata string>('')
      cssClass <metadata string>('')
      dataSource <metadata string>('')
      enablePersistence <metadata string>('')
      enableRtl <metadata string>('')
      enabled <metadata string>('')
      fields <metadata string>('')
      filterBarPlaceholder <metadata string>('')
      filterType <metadata string>('')
      floatLabelType <metadata string>('')
      footerTemplate <metadata string>('')
      groupTemplate <metadata string>('')
      headerTemplate <metadata string>('')
      highlight <metadata string>('')
      htmlAttributes <metadata string>('')
      ignoreAccent <metadata string>('')
      ignoreCase <metadata string>('')
      index <metadata string>('')
      itemTemplate <metadata string>('')
      locale <metadata string>('')
      minLength <metadata string>('')
      noRecordsTemplate <metadata string>('')
      placeholder <metadata string>('')
      popupHeight <metadata string>('')
      popupWidth <metadata string>('')
      query <metadata string>('')
      readonly <metadata string>('')
      showClearButton <metadata string>('')
      showPopupButton <metadata string>('')
      sortOrder <metadata string>('')
      suggestionCount <metadata string>('')
      text <metadata string>('')
      value <metadata string>('')
      valueTemplate <metadata string>('')
      width <metadata string>('')
      zIndex <metadata string>('')
    ɵf <metadata array>
      actionBegin <metadata string>('')
      actionComplete <metadata string>('')
      actionFailure <metadata string>('')
      beforeOpen <metadata string>('')
      blur <metadata string>('')
      change <metadata string>('')
      close <metadata string>('')
      created <metadata string>('')
      customValueSpecifier <metadata string>('')
      dataBound <metadata string>('')
      destroyed <metadata string>('')
      filtering <metadata string>('')
      focus <metadata string>('')
      open <metadata string>('')
      select <metadata string>('')
      valueChange <metadata string>('')
    ɵg <metadata array>
      actionFailureTemplate <metadata string>('')
      allowCustomValue <metadata string>('')
      allowFiltering <metadata string>('')
      closePopupOnSelect <metadata string>('')
      cssClass <metadata string>('')
      dataSource <metadata string>('')
      delimiterChar <metadata string>('')
      enablePersistence <metadata string>('')
      enableRtl <metadata string>('')
      enableSelectionOrder <metadata string>('')
      enabled <metadata string>('')
      fields <metadata string>('')
      filterBarPlaceholder <metadata string>('')
      floatLabelType <metadata string>('')
      footerTemplate <metadata string>('')
      groupTemplate <metadata string>('')
      headerTemplate <metadata string>('')
      hideSelectedItem <metadata string>('')
      htmlAttributes <metadata string>('')
      ignoreAccent <metadata string>('')
      ignoreCase <metadata string>('')
      itemTemplate <metadata string>('')
      locale <metadata string>('')
      maximumSelectionLength <metadata string>('')
      mode <metadata string>('')
      noRecordsTemplate <metadata string>('')
      openOnClick <metadata string>('')
      placeholder <metadata string>('')
      popupHeight <metadata string>('')
      popupWidth <metadata string>('')
      query <metadata string>('')
      readonly <metadata string>('')
      selectAllText <metadata string>('')
      showClearButton <metadata string>('')
      showDropDownIcon <metadata string>('')
      showSelectAll <metadata string>('')
      sortOrder <metadata string>('')
      text <metadata string>('')
      unSelectAllText <metadata string>('')
      value <metadata string>('')
      valueTemplate <metadata string>('')
      width <metadata string>('')
      zIndex <metadata string>('')
    ɵh <metadata array>
      actionBegin <metadata string>('')
      actionComplete <metadata string>('')
      actionFailure <metadata string>('')
      beforeOpen <metadata string>('')
      blur <metadata string>('')
      change <metadata string>('')
      chipSelection <metadata string>('')
      close <metadata string>('')
      created <metadata string>('')
      customValueSelection <metadata string>('')
      dataBound <metadata string>('')
      destroyed <metadata string>('')
      filtering <metadata string>('')
      focus <metadata string>('')
      open <metadata string>('')
      removed <metadata string>('')
      removing <metadata string>('')
      select <metadata string>('')
      selectedAll <metadata string>('')
      tagging <metadata string>('')
      valueChange <metadata string>('')
    ɵi <metadata array>
      actionFailureTemplate <metadata string>('')
      allowDragAndDrop <metadata string>('')
      cssClass <metadata string>('')
      dataSource <metadata string>('')
      enablePersistence <metadata string>('')
      enableRtl <metadata string>('')
      enabled <metadata string>('')
      fields <metadata string>('')
      groupTemplate <metadata string>('')
      height <metadata string>('')
      ignoreAccent <metadata string>('')
      itemTemplate <metadata string>('')
      locale <metadata string>('')
      noRecordsTemplate <metadata string>('')
      query <metadata string>('')
      scope <metadata string>('')
      selectionSettings <metadata string>('')
      sortOrder <metadata string>('')
      toolbarSettings <metadata string>('')
      value <metadata string>('')
      zIndex <metadata string>('')
    ɵj <metadata array>
      focus <metadata string>('')
      blur <metadata string>('')
      actionBegin <metadata string>('')
      actionComplete <metadata string>('')
      actionFailure <metadata string>('')
      beforeItemRender <metadata string>('')
      created <metadata string>('')
      dataBound <metadata string>('')
      destroyed <metadata string>('')
      drag <metadata string>('')
      dragStart <metadata string>('')
      drop <metadata string>('')
      select <metadata string>('')
      valueChange <metadata string>('')
    DropDownListComponent <metadata component>: selector=ejs-dropdownlist; inputs=[floatLabelType, itemTemplate, noRecordsTemplate, groupTemplate, locale, enabled, readonly, cssClass, allowFiltering, text, placeholder, filterBarPlaceholder, value, valueTemplate, popupWidth, headerTemplate, zIndex, popupHeight, showClearButton, query, index, footerTemplate, htmlAttributes, enablePersistence, sortOrder, width, fields, dataSource, enableRtl, actionFailureTemplate, ignoreAccent]; outputs=[select, created, change, dataBound, focus, blur, beforeOpen, actionFailure, actionComplete, destroyed, actionBegin, valueChange, filtering, close, open]; inOuts=[<value,valueChange>]
      #ext: @syncfusion/ej2-dropdowns#DropDownList <metadata reference>('')
      ___dec.inputs: ɵa <metadata reference>('')
      ___dec.outputs: ɵb <metadata reference>('')
    DropDownListModule <metadata module>: imports=[]; declarations=[DropDownListComponent]; exports=[DropDownListComponent]; scopeFullyResolved=false; exportsFullyResolved=true
      ___dec.declarations <metadata array>
        DropDownListComponent <metadata reference>('')
      ___dec.exports <metadata array>
        DropDownListComponent <metadata reference>('')
      ___dec.imports <metadata array>
        @angular/common#CommonModule <metadata reference>('')
    DropDownListAllModule <metadata module>: imports=[DropDownListModule]; declarations=[]; exports=[DropDownListModule]; scopeFullyResolved=false; exportsFullyResolved=true
      ___dec.exports <metadata array>
        DropDownListModule <metadata reference>('')
      ___dec.imports <metadata array>
        @angular/common#CommonModule <metadata reference>('')
        DropDownListModule <metadata reference>('')
    ComboBoxComponent <metadata component>: selector=ejs-combobox; inputs=[floatLabelType, itemTemplate, noRecordsTemplate, groupTemplate, locale, enabled, readonly, cssClass, allowFiltering, text, placeholder, filterBarPlaceholder, value, valueTemplate, popupWidth, headerTemplate, zIndex, popupHeight, showClearButton, query, index, footerTemplate, htmlAttributes, enablePersistence, sortOrder, width, autofill, fields, dataSource, enableRtl, actionFailureTemplate, ignoreAccent, allowCustom]; outputs=[select, created, change, dataBound, focus, blur, beforeOpen, actionFailure, actionComplete, destroyed, actionBegin, valueChange, customValueSpecifier, filtering, close, open]; inOuts=[<value,valueChange>]
      #ext: @syncfusion/ej2-dropdowns#ComboBox <metadata reference>('')
      ___dec.inputs: ɵc <metadata reference>('')
      ___dec.outputs: ɵd <metadata reference>('')
    ComboBoxModule <metadata module>: imports=[]; declarations=[ComboBoxComponent]; exports=[ComboBoxComponent]; scopeFullyResolved=false; exportsFullyResolved=true
      ___dec.declarations <metadata array>
        ComboBoxComponent <metadata reference>('')
      ___dec.exports <metadata array>
        ComboBoxComponent <metadata reference>('')
      ___dec.imports <metadata array>
        @angular/common#CommonModule <metadata reference>('')
    ComboBoxAllModule <metadata module>: imports=[ComboBoxModule]; declarations=[]; exports=[ComboBoxModule]; scopeFullyResolved=false; exportsFullyResolved=true
      ___dec.exports <metadata array>
        ComboBoxModule <metadata reference>('')
      ___dec.imports <metadata array>
        @angular/common#CommonModule <metadata reference>('')
        ComboBoxModule <metadata reference>('')
    AutoCompleteComponent <metadata component>: selector=ejs-autocomplete; inputs=[floatLabelType, itemTemplate, minLength, suggestionCount, noRecordsTemplate, groupTemplate, locale, enabled, highlight, readonly, cssClass, ignoreCase, allowFiltering, text, placeholder, filterBarPlaceholder, value, valueTemplate, popupWidth, headerTemplate, zIndex, popupHeight, showClearButton, query, index, footerTemplate, htmlAttributes, enablePersistence, sortOrder, width, showPopupButton, autofill, filterType, fields, dataSource, enableRtl, actionFailureTemplate, ignoreAccent, allowCustom]; outputs=[select, created, change, dataBound, focus, blur, beforeOpen, actionFailure, actionComplete, destroyed, actionBegin, valueChange, customValueSpecifier, filtering, close, open]; inOuts=[<value,valueChange>]
      #ext: @syncfusion/ej2-dropdowns#AutoComplete <metadata reference>('')
      ___dec.inputs: ɵe <metadata reference>('')
      ___dec.outputs: ɵf <metadata reference>('')
    AutoCompleteModule <metadata module>: imports=[]; declarations=[AutoCompleteComponent]; exports=[AutoCompleteComponent]; scopeFullyResolved=false; exportsFullyResolved=true
      ___dec.declarations <metadata array>
        AutoCompleteComponent <metadata reference>('')
      ___dec.exports <metadata array>
        AutoCompleteComponent <metadata reference>('')
      ___dec.imports <metadata array>
        @angular/common#CommonModule <metadata reference>('')
    AutoCompleteAllModule <metadata module>: imports=[AutoCompleteModule]; declarations=[]; exports=[AutoCompleteModule]; scopeFullyResolved=false; exportsFullyResolved=true
      ___dec.exports <metadata array>
        AutoCompleteModule <metadata reference>('')
      ___dec.imports <metadata array>
        @angular/common#CommonModule <metadata reference>('')
        AutoCompleteModule <metadata reference>('')
    MultiSelectComponent <metadata component>: selector=ejs-multiselect; inputs=[floatLabelType, itemTemplate, noRecordsTemplate, unSelectAllText, groupTemplate, locale, delimiterChar, enabled, allowCustomValue, openOnClick, mode, selectAllText, readonly, cssClass, closePopupOnSelect, showDropDownIcon, ignoreCase, allowFiltering, text, placeholder, filterBarPlaceholder, enableSelectionOrder, value, valueTemplate, popupWidth, headerTemplate, zIndex, maximumSelectionLength, popupHeight, showClearButton, query, footerTemplate, htmlAttributes, enablePersistence, showSelectAll, sortOrder, width, hideSelectedItem, fields, dataSource, enableRtl, actionFailureTemplate, ignoreAccent]; outputs=[tagging, selectedAll, select, created, change, dataBound, customValueSelection, focus, blur, removing, beforeOpen, actionFailure, actionComplete, chipSelection, destroyed, removed, actionBegin, valueChange, filtering, close, open]; inOuts=[<value,valueChange>]
      #ext: @syncfusion/ej2-dropdowns#MultiSelect <metadata reference>('')
      ___dec.inputs: ɵg <metadata reference>('')
      ___dec.outputs: ɵh <metadata reference>('')
    MultiSelectModule <metadata module>: imports=[]; declarations=[MultiSelectComponent]; exports=[MultiSelectComponent]; scopeFullyResolved=false; exportsFullyResolved=true
      ___dec.declarations <metadata array>
        MultiSelectComponent <metadata reference>('')
      ___dec.exports <metadata array>
        MultiSelectComponent <metadata reference>('')
      ___dec.imports <metadata array>
        @angular/common#CommonModule <metadata reference>('')
    MultiSelectAllModule <metadata module>: imports=[MultiSelectModule]; declarations=[]; exports=[MultiSelectModule]; scopeFullyResolved=false; exportsFullyResolved=true
      ___dec.exports <metadata array>
        MultiSelectModule <metadata reference>('')
      ___dec.imports <metadata array>
        @angular/common#CommonModule <metadata reference>('')
        MultiSelectModule <metadata reference>('')
    CheckBoxSelectionService <metadata object>
      provide: DropDownsCheckBoxSelection <metadata string>('')
      useValue: @syncfusion/ej2-dropdowns#CheckBoxSelection <metadata reference>('')
    ListBoxComponent <metadata component>: selector=ejs-listbox; inputs=[itemTemplate, query, noRecordsTemplate, groupTemplate, locale, selectionSettings, enabled, toolbarSettings, cssClass, enablePersistence, sortOrder, scope, allowDragAndDrop, fields, value, dataSource, enableRtl, actionFailureTemplate, zIndex, ignoreAccent, height]; outputs=[drop, select, beforeItemRender, dragStart, created, dataBound, blur, focus, actionFailure, actionComplete, destroyed, actionBegin, valueChange, drag]; inOuts=[<value,valueChange>]
      #ext: @syncfusion/ej2-dropdowns#ListBox <metadata reference>('')
      ___dec.inputs: ɵi <metadata reference>('')
      ___dec.outputs: ɵj <metadata reference>('')
    ListBoxModule <metadata module>: imports=[]; declarations=[ListBoxComponent]; exports=[ListBoxComponent]; scopeFullyResolved=false; exportsFullyResolved=true
      ___dec.declarations <metadata array>
        ListBoxComponent <metadata reference>('')
      ___dec.exports <metadata array>
        ListBoxComponent <metadata reference>('')
      ___dec.imports <metadata array>
        @angular/common#CommonModule <metadata reference>('')
    ListBoxAllModule <metadata module>: imports=[ListBoxModule]; declarations=[]; exports=[ListBoxModule]; scopeFullyResolved=false; exportsFullyResolved=true
      ___dec.exports <metadata array>
        ListBoxModule <metadata reference>('')
      ___dec.imports <metadata array>
        @angular/common#CommonModule <metadata reference>('')
        ListBoxModule <metadata reference>('')
