angularjs.completion.type.default.selection.keyword=Default selection keyword
angularjs.completion.type.message.format.extension=Message format extension
angularjs.completion.type.plural.category=Plural category

angularjs.inspection.expected.integer.after.equals=Expected integer value after =
angularjs.inspection.expected.plural.category=Expected plural category

angularjs.parser.message.duplicate.selection.keyword=Duplicate selection keyword
angularjs.parser.message.expected.double.lbrace=Expected {{
angularjs.parser.message.expected.double.rbrace=Expected }}
angularjs.parser.message.expected.filter=Expected filter
angularjs.parser.message.expected.integer.value=Expected integer value
angularjs.parser.message.expected.message.in.brace.delimiters=Expected message in {} delimiters
angularjs.parser.message.expected.offset.option=Expected offset option value
angularjs.parser.message.expected.selection.keyword=Expected selection keyword
angularjs.parser.message.missing.or.unknown.message.format.extension=Missing or unknown message format extension
angularjs.parser.message.missing.required.selection.keyword=Missing required selection keyword ''{0}''

angularjs.symbol.directive=directive

angularjs.refactoring.selector.invalid.html.element.name={0} is not a valid HTML element name.
angularjs.refactoring.selector.invalid.html.attribute.name={0} is not a valid HTML attribute name.

angularjs.ui.router.diagram.provider.name=AngularJS ui-router states and views
angularjs.ui.router.diagram.action.edit.source.name=Jump To...
angularjs.ui.router.diagram.action.edit.source.description=Jump to...
angularjs.ui.router.diagram.action.new.diagram.name=Show AngularJS ui-router State Diagram
angularjs.ui.router.diagram.action.new.diagram.description=Show AngularJS ui-router state diagram
angularjs.ui.router.diagram.action.new.diagram.info.no.router.states.found=No router states found.
angularjs.ui.router.diagram.action.new.diagram.progress=Building {0} Diagram
angularjs.ui.router.diagram.action.new.diagram.select.main.file=Select Main Template File
angularjs.ui.router.diagram.edge.provides=provides
angularjs.ui.router.diagram.edge.smth.populates.smth={0} populates {1}
angularjs.ui.router.diagram.edge.smth.provides={0} provides
angularjs.ui.router.diagram.error.cant.find.state.definition=Cannot find the state definition
angularjs.ui.router.diagram.error.cant.find.template.file=Cannot find template file
angularjs.ui.router.diagram.node.name.local=local
angularjs.ui.router.diagram.node.tooltip.errors={0, plural, one {Error} other {Errors}}
angularjs.ui.router.diagram.node.tooltip.warnings={0, plural, one {Warning} other {Warnings}}
angularjs.ui.router.diagram.note.has.embedded.template.definition=Has embedded template definition.
angularjs.ui.router.diagram.warning.abstract.state=Abstract state can not be instantiated so it makes no sense to define views for it.
angularjs.ui.router.diagram.warning.views.are.defined=Since 'views' are defined for state, state template information would be ignored.

category.name.states=States
category.name.views=Views
category.name.templates=Templates
category.name.templateplaceholders=TemplatePlaceholders
category.name.topleveltemplate=TopLevelTemplate

action.AngularJS.Show.Ui.Router.States.Diagram.Action.text=Show AngularJS UI-Router State Diagram
filetype.angular2html.description=Angular HTML Template
filetype.angular2svg.description=Angular SVG Template

livetemplate.description.angularjs.ngdcf=A compile function
livetemplate.description.angularjs.ngdlf=A linking function in a directive.
livetemplate.description.angularjs.ngdc=A directive with a compile function
livetemplate.description.angularjs.ngdl=A directive with a linking function only.
livetemplate.description.angularjs.ngc=Define a new Angular Controller. You can change the controller name and parameters.
livetemplate.description.angularjs.ngfor=angular.foreach loop
livetemplate.description.angularjs.ngindex=Simple way of bootstraping angular app for prototyping purposes
livetemplate.description.angularjs.ngsa=Script tag importing base AngularJS file from CDN
livetemplate.description.angularjs.ngst=A script tag holding Angular's template
livetemplate.description.angularjs.ngb=A binding in AngularJS
livetemplate.description.angularjs.ngm=A new angular module without a config function.
livetemplate.description.angularjs.ngma=A new angular module without a config function and a variable assigment.
livetemplate.description.angularjs.ngmc=A new angular module with a config function
livetemplate.description.angularjs.ngmfa=A factory in a module
livetemplate.description.angularjs.ngms=Define an Angular Module Service to be attached to a previously defined module. You can change the service name and service injectables.
livetemplate.description.angularjs.ngmfi=Define an Angular Module Filter to be attached to a previously defined module. You can change the filter name.
livetemplate.description.angularjs.ngrw=Defines a when condition of an AngularJS route.
livetemplate.description.angularjs.ngrwr=Defines a when condition of an AngularJS route with the resolve block.
livetemplate.description.angularjs.ngro=Defines an otherwise condition of an AngularJS route.
livetemplate.description.angularjs.$f=Define a new $scope'd function (usually inside an AngularJS Controller). You can change the function name and arguments.
livetemplate.description.angularjs.$v=Defines a new $scope'd variable inside an AngularJS controller.
livetemplate.description.angularjs.$va=Defines a new $scope'd variable inside an AngularJS controller and assigns a value from a contstructor arguments.
livetemplate.description.angularjs.$w=Define a $watch for an expression. You can change the expression  to be watched.
livetemplate.description.angularjs.$on=Define a $on for a $broadcast/$emit on the $scope inside an Angular Controller. You can change the event name to listen on.
livetemplate.description.angularjs.$b=Define a $broadcast for a $scope inside an Angular Controller / Angular Controller Function. You can change the event name and optional event arguments.
livetemplate.description.angularjs.$e=Define an $emit for a $scope inside an Angular Controller / Angular Controller Function. You can change the event name and optional event arguments.

