<idea-plugin url="https://github.com/JetBrains/intellij-plugins/tree/master/AngularJS">
  <id>AngularJS</id>
  <name>Angular and AngularJS</name>
  <category>JavaScript Frameworks and Tools</category>
  <description><![CDATA[
    <p>Support for <a href="https://angular.io/">Angular</a> and <a href="https://angularjs.org/">AngularJS</a> projects.</p>
    <h2>Getting started</h2>
    <ul>
      <li>Open your Angular or AngularJS project.</li>
      <li>Make sure that you have AngularJS or Angular library files in your project (for example, in the node_modules folder) - this is
        required for the IDE to enable Angular support for this project.
      </li>
      <li>Now, you will get Angular-specific code completion, navigation, and many other features.</li>
    </ul>
    <h2>Features</h2>
    <ul>
      <li>Code completion for Angular or AngularJS APIs in JavaScript or TypeScript files</li>
      <li>Completion for components, built-in and custom directives, and methods in templates</li>
      <li>Navigation from the component, custom directives and event handlers to their definition</li>
      <li>Collection of code snippets for Angular and AngularJS</li>
      <li>Create new projects from the IDE Welcome screen using Angular CLI or built-in template for AngularJS</li>
      <li>Generate new app elements using Angular CLI</li>
      <li>For AngularJS apps that use ui-router, see state diagram</li>
    </ul>
    <p>Here you can find more information on using <a href="https://www.jetbrains.com/help/webstorm/angular.html">Angular</a> and <a
      href="https://www.jetbrains.com/help/webstorm/angularjs.html">AngularJS</a> in the IDE.</p>
    <p>Please report any issues on the <a href="https://youtrack.jetbrains.com/issues/WEB">tracker</a>.</p>
    <p></p>
    <p>Originally developed by John Lindquist.</p>
    ]]></description>
  <vendor>JetBrains</vendor>

  <content>
    <module name="intellij.angularJS/diagram"/>
  </content>

  <depends>JavaScript</depends>
  <depends>com.intellij.modules.platform</depends>
  <depends optional="true" config-file="css-support.xml">com.intellij.css</depends>
  <depends optional="true" config-file="tslint-support.xml">tslint</depends>

  <extensionPoints>
    <!--suppress DeprecatedClassUsageInspection -->
    <extensionPoint qualifiedName="org.angular2.contextProvider"
                    interface="org.angular2.lang.Angular2ContextProvider"
                    dynamic="true"/>
    <extensionPoint qualifiedName="org.angular2.templateScopesProvider"
                    interface="org.angular2.codeInsight.template.Angular2TemplateScopesProvider"
                    dynamic="true"/>
    <extensionPoint qualifiedName="org.angular2.frameworkHandler"
                    interface="org.angular2.entities.Angular2FrameworkHandler"
                    dynamic="true"/>
  </extensionPoints>

  <extensions defaultExtensionNs="com.intellij">
    <codeInsight.template.postfixTemplateProvider language="AngularJS"
                                                  implementationClass="com.intellij.codeInsight.template.postfix.templates.EmptyPostfixTemplateProvider"/>

    <lang.surroundDescriptor language="AngularJS"
                             implementationClass="org.angularjs.refactoring.surround.AngularJSExpressionSurroundDescriptor"/>

    <xml.attributeDescriptorsProvider implementation="org.angularjs.codeInsight.attributes.AngularJSAttributeDescriptorsProvider"
                                      order="first"/>
    <xml.tagNameProvider implementation="org.angularjs.codeInsight.tags.AngularJSTagDescriptorsProvider"/>
    <xml.elementDescriptorProvider implementation="org.angularjs.codeInsight.tags.AngularJSTagDescriptorsProvider" order="last"/>
    <xml.xmlExtension implementation="org.angularjs.codeInsight.AngularJSHtmlExtension" order="before react, before web-symbols-react" id="AngularJS"/>

    <defaultLiveTemplates file="liveTemplates/AngularJS"/>

    <typedHandler implementation="org.angularjs.editor.AngularJSBracesInterpolationTypedHandler"/>
    <lang.braceMatcher language="AngularJS" implementationClass="com.intellij.lang.javascript.highlighting.JSBraceMatcher"/>

    <stubIndex implementation="org.angularjs.index.AngularDirectivesIndex"/>
    <stubIndex implementation="org.angularjs.index.AngularDirectivesDocIndex"/>
    <stubIndex implementation="org.angularjs.index.AngularControllerIndex"/>
    <stubIndex implementation="org.angularjs.index.AngularModuleIndex"/>
    <stubIndex implementation="org.angularjs.index.AngularFilterIndex"/>
    <stubIndex implementation="org.angularjs.index.AngularSymbolIndex"/>
    <stubIndex implementation="org.angularjs.index.AngularUiRouterStatesIndex"/>
    <stubIndex implementation="org.angularjs.index.AngularUiRouterGenericStatesIndex"/>
    <stubIndex implementation="org.angularjs.index.AngularTemplateUrlIndex"/>
    <stubIndex implementation="org.angularjs.index.AngularGenericModulesIndex"/>
    <fileBasedIndex implementation="org.angularjs.index.AngularTemplateCacheIndex"/>
    <stubIndex implementation="org.angularjs.index.AngularInjectionDelimiterIndex"/>
    <fileBasedIndex implementation="org.angularjs.index.AngularUiRouterViewsIndex"/>
    <fileBasedIndex implementation="org.angularjs.index.AngularAppIndex"/>

    <gotoSymbolContributor implementation="org.angularjs.navigation.AngularGotoSymbolContributor"/>
    <lang.documentationProvider language="HTML" implementationClass="org.angularjs.AngularJSDocumentationProvider"/>
    <lang.documentationProvider language="JavaScript" implementationClass="org.angularjs.AngularJSDocumentationProvider" order="first"/>
    <lang.parserDefinition language="AngularJS" implementationClass="org.angularjs.lang.parser.AngularJSParserDefinition"/>
    <lang.syntaxHighlighter language="AngularJS" implementationClass="org.angularjs.lang.AngularJSSyntaxHighlighter"/>
    <psi.referenceContributor implementation="org.angularjs.codeInsight.refs.AngularJSReferencesContributor"/>
    <highlightErrorFilter implementation="org.angularjs.lang.AngularJSErrorFilter"/>
    <annotator language="AngularJS" implementationClass="org.angularjs.codeInsight.AngularJSMessageFormatAnnotator"/>
    <annotator language="AngularJS" implementationClass="com.intellij.lang.javascript.validation.JSAnnotator"/>
    <fileType name="HTML" extensions="ng"/>

    <!--suppress PluginXmlValidity -->
    <multiHostInjector implementation="org.angularjs.editor.AngularJSInjector"
                       order="before JSConfigurationInjector, after TemporaryPlacesInjector"
                       id="AngularInjector"/>
    <completion.contributor language="AngularJS" implementationClass="org.angularjs.codeInsight.AngularJSCompletionContributor"
                            id="AngularJSCompletionContributor"
                            order="before JSPatternBasedCompletionContributor, before JSCompletionContributor"/>

    <completion.contributor language="JavaScript" implementationClass="org.angularjs.codeInsight.AngularJSDICompletionContributor"
                            id="AngularJSDICompletionContributor"
                            order="before JSPatternBasedCompletionContributor, before JSCompletionContributor"/>

    <completion.contributor language="JavaScript" implementationClass="org.angularjs.codeInsight.AngularJavaScriptCompletionContributor"
                            id="AngularJavaScriptCompletionContributor"
                            order="before JSPatternBasedCompletionContributor, before JSCompletionContributor"/>

    <completion.contributor language="HTML" implementationClass="org.angularjs.codeInsight.AngularJSXmlCompletionContributor"
                            id="AngularJSXmlCompletionContributor" order="before xmlNonFirst"/>

    <renamePsiElementProcessor implementation="org.angularjs.refactoring.AngularJSDirectiveRenameProcessor"/>
    <targetElementEvaluator language="JavaScript" implementationClass="org.angularjs.AngularJSTargetElementEvaluator"/>
    <elementDescriptionProvider order="first"
                                implementation="org.angularjs.refactoring.AngularJSDirectiveRenameProcessor$AngularJSDirectiveElementDescriptor"/>

    <referencesSearch implementation="org.angularjs.findUsages.AngularJSReferenceSearcher"/>

    <directoryProjectGenerator implementation="org.angularjs.AngularJSProjectGenerator"/>

    <!-- Angular 2 contributions -->
    <javascript.web.framework id="angular" implementation="org.angular2.Angular2Framework"/>
    <javascript.web.context framework="angular" implementation="org.angular2.lang.Angular2LegacyContext"
                            id="angular.legacy" order="last"/>

    <applicationService serviceInterface="org.angular2.cli.AngularCliSchematicsRegistryService"
                        serviceImplementation="org.angular2.cli.AngularCliSchematicsRegistryServiceImpl"/>
    <javascript.names.suggester implementation="org.angular2.naming.Angular2NamesSuggester"/>
    <psi.fileReferenceHelper implementation="org.angular2.cli.AngularCliFileReferenceHelper"/>

    <projectService serviceInterface="org.angular2.refactoring.extractComponent.Angular2CliComponentGenerator"
                    serviceImplementation="org.angular2.refactoring.extractComponent.Angular2CliComponentGeneratorImpl"
                    testServiceImplementation="org.angular2.refactoring.Angular2CliComponentGeneratorMockImpl"
    />

    <!--suppress PluginXmlValidity -->
    <javascript.rename.extension implementation="org.angular2.refactoring.Angular2RenameExtension"/>
    <localInspection implementationClass="org.angular2.inspections.AngularCliAddDependencyInspection"
                     groupKey="angular.inspection.group.name" enabledByDefault="true" level="WARNING" language="JSON"
                     key="angular.inspection.install-with-ng-add.name" bundle="messages.Angular2Bundle"/>
    <localInspection implementationClass="org.angular2.inspections.AngularIncorrectTemplateDefinitionInspection"
                     groupKey="angular.inspection.group.name" enabledByDefault="true" level="ERROR" language="TypeScript"
                     key="angular.inspection.invalid-template-definition.name" bundle="messages.Angular2Bundle"/>
    <localInspection implementationClass="org.angular2.inspections.AngularMissingOrInvalidDeclarationInModuleInspection"
                     groupKey="angular.inspection.group.name" enabledByDefault="true" level="ERROR" language="TypeScript"
                     key="angular.inspection.invalid-declaration-in-module.name" bundle="messages.Angular2Bundle"/>
    <localInspection implementationClass="org.angular2.inspections.AngularInvalidImportedOrDeclaredSymbolInspection"
                     groupKey="angular.inspection.group.name" enabledByDefault="true" level="ERROR" language="TypeScript"
                     key="angular.inspection.wrong-entity-type.name" bundle="messages.Angular2Bundle"/>
    <localInspection implementationClass="org.angular2.inspections.AngularRecursiveModuleImportExportInspection"
                     groupKey="angular.inspection.group.name" enabledByDefault="true" level="ERROR" language="TypeScript"
                     key="angular.inspection.cyclic-module-dependency.name" bundle="messages.Angular2Bundle"/>
    <localInspection implementationClass="org.angular2.inspections.AngularUndefinedModuleExportInspection"
                     groupKey="angular.inspection.group.name" enabledByDefault="true" level="ERROR" language="TypeScript"
                     key="angular.inspection.undefined-export.name" bundle="messages.Angular2Bundle"/>
    <localInspection implementationClass="org.angular2.inspections.AngularInvalidEntryComponentInspection"
                     groupKey="angular.inspection.group.name" enabledByDefault="true" level="ERROR" language="TypeScript"
                     key="angular.inspection.invalid-entry-component.name" bundle="messages.Angular2Bundle"/>
    <localInspection implementationClass="org.angular2.inspections.AngularInvalidSelectorInspection"
                     groupKey="angular.inspection.group.name" enabledByDefault="true" level="ERROR"
                     key="angular.inspection.invalid-directive-selector.name"
                     bundle="messages.Angular2Bundle"/>
    <localInspection implementationClass="org.angular2.inspections.AngularInaccessibleComponentMemberInAotModeInspection"
                     groupKey="angular.inspection.group.name" enabledByDefault="true" level="WARNING"
                     key="angular.inspection.aot-inaccessible-member.name" bundle="messages.Angular2Bundle"/>
    <directoryProjectGenerator implementation="org.angular2.cli.AngularCliProjectGenerator"/>
    <projectTemplatesFactory implementation="org.angular2.AngularAndAngularJSTemplateFactory"/>
    <!-- works in new IDEA wizard -->
    <moduleBuilder builderClass="org.angular2.AngularCLIModuleBuilder" />
    <directoryProjectConfigurator implementation="org.angular2.cli.AngularJSProjectConfigurator"
                                  order="after PlatformProjectConfigurator"/>
    <framework.detector implementation="org.angular2.cli.AngularJSFrameworkDetector"/>
    <stubIndex implementation="org.angular2.index.Angular2TemplateUrlIndex"/>
    <stubIndex implementation="org.angular2.index.Angular2SourcePipeIndex"/>
    <stubIndex implementation="org.angular2.index.Angular2SourceDirectiveIndex"/>
    <stubIndex implementation="org.angular2.index.Angular2SourceModuleIndex"/>
    <stubIndex implementation="org.angular2.index.Angular2IvyPipeIndex"/>
    <stubIndex implementation="org.angular2.index.Angular2IvyDirectiveIndex"/>
    <stubIndex implementation="org.angular2.index.Angular2IvyModuleIndex"/>
    <findUsagesHandlerFactory implementation="org.angularjs.findUsages.AngularJSFindUsagesHandlerFactory" order="before JavaScript"/>
    <psi.referenceContributor implementation="org.angular2.codeInsight.refs.Angular2ReferencesContributor"/>
    <psi.symbolReferenceProvider hostElementClass="org.angular2.lang.html.psi.Angular2HtmlNgContentSelector"
                                 hostLanguage="Angular2Html"
                                 implementationClass="org.angular2.codeInsight.refs.Angular2SelectorReferencesProvider$NgContentSelectorProvider"
                                 targetClass="com.intellij.javascript.web.symbols.WebSymbol"/>
    <psi.symbolReferenceProvider hostElementClass="com.intellij.lang.javascript.psi.JSLiteralExpression"
                                 hostLanguage="TypeScript"
                                 implementationClass="org.angular2.codeInsight.refs.Angular2SelectorReferencesProvider$NgDecoratorSelectorProvider"
                                 targetClass="com.intellij.javascript.web.symbols.WebSymbol"/>
    <javascript.web.declarationProvider implementation="org.angular2.codeInsight.refs.Angular2SelectorDeclarationProvider"/>
    <elementDescriptionProvider
      order="first"
      implementation="org.angular2.refactoring.Angular2ElementDescriptionProvider"/>
    <referencesSearch implementation="org.angular2.findUsages.Angular2ReferenceSearcher"/>
    <gotoSymbolContributor implementation="org.angular2.navigation.Angular2GotoSymbolContributor"/>
    <gotoRelatedProvider implementation="org.angular2.navigation.Angular2GotoRelatedProvider"/>
    <typedHandler implementation="org.angular2.editor.Angular2BracesInterpolationTypedHandler"/>
    <moveFileHandler implementation="org.angular2.refactoring.Angular2MoveFileHandler" order="first"/>
    <defaultLiveTemplates file="liveTemplates/Angular2"/>

    <!-- Angular 2 HTML template contributions -->
    <fileType name="Angular2Html" implementationClass="org.angular2.lang.html.Angular2HtmlFileType" fieldName="INSTANCE"
              language="Angular2Html"/>
    <!--suppress PluginXmlValidity -->
    <quoteHandler className="com.intellij.codeInsight.editorActions.HtmlQuoteHandler" fileType="Angular2Html"/>
    <multiHostInjector implementation="org.angular2.editor.Angular2Injector" order="after JSCommentInjector, before JSConfigurationInjector"
                       id="angular2"/>
    <xml.xmlExtension implementation="org.angular2.codeInsight.Angular2HtmlExtension" order="before html, before web-symbols-react" id="angular2"/>
    <lang.parserDefinition language="Angular2Html" implementationClass="org.angular2.lang.html.parser.Angular2HtmlParserDefinition"/>
    <lang.syntaxHighlighterFactory language="Angular2Html"
                                   implementationClass="org.angular2.lang.html.highlighting.Angular2HtmlHighlighterFactory"/>
    <lookup.charFilter implementation="org.angular2.editor.Angular2LookupCharFilter" order="before xml"/>
    <localInspection implementationClass="org.angular2.inspections.AngularMissingEventHandlerInspection"
                     groupKey="angular.inspection.group.name" enabledByDefault="true" language="HtmlCompatible"
                     level="ERROR" key="angular.inspection.missing-event-handler.name" bundle="messages.Angular2Bundle"/>
    <localInspection implementationClass="org.angular2.inspections.AngularInsecureBindingToEventInspection"
                     groupKey="angular.inspection.group.name" enabledByDefault="true" language="HtmlCompatible"
                     level="WARNING" key="angular.inspection.insecure-binding-to-event.name" bundle="messages.Angular2Bundle"/>
    <localInspection implementationClass="org.angular2.inspections.AngularNonEmptyNgContentInspection"
                     groupKey="angular.inspection.group.name" enabledByDefault="true" language="HtmlCompatible"
                     level="ERROR" key="angular.inspection.ng-content-with-content.name" bundle="messages.Angular2Bundle"/>
    <localInspection implementationClass="org.angular2.inspections.AngularMultipleStructuralDirectivesInspection"
                     groupKey="angular.inspection.group.name" enabledByDefault="true" language="HtmlCompatible"
                     level="ERROR" key="angular.inspection.multiple-structural-directives.name" bundle="messages.Angular2Bundle"/>
    <localInspection implementationClass="org.angular2.inspections.AngularInvalidAnimationTriggerAssignmentInspection"
                     groupKey="angular.inspection.group.name" enabledByDefault="true" language="HtmlCompatible"
                     level="ERROR" key="angular.inspection.animation-trigger-assignment.name"
                     bundle="messages.Angular2Bundle"/>
    <localInspection implementationClass="org.angular2.inspections.AngularInvalidTemplateReferenceVariableInspection"
                     groupKey="angular.inspection.group.name" enabledByDefault="true" language="HtmlCompatible"
                     level="ERROR" key="angular.inspection.invalid-template-ref-var.name"
                     bundle="messages.Angular2Bundle"/>
    <localInspection implementationClass="org.angular2.inspections.AngularUndefinedBindingInspection"
                     groupKey="angular.inspection.group.name" enabledByDefault="true" language="HtmlCompatible"
                     level="ERROR" key="angular.inspection.undefined-binding.name" bundle="messages.Angular2Bundle"/>
    <localInspection implementationClass="org.angular2.inspections.AngularInvalidI18nAttributeInspection"
                     groupKey="angular.inspection.group.name" enabledByDefault="true" language="HtmlCompatible"
                     level="WARNING" key="angular.inspection.i18n.name" bundle="messages.Angular2Bundle"/>
    <localInspection implementationClass="org.angular2.inspections.AngularAmbiguousComponentTagInspection"
                     groupKey="angular.inspection.group.name" enabledByDefault="true" language="HtmlCompatible"
                     level="ERROR" key="angular.inspection.ambiguous-component-tag.name" bundle="messages.Angular2Bundle"/>
    <localInspection implementationClass="org.angular2.inspections.AngularUndefinedTagInspection"
                     groupKey="angular.inspection.group.name" enabledByDefault="true" language="HtmlCompatible"
                     level="ERROR" key="angular.inspection.undefined-tag.name" bundle="messages.Angular2Bundle"/>
    <idIndexer filetype="Angular2Html" implementationClass="org.angular2.lang.html.index.Angular2HtmlIdIndexer"/>
    <todoIndexer filetype="Angular2Html" implementationClass="org.angular2.lang.html.index.Angular2HtmlTodoIndexer"/>
    <stubElementTypeHolder class="org.angular2.lang.html.stub.Angular2HtmlStubElementTypes"/>
    <lang.formatter language="Angular2Html" implementationClass="org.angular2.lang.html.Angular2HtmlFormattingModelBuilder"/>
    <gotoDeclarationHandler implementation="org.angular2.editor.Angular2GotoDeclarationHandler" order="first"/>
    <typeDeclarationProvider implementation="org.angular2.editor.Angular2TypeDeclarationProvider" order="first"/>
    <lang.symbolTypeProvider implementation="org.angular2.editor.Angular2TypeDeclarationProvider"/>
    <html.attributeValueProvider implementation="org.angular2.codeInsight.attributes.Angular2AttributeValueProvider"/>
    <colorSettingsPage implementation="org.angular2.lang.html.highlighting.Angular2ColorsAndFontsPage"/>
    <xml.xmlSuppressionProvider implementation="org.angular2.inspections.Angular2HtmlSuppressionProvider" order="first"/>
    <html.embeddedContentSupport implementation="org.angular2.lang.html.lexer.Angular2HtmlEmbeddedContentSupport"/>

    <javascript.webTypes enableByDefault="true" source="web-types/angular.web-types.json"/>
    <javascript.webTypes enableByDefault="true" source="web-types/hammerjs.web-types.json"/>
    <javascript.web.additionalContextProvider implementation="org.angular2.web.Angular2WebSymbolsAdditionalContextProvider"/>
    <javascript.web.scopeProvider implementation="org.angular2.web.Angular2WebSymbolsScope$Provider"/>
    <javascript.web.codeCompletionItemCustomizer implementation="org.angular2.web.Angular2CompletionItemCustomizer"/>

    <!-- Angular 2 SVG contributions -->
    <lang.parserDefinition language="Angular2Svg" implementationClass="org.angular2.lang.svg.parser.Angular2SvgParserDefinition"/>
    <fileType name="Angular2Svg" implementationClass="org.angular2.lang.svg.Angular2SvgFileType" fieldName="INSTANCE"
              language="Angular2Svg"/>
    <!--suppress PluginXmlValidity -->
    <quoteHandler className="com.intellij.codeInsight.editorActions.HtmlQuoteHandler" fileType="Angular2Svg"/>

    <!-- Angular 2 Expression Language contributions -->
    <lang.syntaxHighlighter language="Angular2"
                            implementationClass="org.angular2.lang.expr.highlighting.Angular2SyntaxHighlighter"/>
    <codeInsight.template.postfixTemplateProvider language="Angular2"
                                                  implementationClass="com.intellij.codeInsight.template.postfix.templates.EmptyPostfixTemplateProvider"/>
    <lang.parserDefinition language="Angular2" implementationClass="org.angular2.lang.expr.parser.Angular2ParserDefinition"/>
    <stubElementTypeHolder class="org.angular2.lang.expr.parser.Angular2StubElementTypes" externalIdPrefix="NG:"/>
    <completion.contributor language="any" implementationClass="org.angular2.codeInsight.Angular2CompletionContributor"
                            id="Angular2CompletionContributor"
                            order="before JSPatternBasedCompletionContributor, before JSCompletionContributor, before xmlNonFirst, before cssClassOrIdReferenceCompletionContributor"/>
    <lang.braceMatcher language="Angular2" implementationClass="com.intellij.lang.javascript.highlighting.JSBraceMatcher"/>
    <annotator language="Angular2" implementationClass="com.intellij.lang.javascript.validation.JSAnnotator"/>
    <implicitUsageProvider implementation="org.angular2.codeInsight.refs.Angular2ImplicitUsageProvider"/>
    <renamePsiElementProcessor implementation="org.angular2.refactoring.Angular2PipeRenameProcessor" order="first"/>
    <codeInsight.parameterInfo language="Angular2" implementationClass="com.intellij.lang.typescript.hint.TypeScriptParameterInfoHandler"/>
    <codeInsight.parameterNameHints language="Angular2Html"
                                    implementationClass="org.angular2.editor.Angular2InlayParameterHintsProvider"/>

    <!-- Angular2 metadata JSON contributions -->
    <stubElementTypeHolder class="org.angular2.entities.metadata.Angular2MetadataElementTypes" externalIdPrefix="METADATA_JSON:"/>
    <stubIndex implementation="org.angular2.index.Angular2MetadataPipeIndex"/>
    <stubIndex implementation="org.angular2.index.Angular2MetadataClassNameIndex"/>
    <stubIndex implementation="org.angular2.index.Angular2MetadataDirectiveIndex"/>
    <stubIndex implementation="org.angular2.index.Angular2MetadataNodeModuleIndex"/>
    <stubIndex implementation="org.angular2.index.Angular2MetadataFunctionIndex"/>
    <stubIndex implementation="org.angular2.index.Angular2MetadataModuleIndex"/>
    <fileType name="Angular Metadata JSON" implementationClass="org.angular2.entities.metadata.Angular2MetadataFileType"
              fieldName="INSTANCE"/>
    <filetype.stubBuilder filetype="Angular Metadata JSON" implementationClass="org.angular2.lang.metadata.MetadataJsonStubBuilder"/>
    <fileType.fileViewProviderFactory filetype="Angular Metadata JSON"
                                      implementationClass="org.angular2.lang.metadata.MetadataJsonFileViewProviderFactory"/>
    <lang.elementManipulator forClass="org.angular2.lang.html.psi.Angular2HtmlNgContentSelector"
                             implementationClass="org.angular2.lang.html.psi.impl.Angular2HtmlNgContentSelectorManipulator"/>
    <notificationGroup id="Angular CLI" displayType="BALLOON" isLogByDefault="false" icon="AngularJSIcons.Angular2"
                       bundle="messages.Angular2Bundle"
                       key="angular.description.angular-cli"/>
  </extensions>

  <extensions defaultExtensionNs="JavaScript">
    <intentionAndInspectionFilter language="AngularJS" implementationClass="org.angularjs.codeInsight.AngularJSInspectionFilter"/>
    <frameworkIndexingHandler implementation="org.angularjs.index.AngularJSIndexingHandler" version="66"/>
    <dialectSpecificHandlersFactory language="AngularJS" implementationClass="org.angularjs.codeInsight.AngularJSSpecificHandlersFactory"/>
    <analysisHandlersFactory language="AngularJS" implementationClass="org.angularjs.inspections.AngularJSAnalysisHandlersFactory"/>

    <!-- Angular2 HTML language contributions -->
    <dialectSpecificHandlersFactory language="Angular2Html" implementationClass="org.angular2.codeInsight.Angular2SpecificHandlersFactory"/>

    <!-- Angular 2 Expression language contributions -->
    <frameworkIndexingHandler implementation="org.angular2.index.Angular2IndexingHandler" version="14"/>
    <frameworkSpecificHandler language="" implementationClass="org.angular2.lang.expr.Angular2JSFrameworkSpecificHandler" />
    <elementScopeProvider implementation="org.angular2.codeInsight.Angular2ResolveScopeProvider"/>
    <dialectSpecificHandlersFactory language="Angular2" implementationClass="org.angular2.codeInsight.Angular2SpecificHandlersFactory"/>
    <analysisHandlersFactory language="Angular2" implementationClass="org.angular2.inspections.Angular2AnalysisHandlersFactory"/>
    <inheritedLanguagesConfigurableProvider language="Angular2"
                                            implementationClass="org.angular2.codeInsight.Angular2LanguageConfigurableProvider"/>

    <!-- Angular2 metadata JSON contributions -->
    <nodeModulesIndexableFileNamesProvider implementation="org.angular2.index.Angular2IndexableFileNamesProvider"/>
  </extensions>

  <extensions defaultExtensionNs="org.angular2">
    <templateScopesProvider implementation="org.angular2.codeInsight.template.Angular2StandardSymbolsScopesProvider"
                            id="standardSymbols"/>
    <templateScopesProvider implementation="org.angular2.codeInsight.template.Angular2TemplateElementsScopeProvider"
                            id="templateElements" order="after standardSymbols"/>
    <templateScopesProvider implementation="org.angular2.codeInsight.template.Angular2ComponentScopeProvider"
                            id="component" order="after templateElements"/>
  </extensions>

  <actions resource-bundle="messages.Angular2Bundle">
    <action class="org.angular2.cli.actions.AngularCliGenerateAction" id="angularCliGenerate"
            icon="/icons/angular2.svg">
      <add-to-group group-id="NewGroup" anchor="after" relative-to-action="NewDir"/>
    </action>
    <action class="org.angular2.cli.actions.AngularCliAddDependencyAction" id="angularCliAdd"
            icon="/icons/angular2.svg">
      <add-to-group group-id="NewGroup" anchor="after" relative-to-action="NewDir"/>
    </action>
    <action id="Angular2ExtractComponentAction"
            icon="/icons/angular2.svg"
            class="org.angular2.refactoring.extractComponent.Angular2ExtractComponentAction">
      <add-to-group group-id="IntroduceActionsGroup"/>
    </action>
  </actions>

  <applicationListeners>
    <listener class="org.angular2.cli.config.AngularConfigFileListener" topic="com.intellij.openapi.vfs.newvfs.BulkFileListener"/>
  </applicationListeners>
</idea-plugin>
