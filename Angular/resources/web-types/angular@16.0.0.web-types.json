{
  "$schema": "../../../../community/platform/webSymbols/web-types-gen/resources/web-types.json",
  "name": "@angular/core",
  "framework": "angular",
  "version": "16.0.0",
  "description-markup": "markdown",
  "default-icon": "icons/angular2.svg",
  "contexts-config": {
    "angular-version": {
      "V_16": {
        "enable-when": {
          "node-packages": [
            "@angular/core"
          ]
        }
      }
    }
  },
  "contributions": {
    "html": {
      "attributes": [
        {
          "name": "ngCspNonce",
          "doc-url": "https://angular.dev/best-practices/security#content-security-policy",
          "description": "Use the ngCspNonce attribute on the root application element as `<app ngCspNonce=\"randomNonceGoesHere\"></app>`. The attribute should be used if you have access to server-side templating that can add the nonce both to the header and the index.html when constructing the response.",
          "value": {
            "required": true,
            "kind": "plain"
          }
        },
        {
          "name": "ngSkipHydration",
          "doc-url": "https://angular.dev/guide/hydration#how-to-skip-hydration-for-particular-components",
          "description": "You can add the `ngSkipHydration` attribute to a component's tag in order to skip hydrating the entire component. This is useful for component, which may not work properly with hydration enabled due to issues, like [Direct DOM Manipulation](https://angular.dev/guide/hydration#direct-dom-manipulation).",
          "value": {
            "kind": "no-value"
          }
        }
      ]
    }
  }
}