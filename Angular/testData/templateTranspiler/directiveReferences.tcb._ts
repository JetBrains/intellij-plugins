/* Angular type checking code */
/* Imports */
import * as _i1 from "@angular/material/input";
import * as _i2 from "@angular/forms";
import * as _i3 from "@angular/material/datepicker";
/* Directives */
const _ctor1: <D = any>(init: Pick<_i3.MatDatepicker<D>, "calendarHeaderComponent" | "startAt" | "startView" | "color" | "xPosition" | "yPosition" | "dateClass" | "panelClass"> & {
touchUi: typeof _i3.MatDatepicker.ngAcceptInputType_touchUi;
disabled: typeof _i3.MatDatepicker.ngAcceptInputType_disabled;
restoreFocus: typeof _i3.MatDatepicker.ngAcceptInputType_restoreFocus;
opened: typeof _i3.MatDatepicker.ngAcceptInputType_opened;
}) => _i3.MatDatepicker<D> = null!;
const _ctor2: <D = any>(init: Pick<_i3.MatDatepickerInput<D>, "matDatepicker" | "min" | "max" | "dateFilter" | "value"> & {
disabled: typeof _i3.MatDatepickerInput.ngAcceptInputType_disabled;
}) => _i3.MatDatepickerInput<D> = null!;
const _ctor3: <D = any>(init: Pick<_i3.MatDatepickerToggle<D>, "datepicker" | "tabIndex" | "ariaLabel" | "disableRipple"> & {
disabled: typeof _i3.MatDatepickerToggle.ngAcceptInputType_disabled;
}) => _i3.MatDatepickerToggle<D> = null!;

/* TCB for directiveReferences.ts */

function _tcb1(this: DatepickerViewsSelectionExample) {
var _t1 = document.createElement("mat-form-field");
var _t2 = null! as _i1.MatFormField;
var _t3 = document.createElement("input");
var _t4 = null! as _i2.DefaultValueAccessor;
var _t5 = null! as _i2.FormControlDirective;
_t5.form = this.date;
var _t8 = _ctor1({"startView": "multi-year", "panelClass": "example-month-picker", "calendarHeaderComponent": 0 as any, "startAt": 0 as any, "color": 0 as any, "touchUi": 0 as any, "disabled": 0 as any, "xPosition": 0 as any, "yPosition": 0 as any, "restoreFocus": 0 as any, "dateClass": 0 as any, "opened": 0 as any});
var _t7 = _t8;
var _t6 = _ctor2({"matDatepicker": _t7, "max": this.my, "min": 0 as any, "dateFilter": 0 as any, "value": 0 as any, "disabled": 0 as any});
_t6.matDatepicker = _t7;
_t6.max = this.my;
var _t9 = null! as _i1.MatInput;
_t9.placeholder = "Month and Year";
var _t10 = null! as _i2.NgControlStatus;
var _t11 = document.createElement("mat-datepicker-toggle");
var _t12 = _ctor3({"datepicker": _t7, "tabIndex": 0 as any, "ariaLabel": 0 as any, "disabled": 0 as any, "disableRipple": 0 as any});
_t12.datepicker = _t7;
var _t13 = null! as _i1.MatSuffix;
var _t14 = document.createElement("mat-datepicker");
_t8.startView = "multi-year";
_t8.panelClass = "example-month-picker";
_t8["monthSelected"].subscribe(($event): any => {
this.setMonthAndYear($event, _t7);
});
_t8["yearSelected"].subscribe(($event): any => {
this.acceptBoolean(_t7);
});
var _t15 = document.createElement("mat-datepicker");
var _t16 = _ctor1({"startAt": 12, "startView": "multi-year", "panelClass": "example-month-picker", "calendarHeaderComponent": 0 as any, "color": 0 as any, "touchUi": 0 as any, "disabled": 0 as any, "xPosition": 0 as any, "yPosition": 0 as any, "restoreFocus": 0 as any, "dateClass": 0 as any, "opened": 0 as any});
_t16.startAt = 12;
_t16.startView = "multi-year";
_t16.panelClass = "example-month-picker";
var _t17 = _t16;
_t16["monthSelected"].subscribe(($event): any => {
this.setMonthAndYear($event, _t17);
});
_t16["yearSelected"].subscribe(($event): any => {
this.acceptBoolean(_t17);
});
}
