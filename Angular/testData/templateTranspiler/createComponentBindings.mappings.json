[
  {
    "file-name": "createComponentBindings.ts",
    "mappings": [
      "«hostInput» [1381] => «input» [1596]} (no types)",
      "«hostInput» [1381] => «_t1.input» [1592]} (no types)",
      "«value» [1461] => «value» [1619]} (no types)",
      "«value» [1461] => «_t1.value[_i1.ɵINPUT_SIGNAL_BRAND_WRITE_TYPE]» [1615]} (no types)",
      "«value» [1038] => «value» [1725]} (no types)",
      "«value» [1038] => «_t2.value[_i1.ɵINPUT_SIGNAL_BRAND_WRITE_TYPE]» [1721]} (no types)",
      "«dirInput» [1076] => «input» [1807]} (no types)",
      "«dirInput» [1076] => «_t2.input» [1803]} (no types)",
      "«the-event» [1195] => «[\"event\"]» [1838]} (no types)",
      "«the-event» [1195] => «$event» [1872]} (no types)",
      "«import {\n  Component,\n  createComponent,\n  Directive,\n  EnvironmentInjector, EventEmitter, Input,\n  inputBinding,\n  model, Output, outputBinding,\n  signal,\n  twoWayBinding\n} from '@angular/core';\nimport {TestBed} from '@angular/core/testing';\n\n@Component({\n  selector: 'app-root',\n  template: » [0] => «import {\n  Component,\n  createComponent,\n  Directive,\n  EnvironmentInjector, EventEmitter, Input,\n  inputBinding,\n  model, Output, outputBinding,\n  signal,\n  twoWayBinding\n} from '@angular/core';\nimport {TestBed} from '@angular/core/testing';\n\n@Component({\n  selector: 'app-root',\n  template: » [0]}",
      "«,\n})\nexport class Comp {\n  value = model(12);\n\n  @Input(\"hostInput\")\n  input!: string;\n\n  @Output()\n  event = new EventEmitter<{value: number}>();\n}\n\n@Directive({\n  selector: '[foo]'\n})\nexport class Dir {\n  value = model(12);\n\n  @Input(\"dirInput\")\n  input!: string;\n\n  @Output(\"the-event\")\n  event = new EventEmitter<{value: number}>();\n}\n\nconst events: {value: number}[] = [];\nconst value = signal('initial');\nlet dirValue = 'initial';\nconst hostElement = document.createElement('div');\nconst environmentInjector = TestBed.inject(EnvironmentInjector);\n\nfunction createTheComponent() {\n  const ref = createComponent(Comp, {\n    hostElement,\n    environmentInjector,\n    directives: [{\n      type: Dir,\n      bindings: [\n        twoWayBinding('» [295] => «,\n})\nexport class Comp {\n  value = model(12);\n\n  @Input(\"hostInput\")\n  input!: string;\n\n  @Output()\n  event = new EventEmitter<{value: number}>();\n}\n\n@Directive({\n  selector: '[foo]'\n})\nexport class Dir {\n  value = model(12);\n\n  @Input(\"dirInput\")\n  input!: string;\n\n  @Output(\"the-event\")\n  event = new EventEmitter<{value: number}>();\n}\n\nconst events: {value: number}[] = [];\nconst value = signal('initial');\nlet dirValue = 'initial';\nconst hostElement = document.createElement('div');\nconst environmentInjector = TestBed.inject(EnvironmentInjector);\n\nfunction createTheComponent() {\n  const ref = createComponent(Comp, {\n    hostElement,\n    environmentInjector,\n    directives: [{\n      type: Dir,\n      bindings: [\n        twoWayBinding('» [295]}",
      "«', value),\n        inputBinding('» [1043] => «', value),\n        inputBinding('» [1043]}",
      "«', () => dirValue),\n        inputBinding('» [1084] => «', () => dirValue),\n        inputBinding('» [1084]}",
      "«', () => dirValue),\n        outputBinding<{ value: string }>('» [1133] => «', () => dirValue),\n        outputBinding<{ value: string }>('» [1133]}",
      "«', (event) => events.push(event)),\n        outputBinding<{ value: number }>('» [1204] => «', (event) => events.push(event)),\n        outputBinding<{ value: number }>('» [1204]}",
      "«', (event) => events.push(event)),\n      ],\n    },\n    ],\n    bindings: [\n      inputBinding('» [1287] => «', (event) => events.push(event)),\n      ],\n    },\n    ],\n    bindings: [\n      inputBinding('» [1287]}",
      "«', value),\n      inputBinding('» [1390] => «', value),\n      inputBinding('» [1390]}",
      "«', value),\n      twoWayBinding('» [1429] => «', value),\n      twoWayBinding('» [1429]}",
      "«', value),\n    ],\n  });» [1466] => «', value),\n    ],\n  });» [1466]}",
      "«\n  return ref\n}\n\n» [1489] => «\n  return ref\n}\n\n» [1915]}"
    ]
  }
]
