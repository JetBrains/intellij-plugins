<!--
  ~ Copyright (c) 2007-2009, Osmorc Development Team
  ~ All rights reserved.
  ~
  ~ Redistribution and use in source and binary forms, with or without modification,
  ~ are permitted provided that the following conditions are met:
  ~     * Redistributions of source code must retain the above copyright notice, this list
  ~       of conditions and the following disclaimer.
  ~     * Redistributions in binary form must reproduce the above copyright notice, this
  ~       list of conditions and the following disclaimer in the documentation and/or other
  ~       materials provided with the distribution.
  ~     * Neither the name of 'Osmorc Development Team' nor the names of its contributors may be
  ~       used to endorse or promote products derived from this software without specific
  ~       prior written permission.
  ~ THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY
  ~ EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  ~ MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL
  ~ THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
  ~ SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT
  ~ OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  ~ HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
  ~ TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  ~ EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  -->

<idea-plugin url="http://osmorc.org" version="2">
    <id>Osmorc</id>
    <name>Osmorc</name>
    <description>
        <![CDATA[
      <p>This plugin adds support for the development of OSGI-based applications to IDEA<p/>
    ]]>
    </description>
    <change-notes>
        <![CDATA[
        <b>Version 1.4.2</b>
        <ul>
          <li>Compatible with IDEA 11.1</li>
        </ul>
        <b>Version 1.4.1</b>
         <ul>
            <li> Greatly improved Maven integration:
              <ul>
                <li>Added support for Embed-Dependency</li>
                <li>Added support for {maven-dependencies} placeholder</li>
                <li>Added support for Include-Resources</li>
                <li>Added support for {maven-resources} placeholder</li>
                <li>OSGi facets can now be excluded from Maven synchronization after the initial import</li>
              </ul>
            </li>
            <li> Fixed an issue preventing bnd-based projects from being packaged correctly.</li>
        </ul>
                ]]>
    </change-notes>
    <version>1.4.2</version>
    <vendor url="http://osmorc.org" email="info@osmorc.org">Osmorc Development Team</vendor>
    <idea-version since-build="117.0" until-build="117.9999"/>
    <category>Framework integration</category>


    <depends optional="true" config-file="maven-support.xml">org.jetbrains.idea.maven</depends>

    <project-components>
        <component>
            <implementation-class>org.osmorc.OsmorcProjectComponent</implementation-class>
        </component>
        <component>
            <implementation-class>org.osmorc.ModuleChangeHandler</implementation-class>
        </component>
    </project-components>

    <module-components>
        <component>
            <implementation-class>org.osmorc.OsmorcModuleComponent</implementation-class>
        </component>
    </module-components>

    <!--
    <helpset file="OsmorcHelp.jar" path="/OsmorcHelp.hs"/>
    -->

    <extensionPoints>
        <extensionPoint name="frameworkIntegrator" interface="org.osmorc.frameworkintegration.FrameworkIntegrator"/>
        <extensionPoint name="headerParserProviderRepository"
                        interface="org.osmorc.manifest.lang.headerparser.HeaderParserProviderRepository"/>
        <extensionPoint name="obr" interface="org.osmorc.obrimport.Obr"/>
        <extensionPoint name="moduleChangeListener" interface="org.osmorc.ModuleChangeListener"/>
    </extensionPoints>

    <extensions defaultExtensionNs="com.intellij">
        <errorHandler implementation="com.intellij.diagnostic.ITNReporter"/>

        <!-- ##### Application Services ##### -->
        <!-- Applications settings and application settings editors -->
        <applicationService serviceInterface="org.osmorc.settings.ApplicationSettings"
                            serviceImplementation="org.osmorc.settings.ApplicationSettings"/>

        <!-- Framework integration -->
        <applicationService serviceInterface="org.osmorc.frameworkintegration.FrameworkIntegratorRegistry"
                            serviceImplementation="org.osmorc.frameworkintegration.FrameworkIntegratorRegistry"/>
        <applicationService
                serviceInterface="org.osmorc.frameworkintegration.impl.equinox.EquinoxFrameworkInstanceManager"
                serviceImplementation="org.osmorc.frameworkintegration.impl.equinox.EquinoxFrameworkInstanceManager"/>
        <applicationService
                serviceInterface="org.osmorc.frameworkintegration.impl.knopflerfish.KnopflerfishFrameworkInstanceManager"
                serviceImplementation="org.osmorc.frameworkintegration.impl.knopflerfish.KnopflerfishFrameworkInstanceManager"/>
        <applicationService
                serviceInterface="org.osmorc.frameworkintegration.impl.felix.FelixFrameworkInstanceManager"
                serviceImplementation="org.osmorc.frameworkintegration.impl.felix.FelixFrameworkInstanceManager"/>
        <applicationService
                serviceInterface="org.osmorc.frameworkintegration.impl.concierge.ConciergeFrameworkInstanceManager"
                serviceImplementation="org.osmorc.frameworkintegration.impl.concierge.ConciergeFrameworkInstanceManager"/>

        <!-- Manifest header parsing and annotation -->
        <applicationService serviceInterface="org.osmorc.manifest.lang.headerparser.HeaderParserRepository"
                            serviceImplementation="org.osmorc.manifest.lang.headerparser.HeaderParserRepository"/>
        <applicationService serviceInterface="org.osmorc.manifest.lang.headerparser.HeaderAnnotator"
                            serviceImplementation="org.osmorc.manifest.lang.headerparser.HeaderAnnotator"/>
        <applicationService serviceInterface="org.osmorc.manifest.lang.headerparser.impl.BundleSymbolicNameParser"
                            serviceImplementation="org.osmorc.manifest.lang.headerparser.impl.BundleSymbolicNameParser"/>
        <applicationService serviceInterface="org.osmorc.manifest.lang.headerparser.impl.BundleVersionParser"
                            serviceImplementation="org.osmorc.manifest.lang.headerparser.impl.BundleVersionParser"/>
        <applicationService serviceInterface="org.osmorc.manifest.lang.headerparser.impl.ExportPackageParser"
                            serviceImplementation="org.osmorc.manifest.lang.headerparser.impl.ExportPackageParser"/>
        <applicationService serviceInterface="org.osmorc.manifest.lang.headerparser.impl.ImportPackageParser"
                            serviceImplementation="org.osmorc.manifest.lang.headerparser.impl.ImportPackageParser"/>
        <applicationService serviceInterface="org.osmorc.manifest.lang.headerparser.impl.RequireBundleParser"
                            serviceImplementation="org.osmorc.manifest.lang.headerparser.impl.RequireBundleParser"/>
        <applicationService serviceInterface="org.osmorc.manifest.lang.headerparser.impl.BundleActivatorParser"
                            serviceImplementation="org.osmorc.manifest.lang.headerparser.impl.BundleActivatorParser"/>
        <applicationService serviceInterface="org.osmorc.manifest.lang.headerparser.impl.GenericComplexHeaderParser"
                            serviceImplementation="org.osmorc.manifest.lang.headerparser.impl.GenericComplexHeaderParser"/>

        <!-- Other application services -->
        <applicationService serviceInterface="org.osmorc.facet.OsmorcFacetUtil"
                            serviceImplementation="org.osmorc.facet.impl.OsmorcFacetUtilImpl"/>
        <applicationService serviceInterface="org.osmorc.obrimport.ObrProvider"
                            serviceImplementation="org.osmorc.obrimport.ObrProvider"/>

        <!-- Module services -->
        <moduleService serviceInterface="org.osmorc.manifest.ManifestHolder"
                       serviceImplementation="org.osmorc.manifest.impl.ModuleManifestHolderImpl"/>
        <moduleService serviceInterface="org.osmorc.AdditionalJARContentsWatcherManager"
                       serviceImplementation="org.osmorc.impl.AdditionalJARContentsWatcherManagerImpl"/>
        <moduleService serviceInterface="org.osmorc.ModuleDependencySynchronizer"
                       serviceImplementation="org.osmorc.ModuleDependencySynchronizer"/>
        <!-- Project services -->
        <!-- Project settings and editors -->
        <projectService serviceInterface="org.osmorc.settings.ProjectSettings"
                        serviceImplementation="org.osmorc.settings.ProjectSettings"/>

        <!-- Other project services -->
        <projectService serviceInterface="org.osmorc.BundleManager"
                        serviceImplementation="org.osmorc.impl.MyBundleManager"/>
        <projectService serviceInterface="org.osmorc.manifest.ManifestHolderRegistry"
                        serviceImplementation="org.osmorc.manifest.impl.ManifestHolderRegistryImpl"/>
        <projectService serviceInterface="org.osmorc.frameworkintegration.FrameworkInstanceLibraryManager"
                        serviceImplementation="org.osmorc.frameworkintegration.FrameworkInstanceLibraryManager"/>

        <!-- IDEA extensions -->
        <colorSettingsPage implementation="org.osmorc.manifest.lang.ManifestColorsAndFontsPage"/>
        <errorHandler implementation="com.intellij.diagnostic.ITNReporter"/>
        <lang.parserDefinition language="Manifest"
                               implementationClass="org.osmorc.manifest.lang.ManifestParserDefinition"/>
        <completion.contributor language="Manifest"
                                implementationClass="org.osmorc.manifest.ManifestCompletionContributor"/>
        <syntaxHighlighter key="Manifest" factoryClass="org.osmorc.manifest.lang.ManifestSyntaxHighlighterProvider"/>
        <annotator language="Manifest" implementationClass="org.osmorc.manifest.lang.headerparser.HeaderAnnotator"/>
        <annotator language="Manifest" implementationClass="org.osmorc.manifest.lang.ManifestHighlightingAnnotator"/>
        <lang.elementManipulator forClass="org.osmorc.manifest.lang.psi.HeaderValuePart"
                                 implementationClass="org.osmorc.manifest.lang.psi.HeaderValuePartManipulator"/>
        <lang.ast.factory language="Manifest"
                          implementationClass="org.osmorc.manifest.lang.psi.impl.ManifestASTFactory"/>
        <configurationType implementation="org.osmorc.run.OsgiConfigurationType"/>

        <project.converterProvider
                implementation="org.osmorc.frameworkintegration.impl.equinox.EquinoxRunConfigurationConverterProvider"/>

      <localInspection shortName="osmorcMisspelledHeaderName" displayName="Unknown or Misspelled Header Name" groupName="OSGi"
                       enabledByDefault="true" level="WARNING" implementationClass="org.osmorc.inspection.MisspelledHeaderNameInspection"/>
      <localInspection shortName="osmorcUnregisteredActivator" displayName="Bundle Activator not registered" groupName="OSGi"
                       enabledByDefault="true" level="ERROR" implementationClass="org.osmorc.inspection.UnregisteredActivatorInspection"/>
      <localInspection shortName="osmorcMissingFinalNewline" displayName="Missing Final New Line" groupName="OSGi" enabledByDefault="true"
                       level="ERROR" implementationClass="org.osmorc.inspection.MissingFinalNewlineInspection"/>
      <localInspection shortName="osmorcClassInDefaultPackage" displayName="Class is in default package" groupName="OSGi"
                       enabledByDefault="true" level="ERROR" implementationClass="org.osmorc.inspection.ClassInDefaultPackageInspection"/>
      <!--<localInspection shortName="osmorcClassUnavailable" displayName="Class not available" groupName="OSGi"-->
                       <!--enabledByDefault="true" level="ERROR" implementationClass="org.osmorc.inspection.ClassUnavailableInspection"/>-->

      <facetType implementation="org.osmorc.facet.OsmorcFacetType"/>
        <framework.detector implementation="org.osmorc.facet.OsmorcFrameworkDetector"/>
        <fileTypeFactory implementation="org.osmorc.manifest.ManifestFileTypeFactory"/>
        <compiler implementation="org.osmorc.make.BundleCompiler"/>
        <refactoring.elementListenerProvider implementation="org.osmorc.facet.OsmorcFacetRefactoringListenerProvider"/>
<!--        <programRunner implementation="org.osmorc.run.OsgiDebuggerRunner"/> -->
        <projectConfigurable instance="org.osmorc.settings.ProjectSettingsEditor"/>
        <applicationConfigurable instance="org.osmorc.settings.ApplicationSettingsEditor"/>
      <editorNotificationProvider implementation="org.osmorc.ManifestChangeWatcher"/>
      <editorNotificationProvider implementation="org.osmorc.BundleIndexModificationWatcher"/>
    </extensions>


    <extensions defaultExtensionNs="Osmorc">
        <frameworkIntegrator implementation="org.osmorc.frameworkintegration.impl.equinox.EquinoxIntegrator"/>
        <frameworkIntegrator
                implementation="org.osmorc.frameworkintegration.impl.knopflerfish.KnopflerfishIntegrator"/>
        <frameworkIntegrator implementation="org.osmorc.frameworkintegration.impl.felix.FelixIntegrator"/>
        <frameworkIntegrator implementation="org.osmorc.frameworkintegration.impl.concierge.ConciergeIntegrator"/>
        <headerParserProviderRepository
                implementation="org.osmorc.manifest.lang.headerparser.impl.StandardManifestHeaderParserProviderRepository"/>
        <headerParserProviderRepository
                implementation="org.osmorc.manifest.lang.headerparser.impl.OSGiManifestHeaderProviderRepository"/>
        <headerParserProviderRepository
                implementation="org.osmorc.manifest.lang.headerparser.impl.EquinoxHeaderProviderRepository"/>
        <headerParserProviderRepository
                implementation="org.osmorc.manifest.lang.headerparser.impl.SpringDMHeaderProviderRepository"/>
        <headerParserProviderRepository
                implementation="org.osmorc.manifest.lang.headerparser.impl.BndHeaderProviderRepository"/>

        <!-- Known bundle repositories -->
        <obr implementation="org.osmorc.obrimport.springsource.SpringSourceObr"/>

        <moduleChangeListener implementation="org.osmorc.run.OsgiRunConfigurationModuleChangeListener"/>
    </extensions>

    <actions>
        <group id="osmorc.viewGeneratedManifests" class="org.osmorc.make.ViewGeneratedManifestGroup" popup="true"
               text="View Generated Manifest" description="View the manifest of a recently generated OSGi bundle"
                icon="/org/osmorc/i18n/Osmorc-Icon_16x16.png">
            <add-to-group group-id="ToolsMenu" anchor="last"/>
        </group>
    </actions>
</idea-plugin>
