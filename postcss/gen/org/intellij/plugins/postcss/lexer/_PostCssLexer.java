/* The following code was generated by JFlex 1.7.0 tweaked for IntelliJ platform */

 /* It's an automatically generated code. Do not modify it. */
package org.intellij.plugins.postcss.lexer;
import com.intellij.psi.css.impl.*;
import com.intellij.lexer.*;
import com.intellij.psi.tree.IElementType;
import com.intellij.openapi.util.text.StringUtil;
import org.intellij.plugins.postcss.lexer.PostCssTokenTypes;


/**
 * This class is a scanner generated by 
 * <a href="http://www.jflex.de/">JFlex</a> 1.7.0
 * from the specification file <tt>postcss.flex</tt>
 */
public class _PostCssLexer implements FlexLexer {

  /** This character denotes the end of file */
  public static final int YYEOF = -1;

  /** initial size of the lookahead buffer */
  private static final int ZZ_BUFFERSIZE = 16384;

  /** lexical states */
  public static final int YYINITIAL = 0;
  public static final int CSS_URI = 2;
  public static final int CSS_FUNCTION = 4;
  public static final int CSS_FUNCTION_MINUS_N = 6;
  public static final int CSS_COMMENT = 8;

  /**
   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
   *                  at the beginning of a line
   * l is of the form l = 2*k, k a non negative integer
   */
  private static final int ZZ_LEXSTATE[] = { 
     0,  0,  1,  1,  2,  2,  3,  3,  4, 4
  };

  /** 
   * Translates characters to character classes
   * Chosen bits are [9, 6, 6]
   * Total runtime size is 1568 bytes
   */
  public static int ZZ_CMAP(int ch) {
    return ZZ_CMAP_A[(ZZ_CMAP_Y[ZZ_CMAP_Z[ch>>12]|((ch>>6)&0x3f)]<<6)|(ch&0x3f)];
  }

  /* The ZZ_CMAP_Z table has 272 entries */
  static final char ZZ_CMAP_Z[] = zzUnpackCMap(
    "\1\0\1\100\1\200\u010d\100");

  /* The ZZ_CMAP_Y table has 192 entries */
  static final char ZZ_CMAP_Y[] = zzUnpackCMap(
    "\1\0\1\1\1\2\175\3\1\4\77\3");

  /* The ZZ_CMAP_A table has 320 entries */
  static final char ZZ_CMAP_A[] = zzUnpackCMap(
    "\11\3\1\2\1\17\1\112\1\21\1\20\22\3\1\12\1\34\1\22\1\25\1\27\1\100\1\114\1"+
    "\23\1\35\1\13\1\102\1\7\1\77\1\10\1\16\1\32\1\31\10\1\1\33\1\75\1\76\1\107"+
    "\1\106\1\101\1\11\1\64\1\36\1\37\1\40\1\41\1\42\1\4\1\43\1\44\1\45\1\15\1"+
    "\46\1\47\1\50\1\51\1\52\1\53\1\15\1\54\1\55\1\56\1\6\1\60\1\61\1\62\1\63\1"+
    "\14\1\103\1\5\1\104\1\111\1\15\1\24\1\36\1\37\1\40\1\41\1\65\1\4\1\43\1\44"+
    "\1\72\1\15\1\46\1\47\1\50\1\74\1\73\1\67\1\15\1\70\1\71\1\56\1\57\1\60\1\61"+
    "\1\66\1\63\1\14\1\26\1\110\1\30\1\105\1\3\5\0\1\113\242\0\2\113\26\0");

  /** 
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\1\0\1\1\3\0\1\2\1\3\1\4\2\5\1\2"+
    "\1\6\1\7\1\10\1\11\2\12\1\13\1\14\1\5"+
    "\1\15\1\16\1\5\1\17\2\2\1\5\1\2\1\20"+
    "\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30"+
    "\1\31\1\32\1\33\1\34\1\35\3\1\1\36\2\5"+
    "\2\1\1\37\2\0\1\7\1\40\2\41\2\0\1\42"+
    "\1\0\2\43\1\0\1\2\1\0\1\2\1\44\1\3"+
    "\1\0\1\12\1\0\1\45\2\0\1\46\3\0\1\47"+
    "\3\0\1\50\1\51\2\0\1\52\1\2\2\53\2\0"+
    "\15\53\1\2\1\0\1\54\1\55\1\56\1\0\1\57"+
    "\1\60\1\61\1\62\2\1\1\63\2\64\1\0\1\43"+
    "\2\65\1\2\1\66\2\12\2\0\1\2\1\46\2\0"+
    "\1\67\2\0\1\2\30\53\1\2\1\70\1\0\1\71"+
    "\1\1\1\64\1\65\1\0\1\65\1\2\1\72\2\73"+
    "\1\0\1\46\1\0\1\2\30\53\1\2\1\74\2\1"+
    "\3\65\1\2\1\73\1\0\1\2\17\53\1\75\1\76"+
    "\6\53\1\2\2\1\3\65\1\2\1\0\1\2\14\53"+
    "\1\77\3\53\1\100\3\53\1\101\1\53\1\2\1\1"+
    "\1\71\3\65\1\2\1\0\7\53\1\102\5\53\1\103"+
    "\5\53\1\2\1\1\3\65\1\2\1\0\4\53\1\104"+
    "\15\53\1\2\1\1\1\65\1\2\1\0\5\53\1\105"+
    "\3\53\1\106\2\53\1\107\1\53\1\106\1\110\1\2"+
    "\1\1\1\111\1\112\4\53\1\113\2\53\1\114\3\53"+
    "\1\2\7\53\1\115\5\53\1\116\2\53\1\103\2\53"+
    "\1\117\1\53\1\120";

  private static int [] zzUnpackAction() {
    int [] result = new int[380];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /** 
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\115\0\232\0\347\0\u0134\0\u0181\0\u01ce\0\u021b"+
    "\0\u0268\0\u02b5\0\u0302\0\u0268\0\u034f\0\u0268\0\u039c\0\u03e9"+
    "\0\u0436\0\u0483\0\u0268\0\u04d0\0\u0268\0\u051d\0\u056a\0\u0268"+
    "\0\u05b7\0\u0604\0\u0651\0\u069e\0\u0268\0\u0268\0\u0268\0\u0268"+
    "\0\u06eb\0\u0738\0\u0268\0\u0268\0\u0785\0\u0268\0\u07d2\0\u081f"+
    "\0\u086c\0\u0268\0\u08b9\0\u0906\0\u0953\0\u0268\0\u03e9\0\u0436"+
    "\0\u09a0\0\u09ed\0\u0a3a\0\u0a87\0\u0ad4\0\u0268\0\u0268\0\u0268"+
    "\0\u0b21\0\u0b6e\0\u0bbb\0\u0268\0\u039c\0\u0c08\0\u0181\0\u0c55"+
    "\0\u0ca2\0\u0cef\0\u0d3c\0\u0181\0\u039c\0\u0d89\0\u0268\0\u0dd6"+
    "\0\u0e23\0\u0e70\0\u0ebd\0\u0f0a\0\u0f57\0\u0fa4\0\u0ff1\0\u0268"+
    "\0\u103e\0\u108b\0\u10d8\0\u1125\0\u0268\0\u1172\0\u11bf\0\u0268"+
    "\0\u120c\0\u1259\0\u12a6\0\u12f3\0\u1340\0\u138d\0\u13da\0\u1427"+
    "\0\u1474\0\u14c1\0\u150e\0\u155b\0\u15a8\0\u15f5\0\u1642\0\u168f"+
    "\0\u16dc\0\u1729\0\u1776\0\u17c3\0\u0268\0\u0268\0\u0268\0\u1810"+
    "\0\u0268\0\u0268\0\u0268\0\u0268\0\u185d\0\u18aa\0\u0268\0\u18f7"+
    "\0\u0181\0\u1944\0\u0268\0\u1991\0\u19de\0\u1a2b\0\u0268\0\u1a78"+
    "\0\u1ac5\0\u1b12\0\u1b5f\0\u0268\0\u1bac\0\u1bf9\0\u1c46\0\u0268"+
    "\0\u1c93\0\u1ce0\0\u1d2d\0\u1d7a\0\u1dc7\0\u1e14\0\u1e61\0\u1eae"+
    "\0\u1efb\0\u1f48\0\u1f95\0\u1fe2\0\u202f\0\u207c\0\u20c9\0\u2116"+
    "\0\u2163\0\u21b0\0\u21fd\0\u224a\0\u2297\0\u22e4\0\u2331\0\u237e"+
    "\0\u23cb\0\u2418\0\u2465\0\u24b2\0\u0268\0\u24ff\0\u254c\0\u2599"+
    "\0\u0268\0\u25e6\0\u2633\0\u2680\0\u26cd\0\u0268\0\u271a\0\u0e23"+
    "\0\u2767\0\u0268\0\u27b4\0\u2801\0\u284e\0\u289b\0\u28e8\0\u2935"+
    "\0\u2982\0\u29cf\0\u2a1c\0\u2a69\0\u2ab6\0\u2b03\0\u2b50\0\u2b9d"+
    "\0\u2bea\0\u2c37\0\u2c84\0\u2cd1\0\u2d1e\0\u2d6b\0\u2db8\0\u2e05"+
    "\0\u2e52\0\u2e9f\0\u2eec\0\u2f39\0\u2f86\0\u0268\0\u2fd3\0\u3020"+
    "\0\u306d\0\u30ba\0\u3107\0\u3154\0\u0268\0\u31a1\0\u31ee\0\u323b"+
    "\0\u3288\0\u32d5\0\u3322\0\u336f\0\u33bc\0\u3409\0\u3456\0\u34a3"+
    "\0\u34f0\0\u353d\0\u358a\0\u35d7\0\u3624\0\u3671\0\u1259\0\u1259"+
    "\0\u36be\0\u370b\0\u3758\0\u37a5\0\u37f2\0\u383f\0\u388c\0\u38d9"+
    "\0\u3926\0\u3973\0\u39c0\0\u3a0d\0\u3a5a\0\u3aa7\0\u3af4\0\u3b41"+
    "\0\u3b8e\0\u3bdb\0\u3c28\0\u3c75\0\u3cc2\0\u3d0f\0\u3d5c\0\u3da9"+
    "\0\u3df6\0\u3e43\0\u3e90\0\u1259\0\u3edd\0\u3f2a\0\u3f77\0\u1259"+
    "\0\u3fc4\0\u4011\0\u405e\0\u1259\0\u40ab\0\u40f8\0\u4145\0\u08b9"+
    "\0\u4192\0\u41df\0\u422c\0\u4279\0\u42c6\0\u4313\0\u4360\0\u43ad"+
    "\0\u43fa\0\u4447\0\u4494\0\u44e1\0\u1259\0\u452e\0\u457b\0\u45c8"+
    "\0\u4615\0\u4662\0\u46af\0\u46fc\0\u4749\0\u4796\0\u47e3\0\u4830"+
    "\0\u487d\0\u48ca\0\u4917\0\u0268\0\u4964\0\u49b1\0\u49fe\0\u4a4b"+
    "\0\u4a98\0\u4ae5\0\u4b32\0\u1259\0\u4b7f\0\u4bcc\0\u4c19\0\u4c66"+
    "\0\u4cb3\0\u4d00\0\u4d4d\0\u4d9a\0\u4de7\0\u4e34\0\u4e81\0\u4ece"+
    "\0\u4f1b\0\u4f68\0\u4fb5\0\u5002\0\u504f\0\u509c\0\u50e9\0\u5136"+
    "\0\u5183\0\u51d0\0\u521d\0\u1259\0\u526a\0\u52b7\0\u5304\0\u1259"+
    "\0\u5351\0\u539e\0\u1259\0\u53eb\0\u5438\0\u1259\0\u5485\0\u54d2"+
    "\0\u0268\0\u1259\0\u551f\0\u556c\0\u55b9\0\u5606\0\u1259\0\u5653"+
    "\0\u56a0\0\u1259\0\u56ed\0\u573a\0\u5787\0\u57d4\0\u5821\0\u586e"+
    "\0\u58bb\0\u5908\0\u5955\0\u59a2\0\u59ef\0\u0268\0\u5a3c\0\u5a89"+
    "\0\u5ad6\0\u5b23\0\u5b70\0\u1259\0\u5bbd\0\u5c0a\0\u1259\0\u5c57"+
    "\0\u5ca4\0\u1259\0\u5cf1\0\u1259";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[380];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /** 
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\1\6\1\7\1\10\1\11\1\6\1\12\1\13\1\14"+
    "\1\15\1\11\1\10\1\16\2\6\1\17\3\10\1\20"+
    "\1\21\1\11\1\22\1\23\1\24\1\25\1\7\1\26"+
    "\1\7\1\27\1\30\3\6\1\31\15\6\1\32\4\6"+
    "\1\33\1\34\7\6\1\35\1\36\1\37\1\40\1\41"+
    "\1\42\1\43\1\44\1\45\1\46\1\47\1\50\1\51"+
    "\1\11\1\6\1\52\2\53\1\10\1\11\1\53\1\54"+
    "\1\55\3\53\1\10\1\56\3\53\3\10\1\57\1\60"+
    "\3\53\1\61\5\53\1\30\3\53\1\62\15\53\1\55"+
    "\32\53\1\11\2\53\1\63\3\0\1\63\1\64\1\63"+
    "\1\0\1\65\3\0\2\63\20\0\26\63\1\0\10\63"+
    "\16\0\1\63\11\0\1\66\63\0\1\67\20\0\102\70"+
    "\1\71\12\70\2\6\2\0\1\6\1\72\1\6\1\0"+
    "\1\6\3\0\2\6\13\0\1\6\1\0\1\6\1\73"+
    "\1\74\26\6\1\0\10\6\16\0\1\6\2\0\1\7"+
    "\14\0\1\75\12\0\1\7\1\0\1\7\63\0\1\10"+
    "\7\0\1\10\4\0\3\10\211\0\1\6\2\0\13\6"+
    "\3\0\7\6\1\76\1\6\1\77\56\6\2\0\3\6"+
    "\2\0\1\6\1\72\1\6\1\100\1\6\3\0\2\6"+
    "\13\0\1\6\1\0\1\6\1\73\1\74\16\6\1\101"+
    "\7\6\1\0\3\6\1\101\4\6\16\0\1\6\1\0"+
    "\1\6\3\0\1\6\1\102\1\6\1\0\1\103\3\0"+
    "\2\6\20\0\26\6\1\0\7\6\1\104\16\0\1\6"+
    "\2\0\1\105\27\0\1\105\1\0\1\105\61\0\5\20"+
    "\1\106\11\20\3\0\1\107\72\20\5\21\1\110\11\21"+
    "\3\0\1\21\1\107\71\21\2\111\2\0\1\111\1\112"+
    "\1\111\1\0\1\111\3\0\2\111\10\0\1\113\2\0"+
    "\1\111\1\0\1\111\2\0\26\111\1\0\10\111\16\0"+
    "\1\111\1\0\1\114\3\0\1\114\1\115\1\114\1\0"+
    "\1\116\3\0\2\114\10\0\1\113\6\0\1\117\26\114"+
    "\1\0\10\114\11\0\1\120\4\0\1\114\1\0\1\121"+
    "\3\0\1\121\1\122\1\121\1\0\1\123\3\0\2\121"+
    "\14\0\1\124\3\0\26\121\1\0\10\121\5\0\1\125"+
    "\10\0\1\121\3\0\1\126\7\0\1\126\4\0\3\126"+
    "\23\0\1\127\24\0\1\127\13\0\1\130\6\0\2\6"+
    "\2\0\1\6\1\72\1\6\1\0\1\6\3\0\2\6"+
    "\13\0\1\6\1\0\1\6\1\73\1\74\14\6\1\131"+
    "\11\6\1\0\6\6\1\131\1\6\16\0\1\6\1\0"+
    "\2\6\2\0\1\6\1\72\1\6\1\0\1\6\3\0"+
    "\2\6\13\0\1\6\1\0\1\6\1\73\1\74\16\6"+
    "\1\101\7\6\1\0\3\6\1\101\4\6\16\0\1\6"+
    "\1\0\1\132\3\0\1\133\1\134\1\132\1\0\1\135"+
    "\3\0\2\132\20\0\1\132\1\136\1\137\1\140\3\132"+
    "\1\141\1\142\1\143\1\144\1\145\1\132\1\146\1\147"+
    "\1\150\1\151\1\132\1\152\3\132\1\0\2\132\1\146"+
    "\1\147\1\150\1\141\1\132\1\145\16\0\1\132\1\0"+
    "\2\6\2\0\1\6\1\72\1\6\1\0\1\6\3\0"+
    "\2\6\13\0\1\6\1\0\1\6\1\73\1\74\26\6"+
    "\1\0\1\6\1\153\6\6\16\0\1\6\102\0\1\154"+
    "\4\0\1\155\114\0\1\156\114\0\1\157\42\0\1\160"+
    "\51\0\1\161\114\0\1\162\114\0\1\163\2\0\1\164"+
    "\3\0\2\53\2\0\1\53\1\54\4\53\2\0\3\53"+
    "\5\0\11\53\1\0\54\53\1\0\4\53\2\0\1\53"+
    "\1\54\11\53\3\0\70\53\1\0\4\53\2\0\1\53"+
    "\1\54\4\53\2\0\3\53\5\0\11\53\1\0\16\53"+
    "\1\165\13\53\1\165\21\53\1\0\4\53\2\0\1\53"+
    "\1\54\4\53\2\0\3\53\5\0\11\53\1\117\54\53"+
    "\1\0\4\53\2\0\1\53\1\54\4\53\2\0\3\53"+
    "\5\0\11\53\1\0\14\53\1\166\20\53\1\166\16\53"+
    "\1\0\2\53\2\63\2\0\1\63\1\64\1\63\1\0"+
    "\1\63\3\0\2\63\13\0\1\63\1\0\1\63\2\0"+
    "\26\63\1\0\10\63\16\0\1\63\2\0\1\63\2\0"+
    "\13\63\3\0\70\63\2\0\2\63\3\0\1\63\1\64"+
    "\1\63\1\0\1\63\3\0\2\63\20\0\26\63\1\0"+
    "\10\63\16\0\1\63\33\0\1\167\63\0\1\6\2\0"+
    "\13\6\3\0\7\6\1\170\1\6\1\171\56\6\2\0"+
    "\1\6\45\0\1\172\24\0\1\172\22\0\2\6\2\0"+
    "\1\6\1\72\1\6\1\0\1\6\3\0\2\6\13\0"+
    "\1\6\1\173\1\6\1\73\1\74\26\6\1\0\10\6"+
    "\16\0\1\6\2\0\1\174\2\0\1\174\4\0\1\175"+
    "\17\0\1\174\1\0\1\174\2\0\5\174\22\0\1\174"+
    "\27\0\2\6\2\0\1\6\1\72\1\6\1\0\1\6"+
    "\3\0\2\6\13\0\1\6\1\0\1\6\1\73\1\74"+
    "\11\6\1\176\14\6\1\0\10\6\16\0\1\6\2\0"+
    "\1\6\2\0\13\6\3\0\70\6\2\0\3\6\2\0"+
    "\1\6\1\72\1\6\1\0\1\6\3\0\2\6\13\0"+
    "\1\6\1\0\1\6\1\73\1\74\26\6\1\0\10\6"+
    "\4\0\1\177\11\0\1\6\2\0\1\20\2\0\14\20"+
    "\1\200\71\20\2\0\1\20\1\0\1\21\2\0\14\21"+
    "\1\201\71\21\2\0\1\21\2\111\2\0\1\111\1\202"+
    "\1\111\1\0\1\111\3\0\2\111\13\0\1\111\1\0"+
    "\1\111\1\203\1\0\26\111\1\0\10\111\16\0\1\111"+
    "\2\0\1\111\2\0\13\111\3\0\70\111\2\0\1\111"+
    "\30\113\1\204\64\113\2\114\2\0\1\114\1\115\1\114"+
    "\1\0\1\114\3\0\2\114\13\0\1\114\1\0\1\114"+
    "\2\0\26\114\1\0\10\114\16\0\1\114\2\0\1\114"+
    "\2\0\13\114\3\0\70\114\2\0\2\114\3\0\1\114"+
    "\1\115\1\114\1\0\1\114\3\0\2\114\20\0\26\114"+
    "\1\0\10\114\16\0\1\114\1\0\1\205\3\0\1\205"+
    "\1\206\1\205\1\0\1\207\3\0\2\205\20\0\26\205"+
    "\1\0\10\205\16\0\1\205\1\0\2\121\2\0\1\121"+
    "\1\122\1\121\1\0\1\121\3\0\2\121\13\0\1\121"+
    "\1\210\1\121\2\0\26\121\1\0\10\121\16\0\1\121"+
    "\2\0\1\121\2\0\13\121\3\0\70\121\2\0\2\121"+
    "\3\0\1\121\1\122\1\121\1\0\1\121\3\0\2\121"+
    "\20\0\26\121\1\0\10\121\16\0\1\121\1\0\17\124"+
    "\3\0\70\124\2\0\1\124\2\0\1\126\7\0\1\126"+
    "\4\0\3\126\23\0\1\211\24\0\1\211\64\0\1\173"+
    "\5\0\1\212\14\0\1\173\27\0\2\6\2\0\1\6"+
    "\1\72\1\6\1\0\1\6\3\0\2\6\13\0\1\6"+
    "\1\0\1\6\1\73\1\74\12\6\1\213\13\6\1\0"+
    "\10\6\16\0\1\6\1\0\2\132\2\0\1\132\1\134"+
    "\1\132\1\0\1\132\3\0\2\132\13\0\1\132\1\0"+
    "\1\132\2\0\26\132\1\0\10\132\16\0\1\132\1\0"+
    "\2\132\2\0\1\132\1\134\1\132\1\0\1\132\3\0"+
    "\2\132\13\0\1\132\1\0\1\132\2\0\14\132\1\214"+
    "\11\132\1\0\6\132\1\214\1\132\16\0\1\132\2\0"+
    "\1\132\2\0\13\132\3\0\70\132\2\0\2\132\3\0"+
    "\1\132\1\134\1\132\1\0\1\132\3\0\2\132\20\0"+
    "\10\132\1\215\1\132\1\216\1\132\1\217\6\132\1\220"+
    "\2\132\1\0\6\132\1\217\1\132\16\0\1\132\1\0"+
    "\2\132\2\0\1\132\1\134\1\132\1\0\1\132\3\0"+
    "\2\132\13\0\1\132\1\0\1\132\2\0\14\132\1\221"+
    "\11\132\1\0\6\132\1\221\1\132\16\0\1\132\1\0"+
    "\2\132\2\0\1\132\1\134\1\222\1\0\1\132\3\0"+
    "\2\132\13\0\1\132\1\0\1\132\2\0\6\132\1\223"+
    "\5\132\1\224\4\132\1\222\4\132\1\0\6\132\1\224"+
    "\1\132\16\0\1\132\1\0\2\132\2\0\1\132\1\134"+
    "\1\132\1\0\1\132\3\0\2\132\13\0\1\132\1\0"+
    "\1\132\2\0\14\132\1\225\11\132\1\0\6\132\1\225"+
    "\1\132\16\0\1\132\1\0\2\132\2\0\1\132\1\134"+
    "\1\132\1\0\1\132\3\0\2\132\13\0\1\132\1\0"+
    "\1\132\2\0\12\132\1\226\13\132\1\0\10\132\16\0"+
    "\1\132\1\0\2\132\2\0\1\132\1\134\1\132\1\0"+
    "\1\132\3\0\2\132\13\0\1\132\1\0\1\132\2\0"+
    "\4\132\1\227\21\132\1\0\1\227\7\132\16\0\1\132"+
    "\1\0\2\132\2\0\1\132\1\134\1\132\1\0\1\132"+
    "\3\0\2\132\13\0\1\132\1\0\1\132\2\0\4\132"+
    "\1\230\21\132\1\0\1\230\7\132\16\0\1\132\1\0"+
    "\2\132\2\0\1\132\1\134\1\132\1\0\1\132\3\0"+
    "\2\132\13\0\1\132\1\0\1\132\2\0\4\132\1\231"+
    "\21\132\1\0\1\231\7\132\16\0\1\132\1\0\2\132"+
    "\2\0\1\132\1\134\1\132\1\0\1\132\3\0\2\132"+
    "\13\0\1\132\1\0\1\132\2\0\1\232\3\132\1\233"+
    "\21\132\1\0\1\233\7\132\16\0\1\132\1\0\2\132"+
    "\2\0\1\132\1\134\1\132\1\0\1\132\3\0\2\132"+
    "\13\0\1\132\1\0\1\132\2\0\1\234\25\132\1\0"+
    "\10\132\16\0\1\132\1\0\2\132\2\0\1\132\1\134"+
    "\1\132\1\0\1\132\3\0\2\132\13\0\1\132\1\0"+
    "\1\132\2\0\4\132\1\235\2\132\1\236\16\132\1\0"+
    "\1\235\4\132\1\236\2\132\16\0\1\132\1\0\2\132"+
    "\2\0\1\132\1\134\1\237\1\0\1\132\3\0\2\132"+
    "\13\0\1\132\1\0\1\132\2\0\2\132\1\240\16\132"+
    "\1\237\4\132\1\0\10\132\16\0\1\132\1\0\2\132"+
    "\2\0\1\132\1\134\1\132\1\0\1\132\3\0\2\132"+
    "\13\0\1\132\1\0\1\132\2\0\14\132\1\241\11\132"+
    "\1\0\6\132\1\241\1\132\16\0\1\132\1\0\2\132"+
    "\2\0\1\132\1\134\1\132\1\0\1\132\3\0\2\132"+
    "\13\0\1\132\1\0\1\132\2\0\1\242\6\132\1\243"+
    "\16\132\1\0\5\132\1\243\2\132\16\0\1\132\1\0"+
    "\2\6\2\0\1\6\1\72\1\6\1\0\1\6\3\0"+
    "\2\6\13\0\1\6\1\0\1\6\1\73\1\74\26\6"+
    "\1\0\2\6\1\244\5\6\16\0\1\6\102\0\1\245"+
    "\23\0\1\246\104\0\2\53\2\0\1\53\1\54\4\53"+
    "\2\0\3\53\5\0\11\53\1\0\11\53\1\247\42\53"+
    "\1\0\4\53\2\0\1\53\1\54\4\53\2\0\3\53"+
    "\5\0\11\53\1\0\12\53\1\250\41\53\1\0\2\53"+
    "\2\6\2\0\1\6\1\72\1\6\1\0\1\6\3\0"+
    "\2\6\13\0\1\6\1\251\1\6\1\73\1\74\26\6"+
    "\1\0\10\6\16\0\1\6\43\0\1\251\22\0\1\251"+
    "\30\0\1\252\2\0\1\252\3\0\1\253\1\254\17\0"+
    "\1\252\1\0\1\252\2\0\5\252\22\0\1\252\30\0"+
    "\1\254\2\0\1\254\4\0\1\254\17\0\1\254\1\0"+
    "\1\254\2\0\5\254\22\0\1\254\27\0\2\6\2\0"+
    "\1\6\1\72\1\6\1\0\1\255\3\0\2\6\13\0"+
    "\1\6\1\0\1\6\1\73\1\256\26\6\1\0\10\6"+
    "\16\0\1\6\1\0\5\20\1\106\12\20\2\0\1\107"+
    "\72\20\5\21\1\110\12\21\2\0\1\21\1\107\71\21"+
    "\1\0\1\111\2\0\13\111\3\0\7\111\1\257\1\111"+
    "\1\260\56\111\2\0\1\111\45\0\1\261\24\0\1\261"+
    "\22\0\2\205\2\0\1\205\1\206\1\205\1\0\1\205"+
    "\2\0\1\262\2\205\13\0\1\205\1\0\1\205\2\0"+
    "\26\205\1\0\10\205\16\0\1\205\2\0\1\205\2\0"+
    "\13\205\3\0\70\205\2\0\2\205\3\0\1\205\1\206"+
    "\1\205\1\0\1\205\3\0\2\205\20\0\26\205\1\0"+
    "\10\205\16\0\1\205\51\0\1\212\117\0\1\263\13\0"+
    "\1\263\25\0\2\6\2\0\1\6\1\72\1\6\1\0"+
    "\1\6\3\0\2\6\13\0\1\6\1\0\1\6\1\73"+
    "\1\74\1\264\25\6\1\0\10\6\16\0\1\6\1\0"+
    "\2\132\2\0\1\132\1\134\1\132\1\0\1\132\3\0"+
    "\2\132\13\0\1\132\1\0\1\132\2\0\13\132\1\265"+
    "\12\132\1\0\7\132\1\265\16\0\1\132\1\0\2\132"+
    "\2\0\1\132\1\134\1\132\1\0\1\132\3\0\2\132"+
    "\13\0\1\132\1\0\1\132\2\0\6\132\1\266\17\132"+
    "\1\0\10\132\16\0\1\132\1\0\2\132\2\0\1\132"+
    "\1\134\1\132\1\0\1\132\3\0\2\132\13\0\1\132"+
    "\1\0\1\132\2\0\14\132\1\267\2\132\1\217\6\132"+
    "\1\0\4\132\1\217\1\132\1\267\1\132\16\0\1\132"+
    "\1\0\2\132\2\0\1\132\1\134\1\132\1\0\1\270"+
    "\3\0\2\132\13\0\1\132\1\0\1\132\2\0\26\132"+
    "\1\0\10\132\16\0\1\132\1\0\2\132\2\0\1\132"+
    "\1\134\1\132\1\0\1\132\3\0\2\132\13\0\1\132"+
    "\1\0\1\132\2\0\4\132\1\271\21\132\1\0\1\271"+
    "\7\132\16\0\1\132\1\0\2\132\2\0\1\132\1\134"+
    "\1\132\1\0\1\132\3\0\2\132\13\0\1\132\1\0"+
    "\1\132\2\0\20\132\1\272\5\132\1\0\10\132\16\0"+
    "\1\132\1\0\2\132\2\0\1\132\1\134\1\132\1\0"+
    "\1\132\3\0\2\132\13\0\1\132\1\0\1\132\2\0"+
    "\17\132\1\273\6\132\1\0\4\132\1\273\3\132\16\0"+
    "\1\132\1\0\2\132\2\0\1\132\1\134\1\132\1\0"+
    "\1\132\3\0\2\132\13\0\1\132\1\0\1\132\2\0"+
    "\1\274\25\132\1\0\10\132\16\0\1\132\1\0\2\132"+
    "\2\0\1\132\1\134\1\275\1\0\1\132\3\0\2\132"+
    "\13\0\1\132\1\0\1\132\2\0\21\132\1\275\4\132"+
    "\1\0\10\132\16\0\1\132\1\0\2\132\2\0\1\132"+
    "\1\134\1\132\1\0\1\132\3\0\2\132\13\0\1\132"+
    "\1\0\1\132\2\0\2\132\1\276\23\132\1\0\10\132"+
    "\16\0\1\132\1\0\2\132\2\0\1\132\1\134\1\132"+
    "\1\0\1\132\3\0\2\132\13\0\1\132\1\0\1\132"+
    "\2\0\15\132\1\277\10\132\1\0\2\132\1\277\5\132"+
    "\16\0\1\132\1\0\2\132\2\0\1\132\1\134\1\132"+
    "\1\0\1\132\3\0\2\132\13\0\1\132\1\0\1\132"+
    "\2\0\25\132\1\300\1\0\10\132\16\0\1\132\1\0"+
    "\2\132\2\0\1\301\1\134\1\132\1\0\1\132\3\0"+
    "\2\132\13\0\1\132\1\0\1\132\2\0\26\132\1\0"+
    "\10\132\16\0\1\132\1\0\2\132\2\0\1\132\1\134"+
    "\1\132\1\0\1\132\3\0\2\132\13\0\1\132\1\0"+
    "\1\132\2\0\3\132\1\302\22\132\1\0\10\132\16\0"+
    "\1\132\1\0\2\132\2\0\1\132\1\134\1\132\1\0"+
    "\1\132\3\0\2\132\13\0\1\132\1\0\1\132\2\0"+
    "\12\132\1\303\13\132\1\0\10\132\16\0\1\132\1\0"+
    "\2\132\2\0\1\132\1\134\1\132\1\0\1\132\3\0"+
    "\2\132\13\0\1\132\1\0\1\132\2\0\17\132\1\304"+
    "\6\132\1\0\4\132\1\304\3\132\16\0\1\132\1\0"+
    "\2\132\2\0\1\132\1\134\1\132\1\0\1\132\3\0"+
    "\2\132\13\0\1\132\1\0\1\132\2\0\5\132\1\305"+
    "\20\132\1\0\10\132\16\0\1\132\1\0\2\132\2\0"+
    "\1\132\1\134\1\132\1\0\1\132\3\0\2\132\13\0"+
    "\1\132\1\0\1\132\2\0\5\132\1\306\20\132\1\0"+
    "\10\132\16\0\1\132\1\0\2\132\2\0\1\132\1\134"+
    "\1\132\1\0\1\132\3\0\2\132\13\0\1\132\1\0"+
    "\1\132\2\0\5\132\1\307\20\132\1\0\10\132\16\0"+
    "\1\132\1\0\2\132\2\0\1\132\1\134\1\132\1\0"+
    "\1\132\3\0\2\132\13\0\1\132\1\0\1\132\2\0"+
    "\15\132\1\310\10\132\1\0\2\132\1\310\5\132\16\0"+
    "\1\132\1\0\2\132\2\0\1\132\1\134\1\132\1\0"+
    "\1\132\3\0\2\132\13\0\1\132\1\0\1\132\2\0"+
    "\14\132\1\311\11\132\1\0\6\132\1\311\1\132\16\0"+
    "\1\132\1\0\2\132\2\0\1\132\1\134\1\132\1\0"+
    "\1\132\3\0\2\132\13\0\1\132\1\0\1\132\2\0"+
    "\15\132\1\312\10\132\1\0\2\132\1\312\5\132\16\0"+
    "\1\132\1\0\2\132\2\0\1\132\1\134\1\132\1\0"+
    "\1\132\3\0\2\132\13\0\1\132\1\0\1\132\2\0"+
    "\11\132\1\313\14\132\1\0\10\132\16\0\1\132\1\0"+
    "\2\132\2\0\1\132\1\134\1\132\1\0\1\132\3\0"+
    "\2\132\13\0\1\132\1\0\1\132\2\0\4\132\1\314"+
    "\21\132\1\0\1\314\7\132\16\0\1\132\1\0\2\6"+
    "\2\0\1\6\1\72\1\6\1\0\1\6\3\0\2\6"+
    "\13\0\1\6\1\0\1\6\1\73\1\74\26\6\1\0"+
    "\3\6\1\315\4\6\16\0\1\6\11\0\1\316\104\0"+
    "\2\53\2\0\1\53\1\54\2\53\1\317\1\53\2\0"+
    "\3\53\5\0\11\53\1\0\54\53\1\0\4\53\2\0"+
    "\1\53\1\54\4\53\2\0\3\53\5\0\11\53\1\0"+
    "\1\320\53\53\1\0\2\53\1\0\1\321\2\0\1\321"+
    "\3\0\1\253\1\322\17\0\1\321\1\0\1\321\2\0"+
    "\5\321\22\0\1\321\30\0\1\323\2\0\1\323\24\0"+
    "\1\323\1\0\1\323\2\0\5\323\22\0\1\323\30\0"+
    "\1\322\2\0\1\322\4\0\1\322\17\0\1\322\1\0"+
    "\1\322\2\0\5\322\22\0\1\322\27\0\2\6\2\0"+
    "\1\6\1\72\1\6\1\0\1\6\3\0\2\6\13\0"+
    "\1\6\1\0\1\6\1\73\1\74\15\6\1\324\10\6"+
    "\1\0\2\6\1\324\5\6\16\0\1\6\1\0\2\111"+
    "\2\0\1\111\1\202\1\111\1\0\1\111\3\0\2\111"+
    "\13\0\1\111\1\325\1\111\1\203\1\0\26\111\1\0"+
    "\10\111\16\0\1\111\43\0\1\325\22\0\1\325\101\0"+
    "\1\326\20\0\1\326\21\0\2\6\2\0\1\6\1\72"+
    "\1\6\1\0\1\6\3\0\2\6\13\0\1\6\1\0"+
    "\1\6\1\73\1\74\7\6\1\327\16\6\1\0\5\6"+
    "\1\327\2\6\16\0\1\6\1\0\2\132\2\0\1\132"+
    "\1\134\1\132\1\0\1\132\3\0\2\132\13\0\1\132"+
    "\1\0\1\132\2\0\20\132\1\330\5\132\1\0\10\132"+
    "\16\0\1\132\1\0\2\132\2\0\1\132\1\134\1\132"+
    "\1\0\1\132\3\0\2\132\13\0\1\132\1\0\1\132"+
    "\2\0\20\132\1\331\5\132\1\0\10\132\16\0\1\132"+
    "\1\0\2\132\2\0\1\132\1\134\1\132\1\0\1\132"+
    "\3\0\1\332\1\132\13\0\1\132\1\0\1\132\2\0"+
    "\26\132\1\0\10\132\16\0\1\132\1\0\2\132\2\0"+
    "\1\132\1\134\1\132\1\0\1\132\3\0\2\132\13\0"+
    "\1\132\1\0\1\132\2\0\10\132\1\142\11\132\1\333"+
    "\3\132\1\0\10\132\16\0\1\132\1\0\2\132\2\0"+
    "\1\132\1\134\1\132\1\0\1\132\3\0\2\132\13\0"+
    "\1\132\1\0\1\132\2\0\1\132\1\334\24\132\1\0"+
    "\10\132\16\0\1\132\1\0\2\132\2\0\1\132\1\134"+
    "\1\132\1\0\1\132\3\0\2\132\13\0\1\132\1\0"+
    "\1\132\2\0\20\132\1\335\5\132\1\0\10\132\16\0"+
    "\1\132\1\0\2\132\2\0\1\132\1\134\1\132\1\0"+
    "\1\132\3\0\2\132\13\0\1\132\1\0\1\132\2\0"+
    "\20\132\1\336\5\132\1\0\10\132\16\0\1\132\1\0"+
    "\2\132\2\0\1\132\1\134\1\132\1\0\1\132\3\0"+
    "\2\132\13\0\1\132\1\0\1\132\2\0\16\132\1\337"+
    "\7\132\1\0\3\132\1\337\4\132\16\0\1\132\1\0"+
    "\2\132\2\0\1\132\1\134\1\132\1\0\1\132\3\0"+
    "\2\132\13\0\1\132\1\0\1\132\2\0\13\132\1\340"+
    "\12\132\1\0\7\132\1\340\16\0\1\132\1\0\2\132"+
    "\2\0\1\132\1\134\1\341\1\0\1\132\3\0\2\132"+
    "\13\0\1\132\1\0\1\132\2\0\21\132\1\341\4\132"+
    "\1\0\10\132\16\0\1\132\1\0\2\132\2\0\1\132"+
    "\1\134\1\132\1\0\1\132\3\0\2\132\13\0\1\132"+
    "\1\0\1\132\2\0\14\132\1\342\11\132\1\0\6\132"+
    "\1\342\1\132\16\0\1\132\1\0\2\132\2\0\1\343"+
    "\1\134\1\132\1\0\1\132\3\0\2\132\13\0\1\132"+
    "\1\0\1\132\2\0\26\132\1\0\10\132\16\0\1\132"+
    "\1\0\2\132\2\0\1\132\1\134\1\132\1\0\1\132"+
    "\3\0\2\132\13\0\1\132\1\0\1\132\2\0\20\132"+
    "\1\344\5\132\1\0\10\132\16\0\1\132\1\0\2\132"+
    "\2\0\1\132\1\134\1\132\1\0\1\132\3\0\2\132"+
    "\13\0\1\132\1\0\1\132\2\0\7\132\1\345\16\132"+
    "\1\0\5\132\1\345\2\132\16\0\1\132\1\0\2\132"+
    "\2\0\1\132\1\134\1\132\1\0\1\132\3\0\2\132"+
    "\13\0\1\132\1\0\1\132\2\0\4\132\1\346\21\132"+
    "\1\0\1\346\7\132\16\0\1\132\1\0\2\132\2\0"+
    "\1\132\1\134\1\132\1\0\1\132\3\0\2\132\13\0"+
    "\1\132\1\0\1\132\2\0\20\132\1\347\5\132\1\0"+
    "\10\132\16\0\1\132\1\0\2\132\2\0\1\132\1\134"+
    "\1\132\1\0\1\132\3\0\2\132\13\0\1\132\1\0"+
    "\1\132\2\0\4\132\1\350\21\132\1\0\1\350\7\132"+
    "\16\0\1\132\1\0\2\132\2\0\1\132\1\134\1\132"+
    "\1\0\1\132\3\0\2\132\13\0\1\132\1\0\1\132"+
    "\2\0\7\132\1\351\16\132\1\0\5\132\1\351\2\132"+
    "\16\0\1\132\1\0\2\132\2\0\1\132\1\134\1\132"+
    "\1\0\1\132\3\0\2\132\13\0\1\132\1\0\1\132"+
    "\2\0\6\132\1\301\17\132\1\0\10\132\16\0\1\132"+
    "\1\0\2\132\2\0\1\132\1\134\1\132\1\0\1\132"+
    "\3\0\2\132\13\0\1\132\1\0\1\132\2\0\15\132"+
    "\1\352\10\132\1\0\2\132\1\352\5\132\16\0\1\132"+
    "\1\0\2\132\2\0\1\132\1\134\1\132\1\0\1\132"+
    "\3\0\2\132\13\0\1\132\1\0\1\132\2\0\15\132"+
    "\1\353\10\132\1\0\2\132\1\353\5\132\16\0\1\132"+
    "\1\0\2\132\2\0\1\132\1\134\1\132\1\0\1\354"+
    "\3\0\2\132\13\0\1\132\1\0\1\132\2\0\26\132"+
    "\1\0\10\132\16\0\1\132\1\0\2\132\2\0\1\132"+
    "\1\134\1\355\1\0\1\132\3\0\2\132\13\0\1\132"+
    "\1\0\1\132\2\0\21\132\1\355\4\132\1\0\10\132"+
    "\16\0\1\132\1\0\2\132\2\0\1\132\1\134\1\132"+
    "\1\0\1\132\3\0\2\132\13\0\1\132\1\0\1\132"+
    "\2\0\23\132\1\356\2\132\1\0\10\132\16\0\1\132"+
    "\1\0\2\6\2\0\1\6\1\72\1\6\1\0\1\6"+
    "\3\0\2\6\13\0\1\6\1\0\1\6\1\73\1\74"+
    "\26\6\1\0\1\357\7\6\16\0\1\6\1\0\2\53"+
    "\2\0\1\53\1\54\4\53\2\0\3\53\5\0\11\53"+
    "\1\0\15\53\1\360\13\53\1\360\22\53\1\0\4\53"+
    "\2\0\1\53\1\54\4\53\2\0\3\53\5\0\11\53"+
    "\1\0\7\53\1\361\24\53\1\361\17\53\1\0\2\53"+
    "\1\0\1\362\2\0\1\362\3\0\1\253\1\363\17\0"+
    "\1\362\1\0\1\362\2\0\5\362\22\0\1\362\30\0"+
    "\1\363\2\0\1\363\4\0\1\363\17\0\1\363\1\0"+
    "\1\363\2\0\5\363\22\0\1\363\30\0\1\364\2\0"+
    "\1\364\24\0\1\364\1\0\1\364\2\0\5\364\22\0"+
    "\1\364\27\0\2\6\2\0\1\6\1\72\1\6\1\0"+
    "\1\6\3\0\2\6\13\0\1\6\1\0\1\6\1\73"+
    "\1\74\16\6\1\365\7\6\1\0\3\6\1\365\4\6"+
    "\16\0\1\6\55\0\1\366\13\0\1\366\24\0\2\6"+
    "\2\0\1\6\1\72\1\6\1\0\1\6\3\0\2\6"+
    "\13\0\1\6\1\0\1\6\1\73\1\74\13\6\1\367"+
    "\12\6\1\0\7\6\1\367\16\0\1\6\1\0\2\132"+
    "\2\0\1\132\1\134\1\132\1\0\1\370\3\0\2\132"+
    "\13\0\1\132\1\0\1\132\2\0\26\132\1\0\10\132"+
    "\16\0\1\132\1\0\2\132\2\0\1\132\1\134\1\132"+
    "\1\0\1\132\3\0\2\132\13\0\1\132\1\0\1\132"+
    "\2\0\12\132\1\371\13\132\1\0\10\132\16\0\1\132"+
    "\1\0\2\132\2\0\1\132\1\134\1\132\1\0\1\372"+
    "\3\0\2\132\13\0\1\132\1\0\1\132\2\0\26\132"+
    "\1\0\10\132\16\0\1\132\1\0\2\132\2\0\1\132"+
    "\1\134\1\132\1\0\1\132\3\0\2\132\13\0\1\132"+
    "\1\0\1\132\2\0\7\132\1\243\16\132\1\0\5\132"+
    "\1\243\2\132\16\0\1\132\1\0\2\132\2\0\1\132"+
    "\1\134\1\132\1\0\1\132\3\0\2\132\13\0\1\132"+
    "\1\0\1\132\2\0\10\132\1\373\15\132\1\0\10\132"+
    "\16\0\1\132\1\0\2\132\2\0\1\132\1\134\1\132"+
    "\1\0\1\132\3\0\2\132\13\0\1\132\1\0\1\132"+
    "\2\0\14\132\1\374\11\132\1\0\6\132\1\374\1\132"+
    "\16\0\1\132\1\0\2\132\2\0\1\132\1\134\1\132"+
    "\1\0\1\132\3\0\2\132\13\0\1\132\1\0\1\132"+
    "\2\0\14\132\1\375\11\132\1\0\6\132\1\375\1\132"+
    "\16\0\1\132\1\0\2\132\2\0\1\132\1\134\1\132"+
    "\1\0\1\132\3\0\2\132\13\0\1\132\1\0\1\132"+
    "\2\0\17\132\1\376\6\132\1\0\4\132\1\376\3\132"+
    "\16\0\1\132\1\0\2\132\2\0\1\132\1\134\1\132"+
    "\1\0\1\132\3\0\2\132\13\0\1\132\1\0\1\132"+
    "\2\0\20\132\1\377\5\132\1\0\10\132\16\0\1\132"+
    "\1\0\2\132\2\0\1\132\1\134\1\132\1\0\1\132"+
    "\3\0\2\132\13\0\1\132\1\0\1\132\2\0\12\132"+
    "\1\u0100\13\132\1\0\10\132\16\0\1\132\1\0\2\132"+
    "\2\0\1\132\1\134\1\132\1\0\1\132\3\0\2\132"+
    "\13\0\1\132\1\0\1\132\2\0\16\132\1\u0101\7\132"+
    "\1\0\3\132\1\u0101\4\132\16\0\1\132\1\0\2\132"+
    "\2\0\1\132\1\134\1\132\1\0\1\132\3\0\2\132"+
    "\13\0\1\132\1\0\1\132\2\0\16\132\1\u0102\7\132"+
    "\1\0\3\132\1\u0102\4\132\16\0\1\132\1\0\2\132"+
    "\2\0\1\132\1\134\1\132\1\0\1\u0103\3\0\2\132"+
    "\13\0\1\132\1\0\1\132\2\0\26\132\1\0\10\132"+
    "\16\0\1\132\1\0\2\132\2\0\1\132\1\134\1\132"+
    "\1\0\1\132\3\0\2\132\13\0\1\132\1\0\1\132"+
    "\2\0\1\u0104\25\132\1\0\10\132\16\0\1\132\1\0"+
    "\2\132\2\0\1\132\1\134\1\132\1\0\1\132\3\0"+
    "\2\132\13\0\1\132\1\0\1\132\2\0\17\132\1\u0105"+
    "\6\132\1\0\4\132\1\u0105\3\132\16\0\1\132\1\0"+
    "\2\132\2\0\1\132\1\134\1\132\1\0\1\132\3\0"+
    "\2\132\13\0\1\132\1\0\1\132\2\0\14\132\1\u0106"+
    "\11\132\1\0\6\132\1\u0106\1\132\16\0\1\132\1\0"+
    "\2\132\2\0\1\132\1\134\1\132\1\0\1\132\3\0"+
    "\2\132\13\0\1\132\1\0\1\132\2\0\14\132\1\u0107"+
    "\11\132\1\0\6\132\1\u0107\1\132\16\0\1\132\1\0"+
    "\2\132\2\0\1\132\1\134\1\132\1\0\1\132\3\0"+
    "\2\132\13\0\1\132\1\0\1\132\2\0\4\132\1\u0108"+
    "\21\132\1\0\1\u0108\7\132\16\0\1\132\1\0\2\132"+
    "\2\0\1\132\1\134\1\132\1\0\1\132\3\0\2\132"+
    "\13\0\1\132\1\0\1\132\2\0\2\132\1\u0109\6\132"+
    "\1\u010a\4\132\1\u010b\7\132\1\0\3\132\1\u010b\4\132"+
    "\16\0\1\132\1\0\2\132\2\0\1\132\1\134\1\132"+
    "\1\0\1\132\3\0\2\132\13\0\1\132\1\0\1\132"+
    "\2\0\4\132\1\u010c\21\132\1\0\1\u010c\7\132\16\0"+
    "\1\132\1\0\2\132\2\0\1\132\1\134\1\132\1\0"+
    "\1\132\3\0\2\132\13\0\1\132\1\0\1\132\2\0"+
    "\15\132\1\u010d\10\132\1\0\2\132\1\u010d\5\132\16\0"+
    "\1\132\1\0\2\6\2\0\1\6\1\72\1\6\1\0"+
    "\1\6\3\0\2\6\13\0\1\6\1\0\1\6\1\73"+
    "\1\74\26\6\1\0\4\6\1\u010e\3\6\16\0\1\6"+
    "\1\0\2\53\2\0\1\53\1\54\4\53\2\0\3\53"+
    "\5\0\11\53\1\0\16\53\1\u010f\13\53\1\u010f\21\53"+
    "\1\0\4\53\2\0\1\53\1\54\4\53\2\0\3\53"+
    "\5\0\11\53\1\0\13\53\1\u0110\22\53\1\u0110\15\53"+
    "\1\0\2\53\1\0\1\u0111\2\0\1\u0111\3\0\1\253"+
    "\1\u0112\17\0\1\u0111\1\0\1\u0111\2\0\5\u0111\22\0"+
    "\1\u0111\30\0\1\u0112\2\0\1\u0112\4\0\1\u0112\17\0"+
    "\1\u0112\1\0\1\u0112\2\0\5\u0112\22\0\1\u0112\30\0"+
    "\1\u0113\2\0\1\u0113\24\0\1\u0113\1\0\1\u0113\2\0"+
    "\5\u0113\22\0\1\u0113\27\0\2\6\2\0\1\6\1\72"+
    "\1\6\1\0\1\6\3\0\2\6\13\0\1\6\1\0"+
    "\1\6\1\73\1\74\4\6\1\u0114\21\6\1\0\1\u0114"+
    "\7\6\16\0\1\6\57\0\1\u0115\36\0\2\6\2\0"+
    "\1\6\1\72\1\6\1\0\1\6\3\0\2\6\13\0"+
    "\1\6\1\0\1\6\1\73\1\256\26\6\1\0\10\6"+
    "\16\0\1\6\1\0\2\132\2\0\1\u0116\1\134\1\132"+
    "\1\0\1\132\3\0\2\132\13\0\1\132\1\0\1\132"+
    "\2\0\26\132\1\0\10\132\16\0\1\132\1\0\2\132"+
    "\2\0\1\132\1\134\1\132\1\0\1\132\3\0\2\132"+
    "\13\0\1\132\1\0\1\132\2\0\11\132\1\u0117\14\132"+
    "\1\0\10\132\16\0\1\132\1\0\2\132\2\0\1\132"+
    "\1\134\1\132\1\0\1\132\3\0\2\132\13\0\1\132"+
    "\1\0\1\132\2\0\3\132\1\140\4\132\1\142\11\132"+
    "\1\333\3\132\1\0\10\132\16\0\1\132\1\0\2\132"+
    "\2\0\1\132\1\134\1\132\1\0\1\132\3\0\2\132"+
    "\13\0\1\132\1\0\1\132\2\0\7\132\1\u0118\16\132"+
    "\1\0\5\132\1\u0118\2\132\16\0\1\132\1\0\2\132"+
    "\2\0\1\132\1\134\1\132\1\0\1\132\3\0\2\132"+
    "\13\0\1\132\1\0\1\132\2\0\12\132\1\312\13\132"+
    "\1\0\10\132\16\0\1\132\1\0\2\132\2\0\1\132"+
    "\1\134\1\132\1\0\1\132\3\0\2\132\13\0\1\132"+
    "\1\0\1\132\2\0\12\132\1\u0119\13\132\1\0\10\132"+
    "\16\0\1\132\1\0\2\132\2\0\1\132\1\134\1\132"+
    "\1\0\1\132\3\0\2\132\13\0\1\132\1\0\1\132"+
    "\2\0\4\132\1\u011a\21\132\1\0\1\u011a\7\132\16\0"+
    "\1\132\1\0\2\132\2\0\1\132\1\134\1\132\1\0"+
    "\1\132\3\0\2\132\13\0\1\132\1\0\1\132\2\0"+
    "\4\132\1\u011b\21\132\1\0\1\u011b\7\132\16\0\1\132"+
    "\1\0\2\132\2\0\1\132\1\134\1\132\1\0\1\132"+
    "\3\0\2\132\13\0\1\132\1\0\1\132\2\0\4\132"+
    "\1\u011c\21\132\1\0\1\u011c\7\132\16\0\1\132\1\0"+
    "\2\132\2\0\1\132\1\134\1\132\1\0\1\132\3\0"+
    "\2\132\13\0\1\132\1\0\1\132\2\0\20\132\1\u011d"+
    "\5\132\1\0\10\132\16\0\1\132\1\0\2\132\2\0"+
    "\1\132\1\134\1\132\1\0\1\132\3\0\2\132\13\0"+
    "\1\132\1\0\1\132\2\0\1\u011e\25\132\1\0\10\132"+
    "\16\0\1\132\1\0\2\132\2\0\1\132\1\134\1\132"+
    "\1\0\1\132\3\0\2\132\13\0\1\132\1\0\1\132"+
    "\2\0\1\132\1\u011f\10\132\1\u0120\5\132\1\u0121\5\132"+
    "\1\0\10\132\16\0\1\132\1\0\2\132\2\0\1\132"+
    "\1\134\1\132\1\0\1\132\3\0\2\132\13\0\1\132"+
    "\1\0\1\132\2\0\15\132\1\u0122\10\132\1\0\2\132"+
    "\1\u0122\5\132\16\0\1\132\1\0\2\132\2\0\1\132"+
    "\1\134\1\132\1\0\1\132\3\0\2\132\13\0\1\132"+
    "\1\0\1\132\2\0\13\132\1\u0123\12\132\1\0\7\132"+
    "\1\u0123\16\0\1\132\1\0\2\132\2\0\1\132\1\134"+
    "\1\132\1\0\1\132\3\0\2\132\13\0\1\132\1\0"+
    "\1\132\2\0\16\132\1\u0124\7\132\1\0\3\132\1\u0124"+
    "\4\132\16\0\1\132\1\0\2\132\2\0\1\132\1\134"+
    "\1\132\1\0\1\132\3\0\2\132\13\0\1\132\1\0"+
    "\1\132\2\0\4\132\1\u0125\21\132\1\0\1\u0125\7\132"+
    "\16\0\1\132\1\0\2\132\2\0\1\132\1\134\1\132"+
    "\1\0\1\132\3\0\2\132\13\0\1\132\1\0\1\132"+
    "\2\0\4\132\1\u0126\21\132\1\0\1\u0126\7\132\16\0"+
    "\1\132\1\0\2\132\2\0\1\132\1\134\1\132\1\0"+
    "\1\132\3\0\2\132\13\0\1\132\1\0\1\132\2\0"+
    "\7\132\1\u0127\16\132\1\0\5\132\1\u0127\2\132\16\0"+
    "\1\132\1\0\2\132\2\0\1\132\1\134\1\132\1\0"+
    "\1\132\3\0\2\132\13\0\1\132\1\0\1\132\2\0"+
    "\14\132\1\u0128\11\132\1\0\6\132\1\u0128\1\132\16\0"+
    "\1\132\1\0\2\6\2\0\1\6\1\72\1\6\1\0"+
    "\1\6\3\0\2\6\13\0\1\6\1\0\1\6\1\73"+
    "\1\74\26\6\1\0\4\6\1\u0129\3\6\16\0\1\6"+
    "\1\0\2\53\2\0\1\53\1\54\4\53\2\0\3\53"+
    "\5\0\11\53\1\0\4\53\1\u012a\22\53\1\u012a\24\53"+
    "\1\0\2\53\1\0\1\u012b\2\0\1\u012b\3\0\1\253"+
    "\1\u012c\17\0\1\u012b\1\0\1\u012b\2\0\5\u012b\22\0"+
    "\1\u012b\30\0\1\u012c\2\0\1\u012c\4\0\1\u012c\17\0"+
    "\1\u012c\1\0\1\u012c\2\0\5\u012c\22\0\1\u012c\30\0"+
    "\1\u012d\2\0\1\u012d\24\0\1\u012d\1\0\1\u012d\2\0"+
    "\5\u012d\22\0\1\u012d\27\0\2\6\2\0\1\u012e\1\72"+
    "\1\6\1\0\1\6\3\0\2\6\13\0\1\6\1\0"+
    "\1\6\1\73\1\74\26\6\1\0\10\6\16\0\1\6"+
    "\37\0\1\u012f\56\0\2\132\2\0\1\132\1\134\1\132"+
    "\1\0\1\132\3\0\2\132\13\0\1\132\1\0\1\132"+
    "\2\0\1\u0130\25\132\1\0\10\132\16\0\1\132\1\0"+
    "\2\132\2\0\1\132\1\134\1\132\1\0\1\u0131\3\0"+
    "\2\132\13\0\1\132\1\0\1\132\2\0\26\132\1\0"+
    "\10\132\16\0\1\132\1\0\2\132\2\0\1\132\1\134"+
    "\1\132\1\0\1\132\3\0\2\132\13\0\1\132\1\0"+
    "\1\132\2\0\20\132\1\u0132\5\132\1\0\10\132\16\0"+
    "\1\132\1\0\2\132\2\0\1\132\1\134\1\132\1\0"+
    "\1\u0133\3\0\2\132\13\0\1\132\1\0\1\132\2\0"+
    "\26\132\1\0\10\132\16\0\1\132\1\0\2\132\2\0"+
    "\1\132\1\134\1\132\1\0\1\132\3\0\2\132\13\0"+
    "\1\132\1\0\1\132\2\0\20\132\1\u0134\5\132\1\0"+
    "\10\132\16\0\1\132\1\0\2\132\2\0\1\132\1\134"+
    "\1\132\1\0\1\132\3\0\2\132\13\0\1\132\1\0"+
    "\1\132\2\0\16\132\1\u0135\7\132\1\0\3\132\1\u0135"+
    "\4\132\16\0\1\132\1\0\2\132\2\0\1\132\1\134"+
    "\1\132\1\0\1\132\3\0\2\132\13\0\1\132\1\0"+
    "\1\132\2\0\13\132\1\u0136\12\132\1\0\7\132\1\u0136"+
    "\16\0\1\132\1\0\2\132\2\0\1\132\1\134\1\132"+
    "\1\0\1\132\3\0\2\132\13\0\1\132\1\0\1\132"+
    "\2\0\12\132\1\u0137\13\132\1\0\10\132\16\0\1\132"+
    "\1\0\2\132\2\0\1\132\1\134\1\132\1\0\1\132"+
    "\3\0\2\132\13\0\1\132\1\0\1\132\2\0\14\132"+
    "\1\u0138\11\132\1\0\6\132\1\u0138\1\132\16\0\1\132"+
    "\1\0\2\132\2\0\1\132\1\134\1\132\1\0\1\132"+
    "\3\0\2\132\13\0\1\132\1\0\1\132\2\0\7\132"+
    "\1\u0139\16\132\1\0\5\132\1\u0139\2\132\16\0\1\132"+
    "\1\0\2\132\2\0\1\132\1\134\1\132\1\0\1\132"+
    "\3\0\2\132\13\0\1\132\1\0\1\132\2\0\14\132"+
    "\1\u013a\11\132\1\0\6\132\1\u013a\1\132\16\0\1\132"+
    "\1\0\2\132\2\0\1\132\1\134\1\132\1\0\1\132"+
    "\3\0\2\132\13\0\1\132\1\0\1\132\2\0\1\u013b"+
    "\25\132\1\0\10\132\16\0\1\132\1\0\2\132\2\0"+
    "\1\132\1\134\1\132\1\0\1\u013c\3\0\2\132\13\0"+
    "\1\132\1\0\1\132\2\0\26\132\1\0\10\132\16\0"+
    "\1\132\1\0\2\132\2\0\1\132\1\134\1\132\1\0"+
    "\1\132\3\0\2\132\13\0\1\132\1\0\1\132\2\0"+
    "\20\132\1\u013d\5\132\1\0\10\132\16\0\1\132\1\0"+
    "\2\132\2\0\1\132\1\134\1\132\1\0\1\132\3\0"+
    "\2\132\13\0\1\132\1\0\1\132\2\0\13\132\1\u013e"+
    "\12\132\1\0\7\132\1\u013e\16\0\1\132\1\0\2\132"+
    "\2\0\1\u013f\1\134\1\132\1\0\1\132\3\0\2\132"+
    "\13\0\1\132\1\0\1\132\2\0\26\132\1\0\10\132"+
    "\16\0\1\132\1\0\2\132\2\0\1\132\1\134\1\132"+
    "\1\0\1\132\3\0\2\132\13\0\1\132\1\0\1\132"+
    "\2\0\5\132\1\u0140\20\132\1\0\10\132\16\0\1\132"+
    "\1\0\2\132\2\0\1\132\1\134\1\132\1\0\1\132"+
    "\3\0\2\132\13\0\1\132\1\0\1\132\2\0\16\132"+
    "\1\u0141\7\132\1\0\3\132\1\u0141\4\132\16\0\1\132"+
    "\1\0\2\6\2\0\1\6\1\72\1\6\1\0\1\6"+
    "\3\0\2\6\13\0\1\6\1\0\1\6\1\73\1\74"+
    "\26\6\1\0\5\6\1\u0142\2\6\16\0\1\6\1\0"+
    "\2\53\2\0\1\u0143\1\54\4\53\2\0\3\53\5\0"+
    "\11\53\1\0\54\53\1\0\2\53\10\0\1\253\105\0"+
    "\1\u0144\2\0\1\u0144\24\0\1\u0144\1\0\1\u0144\2\0"+
    "\5\u0144\22\0\1\u0144\27\0\2\6\2\0\1\6\1\72"+
    "\1\6\1\0\1\6\3\0\2\6\13\0\1\6\1\0"+
    "\1\6\1\73\1\74\7\6\1\u0145\16\6\1\0\5\6"+
    "\1\u0145\2\6\16\0\1\6\52\0\1\u0146\22\0\1\u0146"+
    "\20\0\2\132\2\0\1\132\1\134\1\132\1\0\1\132"+
    "\3\0\2\132\13\0\1\132\1\0\1\132\2\0\2\132"+
    "\1\u0147\23\132\1\0\10\132\16\0\1\132\1\0\2\132"+
    "\2\0\1\132\1\134\1\132\1\0\1\132\3\0\2\132"+
    "\13\0\1\132\1\0\1\132\2\0\10\132\1\142\15\132"+
    "\1\0\10\132\16\0\1\132\1\0\2\132\2\0\1\132"+
    "\1\134\1\132\1\0\1\u0148\3\0\2\132\13\0\1\132"+
    "\1\0\1\132\2\0\26\132\1\0\10\132\16\0\1\132"+
    "\1\0\2\132\2\0\1\132\1\134\1\132\1\0\1\132"+
    "\3\0\2\132\13\0\1\132\1\0\1\132\2\0\12\132"+
    "\1\u0149\4\132\1\u014a\6\132\1\0\4\132\1\u014a\3\132"+
    "\16\0\1\132\1\0\2\132\2\0\1\132\1\134\1\132"+
    "\1\0\1\u014b\3\0\2\132\13\0\1\132\1\0\1\132"+
    "\2\0\26\132\1\0\10\132\16\0\1\132\1\0\2\132"+
    "\2\0\1\132\1\134\1\132\1\0\1\132\3\0\2\132"+
    "\13\0\1\132\1\0\1\132\2\0\20\132\1\u014c\5\132"+
    "\1\0\10\132\16\0\1\132\1\0\2\132\2\0\1\132"+
    "\1\134\1\132\1\0\1\132\3\0\2\132\13\0\1\132"+
    "\1\0\1\132\2\0\4\132\1\u014d\21\132\1\0\1\u014d"+
    "\7\132\16\0\1\132\1\0\2\132\2\0\1\132\1\134"+
    "\1\132\1\0\1\132\3\0\2\132\13\0\1\132\1\0"+
    "\1\132\2\0\20\132\1\u014e\5\132\1\0\10\132\16\0"+
    "\1\132\1\0\2\132\2\0\1\132\1\134\1\132\1\0"+
    "\1\132\3\0\2\132\13\0\1\132\1\0\1\132\2\0"+
    "\3\132\1\u014f\22\132\1\0\10\132\16\0\1\132\1\0"+
    "\2\132\2\0\1\132\1\134\1\132\1\0\1\132\3\0"+
    "\2\132\13\0\1\132\1\0\1\132\2\0\15\132\1\u0150"+
    "\10\132\1\0\2\132\1\u0150\5\132\16\0\1\132\1\0"+
    "\2\132\2\0\1\132\1\134\1\132\1\0\1\132\3\0"+
    "\2\132\13\0\1\132\1\0\1\132\2\0\2\132\1\u0151"+
    "\23\132\1\0\10\132\16\0\1\132\1\0\2\132\2\0"+
    "\1\132\1\134\1\132\1\0\1\132\3\0\2\132\13\0"+
    "\1\132\1\0\1\132\2\0\17\132\1\u0152\6\132\1\0"+
    "\4\132\1\u0152\3\132\16\0\1\132\1\0\2\132\2\0"+
    "\1\132\1\134\1\132\1\0\1\132\3\0\2\132\13\0"+
    "\1\132\1\0\1\132\2\0\17\132\1\u0153\6\132\1\0"+
    "\4\132\1\u0153\3\132\16\0\1\132\1\0\2\132\2\0"+
    "\1\132\1\134\1\132\1\0\1\132\3\0\2\132\13\0"+
    "\1\132\1\0\1\132\2\0\20\132\1\u0154\5\132\1\0"+
    "\10\132\16\0\1\132\1\0\2\132\2\0\1\132\1\134"+
    "\1\132\1\0\1\132\3\0\2\132\13\0\1\132\1\0"+
    "\1\132\2\0\20\132\1\u0155\5\132\1\0\10\132\16\0"+
    "\1\132\1\0\2\132\2\0\1\132\1\134\1\132\1\0"+
    "\1\132\3\0\2\132\13\0\1\132\1\0\1\132\2\0"+
    "\6\132\1\u013f\17\132\1\0\10\132\16\0\1\132\1\0"+
    "\2\132\2\0\1\132\1\134\1\132\1\0\1\132\3\0"+
    "\2\132\13\0\1\132\1\0\1\132\2\0\20\132\1\u0156"+
    "\5\132\1\0\10\132\16\0\1\132\1\0\2\6\2\0"+
    "\1\6\1\72\1\6\1\0\1\6\3\0\2\6\13\0"+
    "\1\6\1\0\1\6\1\73\1\74\26\6\1\0\6\6"+
    "\1\u0157\1\6\16\0\1\6\1\0\2\53\2\0\1\53"+
    "\1\54\4\53\2\0\3\53\5\0\11\53\1\0\7\53"+
    "\1\u0158\24\53\1\u0158\17\53\1\0\2\53\1\0\1\u012c"+
    "\2\0\1\u012c\24\0\1\u012c\1\0\1\u012c\2\0\5\u012c"+
    "\22\0\1\u012c\27\0\2\6\2\0\1\6\1\72\1\6"+
    "\1\0\1\6\3\0\2\6\13\0\1\6\1\0\1\6"+
    "\1\73\1\74\24\6\1\367\1\6\1\0\1\6\1\367"+
    "\6\6\16\0\1\6\57\0\1\u0159\36\0\2\132\2\0"+
    "\1\132\1\134\1\132\1\0\1\132\3\0\2\132\13\0"+
    "\1\132\1\0\1\132\2\0\4\132\1\u015a\21\132\1\0"+
    "\1\u015a\7\132\16\0\1\132\1\0\2\132\2\0\1\132"+
    "\1\134\1\132\1\0\1\132\3\0\2\132\13\0\1\132"+
    "\1\0\1\132\2\0\10\132\1\142\5\132\1\u015b\3\132"+
    "\1\333\3\132\1\0\3\132\1\u015b\4\132\16\0\1\132"+
    "\1\0\2\132\2\0\1\132\1\134\1\132\1\0\1\132"+
    "\3\0\2\132\13\0\1\132\1\0\1\132\2\0\4\132"+
    "\1\u015c\21\132\1\0\1\u015c\7\132\16\0\1\132\1\0"+
    "\2\132\2\0\1\132\1\134\1\132\1\0\1\132\3\0"+
    "\2\132\13\0\1\132\1\0\1\132\2\0\4\132\1\u015d"+
    "\21\132\1\0\1\u015d\7\132\16\0\1\132\1\0\2\132"+
    "\2\0\1\132\1\134\1\132\1\0\1\132\3\0\2\132"+
    "\13\0\1\132\1\0\1\132\2\0\17\132\1\u015e\6\132"+
    "\1\0\4\132\1\u015e\3\132\16\0\1\132\1\0\2\132"+
    "\2\0\1\132\1\134\1\132\1\0\1\132\3\0\2\132"+
    "\13\0\1\132\1\0\1\132\2\0\17\132\1\u015f\6\132"+
    "\1\0\4\132\1\u015f\3\132\16\0\1\132\1\0\2\132"+
    "\2\0\1\132\1\134\1\132\1\0\1\132\3\0\2\132"+
    "\13\0\1\132\1\0\1\132\2\0\20\132\1\u0160\5\132"+
    "\1\0\10\132\16\0\1\132\1\0\2\132\2\0\1\132"+
    "\1\134\1\132\1\0\1\132\3\0\2\132\13\0\1\132"+
    "\1\0\1\132\2\0\3\132\1\u0161\22\132\1\0\10\132"+
    "\16\0\1\132\1\0\2\132\2\0\1\132\1\134\1\132"+
    "\1\0\1\132\3\0\2\132\13\0\1\132\1\0\1\132"+
    "\2\0\4\132\1\u0162\21\132\1\0\1\u0162\7\132\16\0"+
    "\1\132\1\0\2\132\2\0\1\132\1\134\1\132\1\0"+
    "\1\132\3\0\2\132\13\0\1\132\1\0\1\132\2\0"+
    "\20\132\1\u0163\5\132\1\0\10\132\16\0\1\132\1\0"+
    "\2\132\2\0\1\132\1\134\1\132\1\0\1\132\3\0"+
    "\2\132\13\0\1\132\1\0\1\132\2\0\4\132\1\u0164"+
    "\21\132\1\0\1\u0164\7\132\16\0\1\132\1\0\2\132"+
    "\2\0\1\132\1\134\1\132\1\0\1\u0165\3\0\2\132"+
    "\13\0\1\132\1\0\1\132\2\0\26\132\1\0\10\132"+
    "\16\0\1\132\1\0\2\6\2\0\1\6\1\72\1\6"+
    "\1\0\1\6\3\0\2\6\13\0\1\6\1\0\1\6"+
    "\1\73\1\74\26\6\1\0\7\6\1\u0166\16\0\1\6"+
    "\1\0\2\53\2\0\1\53\1\54\4\53\2\0\3\53"+
    "\5\0\11\53\1\0\24\53\1\u0110\3\53\1\u0110\23\53"+
    "\1\0\2\53\2\132\2\0\1\132\1\134\1\132\1\0"+
    "\1\132\3\0\2\132\13\0\1\132\1\0\1\132\2\0"+
    "\4\132\1\235\21\132\1\0\1\235\7\132\16\0\1\132"+
    "\1\0\2\132\2\0\1\132\1\134\1\132\1\0\1\132"+
    "\3\0\2\132\13\0\1\132\1\0\1\132\2\0\3\132"+
    "\1\u0167\22\132\1\0\10\132\16\0\1\132\1\0\2\132"+
    "\2\0\1\132\1\134\1\132\1\0\1\132\3\0\2\132"+
    "\13\0\1\132\1\0\1\132\2\0\11\132\1\u0168\14\132"+
    "\1\0\10\132\16\0\1\132\1\0\2\132\2\0\1\132"+
    "\1\134\1\132\1\0\1\132\3\0\2\132\13\0\1\132"+
    "\1\0\1\132\2\0\20\132\1\u0169\5\132\1\0\10\132"+
    "\16\0\1\132\1\0\2\132\2\0\1\132\1\134\1\132"+
    "\1\0\1\132\3\0\2\132\13\0\1\132\1\0\1\132"+
    "\2\0\14\132\1\u016a\11\132\1\0\6\132\1\u016a\1\132"+
    "\16\0\1\132\1\0\2\132\2\0\1\132\1\134\1\132"+
    "\1\0\1\132\3\0\2\132\13\0\1\132\1\0\1\132"+
    "\2\0\11\132\1\u016b\14\132\1\0\10\132\16\0\1\132"+
    "\1\0\2\132\2\0\1\132\1\134\1\132\1\0\1\132"+
    "\3\0\2\132\13\0\1\132\1\0\1\132\2\0\25\132"+
    "\1\u016c\1\0\10\132\16\0\1\132\1\0\2\132\2\0"+
    "\1\132\1\134\1\132\1\0\1\132\3\0\2\132\13\0"+
    "\1\132\1\0\1\132\2\0\16\132\1\u0150\7\132\1\0"+
    "\3\132\1\u0150\4\132\16\0\1\132\1\0\2\132\2\0"+
    "\1\132\1\134\1\132\1\0\1\132\3\0\2\132\13\0"+
    "\1\132\1\0\1\132\2\0\2\132\1\u016d\23\132\1\0"+
    "\10\132\16\0\1\132\1\0\2\6\2\0\1\6\1\72"+
    "\1\6\1\0\1\6\3\0\2\6\13\0\1\6\1\0"+
    "\1\6\1\73\1\u016e\26\6\1\0\10\6\16\0\1\6"+
    "\1\0\2\132\2\0\1\132\1\134\1\132\1\0\1\132"+
    "\3\0\2\132\13\0\1\132\1\0\1\132\2\0\7\132"+
    "\1\u016f\16\132\1\0\5\132\1\u016f\2\132\16\0\1\132"+
    "\1\0\2\132\2\0\1\132\1\134\1\132\1\0\1\132"+
    "\3\0\2\132\13\0\1\132\1\0\1\132\2\0\4\132"+
    "\1\u0170\21\132\1\0\1\u0170\7\132\16\0\1\132\1\0"+
    "\2\132\2\0\1\132\1\134\1\132\1\0\1\132\3\0"+
    "\2\132\13\0\1\132\1\0\1\132\2\0\25\132\1\u0171"+
    "\1\0\10\132\16\0\1\132\1\0\2\132\2\0\1\132"+
    "\1\134\1\132\1\0\1\132\3\0\2\132\13\0\1\132"+
    "\1\0\1\132\2\0\12\132\1\u0150\13\132\1\0\10\132"+
    "\16\0\1\132\1\0\2\132\2\0\1\132\1\134\1\132"+
    "\1\0\1\132\3\0\2\132\13\0\1\132\1\0\1\132"+
    "\2\0\4\132\1\u0150\21\132\1\0\1\u0150\7\132\16\0"+
    "\1\132\1\0\2\132\2\0\1\132\1\134\1\132\1\0"+
    "\1\132\3\0\2\132\13\0\1\132\1\0\1\132\2\0"+
    "\11\132\1\u0172\14\132\1\0\10\132\16\0\1\132\1\0"+
    "\2\132\2\0\1\132\1\134\1\132\1\0\1\132\3\0"+
    "\2\132\13\0\1\132\1\0\1\132\2\0\14\132\1\u0173"+
    "\11\132\1\0\6\132\1\u0173\1\132\16\0\1\132\1\0"+
    "\2\132\2\0\1\132\1\134\1\132\1\0\1\132\3\0"+
    "\2\132\13\0\1\132\1\0\1\132\2\0\1\u0174\25\132"+
    "\1\0\10\132\16\0\1\132\1\0\2\132\2\0\1\132"+
    "\1\134\1\132\1\0\1\132\3\0\2\132\13\0\1\132"+
    "\1\0\1\132\2\0\2\132\1\u0175\23\132\1\0\10\132"+
    "\16\0\1\132\1\0\2\132\2\0\1\132\1\134\1\132"+
    "\1\0\1\132\3\0\2\132\13\0\1\132\1\0\1\132"+
    "\2\0\11\132\1\u0176\14\132\1\0\10\132\16\0\1\132"+
    "\1\0\2\132\2\0\1\132\1\134\1\132\1\0\1\132"+
    "\3\0\2\132\13\0\1\132\1\0\1\132\2\0\4\132"+
    "\1\u0177\21\132\1\0\1\u0177\7\132\16\0\1\132\1\0"+
    "\2\132\2\0\1\132\1\134\1\132\1\0\1\132\3\0"+
    "\2\132\13\0\1\132\1\0\1\132\2\0\16\132\1\u0178"+
    "\7\132\1\0\3\132\1\u0178\4\132\16\0\1\132\1\0"+
    "\2\132\2\0\1\132\1\134\1\132\1\0\1\132\3\0"+
    "\2\132\13\0\1\132\1\0\1\132\2\0\20\132\1\u0179"+
    "\5\132\1\0\10\132\16\0\1\132\1\0\2\132\2\0"+
    "\1\132\1\134\1\132\1\0\1\132\3\0\2\132\13\0"+
    "\1\132\1\0\1\132\2\0\4\132\1\u017a\21\132\1\0"+
    "\1\u017a\7\132\16\0\1\132\1\0\2\132\2\0\1\132"+
    "\1\134\1\132\1\0\1\132\3\0\2\132\13\0\1\132"+
    "\1\0\1\132\2\0\13\132\1\u0154\12\132\1\0\7\132"+
    "\1\u0154\16\0\1\132\1\0\2\132\2\0\1\132\1\134"+
    "\1\132\1\0\1\132\3\0\2\132\13\0\1\132\1\0"+
    "\1\132\2\0\14\132\1\u017b\11\132\1\0\6\132\1\u017b"+
    "\1\132\16\0\1\132\1\0\2\132\2\0\1\132\1\134"+
    "\1\132\1\0\1\132\3\0\2\132\13\0\1\132\1\0"+
    "\1\132\2\0\16\132\1\u017c\7\132\1\0\3\132\1\u017c"+
    "\4\132\16\0\1\132\1\0";

  private static int [] zzUnpackTrans() {
    int [] result = new int[23870];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /* error codes */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  private static final int ZZ_NO_MATCH = 1;
  private static final int ZZ_PUSHBACK_2BIG = 2;

  /* error messages for the codes above */
  private static final String[] ZZ_ERROR_MSG = {
    "Unknown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state <code>aState</code>
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\1\0\1\1\3\0\3\1\1\11\2\1\1\11\1\1"+
    "\1\11\4\1\1\11\1\1\1\11\2\1\1\11\4\1"+
    "\4\11\2\1\2\11\1\1\1\11\3\1\1\11\3\1"+
    "\1\11\5\1\2\0\3\11\1\1\2\0\1\11\1\0"+
    "\2\1\1\0\1\1\1\0\3\1\1\0\1\11\1\0"+
    "\1\1\2\0\1\1\3\0\1\11\3\0\1\1\1\11"+
    "\2\0\1\11\3\1\2\0\16\1\1\0\3\11\1\0"+
    "\4\11\2\1\1\11\2\1\1\0\1\11\3\1\1\11"+
    "\2\1\2\0\1\11\1\1\2\0\1\11\2\0\32\1"+
    "\1\11\1\0\2\1\1\11\1\1\1\0\2\1\1\11"+
    "\2\1\1\0\1\11\1\0\32\1\1\11\6\1\1\11"+
    "\1\0\37\1\1\0\36\1\1\0\26\1\1\11\2\1"+
    "\1\0\26\1\1\0\22\1\1\11\24\1\1\11\16\1";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[380];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** the input device */
  private java.io.Reader zzReader;

  /** the current state of the DFA */
  private int zzState;

  /** the current lexical state */
  private int zzLexicalState = YYINITIAL;

  /** this buffer contains the current text to be matched and is
      the source of the yytext() string */
  private CharSequence zzBuffer = "";

  /** the textposition at the last accepting state */
  private int zzMarkedPos;

  /** the current text position in the buffer */
  private int zzCurrentPos;

  /** startRead marks the beginning of the yytext() string in the buffer */
  private int zzStartRead;

  /** endRead marks the last character in the buffer, that has been read
      from input */
  private int zzEndRead;

  /**
   * zzAtBOL == true <=> the scanner is currently at the beginning of a line
   */
  private boolean zzAtBOL = true;

  /** zzAtEOF == true <=> the scanner is at the EOF */
  private boolean zzAtEOF;

  /** denotes if the user-EOF-code has already been executed */
  private boolean zzEOFDone;

  /* user code: */
  public _PostCssLexer() {
    this((java.io.Reader)null);
  }


  /**
   * Creates a new scanner
   *
   * @param   in  the java.io.Reader to read input from.
   */
  public _PostCssLexer(java.io.Reader in) {
    this.zzReader = in;
  }


  /** 
   * Unpacks the compressed character translation table.
   *
   * @param packed   the packed character translation table
   * @return         the unpacked character translation table
   */
  private static char [] zzUnpackCMap(String packed) {
    int size = 0;
    for (int i = 0, length = packed.length(); i < length; i += 2) {
      size += packed.charAt(i);
    }
    char[] map = new char[size];
    int i = 0;  /* index in packed string  */
    int j = 0;  /* index in unpacked array */
    while (i < packed.length()) {
      int  count = packed.charAt(i++);
      char value = packed.charAt(i++);
      do map[j++] = value; while (--count > 0);
    }
    return map;
  }

  public final int getTokenStart() {
    return zzStartRead;
  }

  public final int getTokenEnd() {
    return getTokenStart() + yylength();
  }

  public void reset(CharSequence buffer, int start, int end, int initialState) {
    zzBuffer = buffer;
    zzCurrentPos = zzMarkedPos = zzStartRead = start;
    zzAtEOF  = false;
    zzAtBOL = true;
    zzEndRead = end;
    yybegin(initialState);
  }

  /**
   * Refills the input buffer.
   *
   * @return      {@code false}, iff there was new input.
   *
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  private boolean zzRefill() throws java.io.IOException {
    return true;
  }


  /**
   * Returns the current lexical state.
   */
  public final int yystate() {
    return zzLexicalState;
  }


  /**
   * Enters a new lexical state
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   */
  public final CharSequence yytext() {
    return zzBuffer.subSequence(zzStartRead, zzMarkedPos);
  }


  /**
   * Returns the character at position {@code pos} from the
   * matched text.
   *
   * It is equivalent to yytext().charAt(pos), but faster
   *
   * @param pos the position of the character to fetch.
   *            A value from 0 to yylength()-1.
   *
   * @return the character at position pos
   */
  public final char yycharat(int pos) {
    return zzBuffer.charAt(zzStartRead+pos);
  }


  /**
   * Returns the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occurred while scanning.
   *
   * In a wellformed scanner (no or only correct usage of
   * yypushback(int) and a match-all fallback rule) this method
   * will only be called with things that "Can't Possibly Happen".
   * If this method is called, something is seriously wrong
   * (e.g. a JFlex bug producing a faulty scanner etc.).
   *
   * Usual syntax/scanner level error handling should be done
   * in error fallback rules.
   *
   * @param   errorCode  the code of the errormessage to display
   */
  private void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    }
    catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  }


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * They will be read again by then next call of the scanning method
   *
   * @param number  the number of characters to be read again.
   *                This number must not be greater than yylength()!
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }


  /**
   * Resumes scanning until the next regular expression is matched,
   * the end of input is encountered or an I/O-Error occurs.
   *
   * @return      the next token
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  public IElementType advance() throws java.io.IOException {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    CharSequence zzBufferL = zzBuffer;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;

      zzState = ZZ_LEXSTATE[zzLexicalState];

      // set up zzAction for empty match case:
      int zzAttributes = zzAttrL[zzState];
      if ( (zzAttributes & 1) == 1 ) {
        zzAction = zzState;
      }


      zzForAction: {
        while (true) {

          if (zzCurrentPosL < zzEndReadL) {
            zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL/*, zzEndReadL*/);
            zzCurrentPosL += Character.charCount(zzInput);
          }
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL/*, zzEndReadL*/);
              zzCurrentPosL += Character.charCount(zzInput);
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + ZZ_CMAP(zzInput) ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
        zzAtEOF = true;
        return null;
      }
      else {
        switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
          case 1: 
            { return CssElementTypes.CSS_URL;
            } 
            // fall through
          case 81: break;
          case 2: 
            { return CssElementTypes.CSS_IDENT;
            } 
            // fall through
          case 82: break;
          case 3: 
            { return CssElementTypes.CSS_NUMBER;
            } 
            // fall through
          case 83: break;
          case 4: 
            { return CssElementTypes.CSS_WHITE_SPACE;
            } 
            // fall through
          case 84: break;
          case 5: 
            { return CssElementTypes.CSS_BAD_CHARACTER;
            } 
            // fall through
          case 85: break;
          case 6: 
            { return CssElementTypes.CSS_PLUS;
            } 
            // fall through
          case 86: break;
          case 7: 
            { return CssElementTypes.CSS_MINUS;
            } 
            // fall through
          case 87: break;
          case 8: 
            { return CssElementTypes.CSS_RPAREN;
            } 
            // fall through
          case 88: break;
          case 9: 
            { return CssElementTypes.CSS_PERIOD;
            } 
            // fall through
          case 89: break;
          case 10: 
            { return CssElementTypes.CSS_STRING_TOKEN;
            } 
            // fall through
          case 90: break;
          case 11: 
            { return PostCssTokenTypes.HASH_SIGN;
            } 
            // fall through
          case 91: break;
          case 12: 
            { return CssElementTypes.CSS_LBRACE;
            } 
            // fall through
          case 92: break;
          case 13: 
            { return CssElementTypes.CSS_RBRACE;
            } 
            // fall through
          case 93: break;
          case 14: 
            { return CssElementTypes.CSS_SLASH;
            } 
            // fall through
          case 94: break;
          case 15: 
            { return CssElementTypes.CSS_LPAREN;
            } 
            // fall through
          case 95: break;
          case 16: 
            { return CssElementTypes.CSS_COLON;
            } 
            // fall through
          case 96: break;
          case 17: 
            { return CssElementTypes.CSS_SEMICOLON;
            } 
            // fall through
          case 97: break;
          case 18: 
            { return CssElementTypes.CSS_COMMA;
            } 
            // fall through
          case 98: break;
          case 19: 
            { return CssElementTypes.CSS_PERCENT;
            } 
            // fall through
          case 99: break;
          case 20: 
            { return CssElementTypes.CSS_GT;
            } 
            // fall through
          case 100: break;
          case 21: 
            { return CssElementTypes.CSS_ASTERISK;
            } 
            // fall through
          case 101: break;
          case 22: 
            { return CssElementTypes.CSS_LBRACKET;
            } 
            // fall through
          case 102: break;
          case 23: 
            { return CssElementTypes.CSS_RBRACKET;
            } 
            // fall through
          case 103: break;
          case 24: 
            { return CssElementTypes.CSS_TILDA;
            } 
            // fall through
          case 104: break;
          case 25: 
            { return CssElementTypes.CSS_EQ;
            } 
            // fall through
          case 105: break;
          case 26: 
            { return PostCssTokenTypes.LT;
            } 
            // fall through
          case 106: break;
          case 27: 
            { return CssElementTypes.CSS_PIPE;
            } 
            // fall through
          case 107: break;
          case 28: 
            { return CssElementTypes.CSS_HAT;
            } 
            // fall through
          case 108: break;
          case 29: 
            { return PostCssTokenTypes.AMPERSAND;
            } 
            // fall through
          case 109: break;
          case 30: 
            { yybegin(YYINITIAL); return CssElementTypes.CSS_RPAREN;
            } 
            // fall through
          case 110: break;
          case 31: 
            { yybegin(YYINITIAL); return CssElementTypes.CSS_FUNCTION_TOKEN;
            } 
            // fall through
          case 111: break;
          case 32: 
            { yybegin(YYINITIAL); return CssElementTypes.CSS_IDENT;
            } 
            // fall through
          case 112: break;
          case 33: 
            { return CssElementTypes.CSS_COMMENT;
            } 
            // fall through
          case 113: break;
          case 34: 
            { yybegin(CSS_FUNCTION); yypushback(yylength());
            } 
            // fall through
          case 114: break;
          case 35: 
            { return CssElementTypes.CSS_HACK;
            } 
            // fall through
          case 115: break;
          case 36: 
            { yybegin(CSS_FUNCTION_MINUS_N); yypushback(yylength());
            } 
            // fall through
          case 116: break;
          case 37: 
            { return CssElementTypes.CSS_HASH;
            } 
            // fall through
          case 117: break;
          case 38: 
            { return PostCssTokenTypes.POST_CSS_SIMPLE_VARIABLE_TOKEN;
            } 
            // fall through
          case 118: break;
          case 39: 
            { return CssElementTypes.CSS_ENDS_WITH;
            } 
            // fall through
          case 119: break;
          case 40: 
            { return PostCssTokenTypes.POST_CSS_COMMENT;
            } 
            // fall through
          case 120: break;
          case 41: 
            { yybegin(CSS_COMMENT); return CssElementTypes.CSS_COMMENT;
            } 
            // fall through
          case 121: break;
          case 42: 
            { return CssElementTypes.CSS_JQUERY_NOT_EQUALS;
            } 
            // fall through
          case 122: break;
          case 43: 
            { return CssElementTypes.CSS_ATKEYWORD;
            } 
            // fall through
          case 123: break;
          case 44: 
            { return PostCssTokenTypes.GE;
            } 
            // fall through
          case 124: break;
          case 45: 
            { return CssElementTypes.CSS_CONTAINS;
            } 
            // fall through
          case 125: break;
          case 46: 
            { return CssElementTypes.CSS_INCLUDES;
            } 
            // fall through
          case 126: break;
          case 47: 
            { return PostCssTokenTypes.LE;
            } 
            // fall through
          case 127: break;
          case 48: 
            { return CssElementTypes.CSS_DASHMATCH;
            } 
            // fall through
          case 128: break;
          case 49: 
            { return CssElementTypes.CSS_BEGINS_WITH;
            } 
            // fall through
          case 129: break;
          case 50: 
            { return CssElementTypes.CSS_CAT;
            } 
            // fall through
          case 130: break;
          case 51: 
            { yybegin(YYINITIAL); return CssElementTypes.CSS_COMMENT;
            } 
            // fall through
          case 131: break;
          case 52: 
            { if(StringUtil.endsWith(yytext(), "\\0") || StringUtil.endsWith(yytext(), "\\9")) yypushback(2); else yypushback(3); return CssElementTypes.CSS_IDENT;
            } 
            // fall through
          case 132: break;
          case 53: 
            { return CssElementTypes.CSS_UNICODE_RANGE;
            } 
            // fall through
          case 133: break;
          case 54: 
            { return CssElementTypes.CSS_CDC;
            } 
            // fall through
          case 134: break;
          case 55: 
            { return CssElementTypes.CSS_SLASHED_COMBINATOR;
            } 
            // fall through
          case 135: break;
          case 56: 
            { return CssElementTypes.CSS_GT_GT_GT;
            } 
            // fall through
          case 136: break;
          case 57: 
            { return CssElementTypes.CSS_URI_START;
            } 
            // fall through
          case 137: break;
          case 58: 
            { yybegin(CSS_URI); yypushback(yylength());
            } 
            // fall through
          case 138: break;
          case 59: 
            { if(StringUtil.endsWith(yytext(), "\\0") || StringUtil.endsWith(yytext(), "\\9")) yypushback(2); else yypushback(3); return CssElementTypes.CSS_HASH;
            } 
            // fall through
          case 139: break;
          case 60: 
            { return CssElementTypes.CSS_CDO;
            } 
            // fall through
          case 140: break;
          case 61: 
            { return PostCssTokenTypes.POST_CSS_NEST_SYM;
            } 
            // fall through
          case 141: break;
          case 62: 
            { return CssElementTypes.CSS_PAGE_SYM;
            } 
            // fall through
          case 142: break;
          case 63: 
            { return CssElementTypes.CSS_MEDIA_SYM;
            } 
            // fall through
          case 143: break;
          case 64: 
            { return CssElementTypes.CSS_SCOPE_SYM;
            } 
            // fall through
          case 144: break;
          case 65: 
            { return CssElementTypes.CSS_VALUE_SYM;
            } 
            // fall through
          case 145: break;
          case 66: 
            { return CssElementTypes.CSS_IMPORT_SYM;
            } 
            // fall through
          case 146: break;
          case 67: 
            { return CssElementTypes.CSS_REGION_SYM;
            } 
            // fall through
          case 147: break;
          case 68: 
            { return CssElementTypes.CSS_CHARSET_SYM;
            } 
            // fall through
          case 148: break;
          case 69: 
            { return CssElementTypes.CSS_DOCUMENT_SYM;
            } 
            // fall through
          case 149: break;
          case 70: 
            { return CssElementTypes.CSS_PAGE_MARGIN_SYM;
            } 
            // fall through
          case 150: break;
          case 71: 
            { return CssElementTypes.CSS_SUPPORTS_SYM;
            } 
            // fall through
          case 151: break;
          case 72: 
            { return CssElementTypes.CSS_VIEWPORT_SYM;
            } 
            // fall through
          case 152: break;
          case 73: 
            { return CssElementTypes.CSS_IMPORTANT;
            } 
            // fall through
          case 153: break;
          case 74: 
            { return CssElementTypes.CSS_FONTFACE_SYM;
            } 
            // fall through
          case 154: break;
          case 75: 
            { return CssElementTypes.CSS_KEYFRAMES_SYM;
            } 
            // fall through
          case 155: break;
          case 76: 
            { return CssElementTypes.CSS_NAMESPACE_SYM;
            } 
            // fall through
          case 156: break;
          case 77: 
            { yypushback(1); return CssElementTypes.CSS_EXPRESSION;
            } 
            // fall through
          case 157: break;
          case 78: 
            { return PostCssTokenTypes.POST_CSS_CUSTOM_MEDIA_SYM;
            } 
            // fall through
          case 158: break;
          case 79: 
            { return CssElementTypes.CSS_COUNTER_STYLE_SYM;
            } 
            // fall through
          case 159: break;
          case 80: 
            { return PostCssTokenTypes.POST_CSS_CUSTOM_SELECTOR_SYM;
            } 
            // fall through
          case 160: break;
          default:
            zzScanError(ZZ_NO_MATCH);
          }
      }
    }
  }


}
