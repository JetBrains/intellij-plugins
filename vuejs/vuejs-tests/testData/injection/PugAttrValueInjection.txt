HtmlFile:PugAttrValueInjection.vue
  PsiElement(HTML_DOCUMENT)
    PsiElement(XML_PROLOG)
      <empty list>
    HtmlTag:template
      XmlToken:XML_START_TAG_START('<')
      XmlToken:XML_NAME('template')
      PsiWhiteSpace(' ')
      PsiElement(XML_ATTRIBUTE)
        XmlToken:XML_NAME('lang')
        XmlToken:XML_EQ('=')
        PsiElement(XML_ATTRIBUTE_VALUE)
          XmlToken:XML_ATTRIBUTE_VALUE_START_DELIMITER('"')
          XmlToken:XML_ATTRIBUTE_VALUE_TOKEN('pug')
          XmlToken:XML_ATTRIBUTE_VALUE_END_DELIMITER('"')
      XmlToken:XML_TAG_END('>')
      ASTWrapperPsiElement(JADE_EMBEDDED_WRAPPER: FULL_JADE_EMBEDDED_CONTENT)
        PsiElement(DOCUMENT)
          PsiElement(INDENT)('\n  ')
          JadeTagImpl(TAG)
            XmlToken:XML_TAG_NAME('ul')
            PsiElement(INDENT)('\n    ')
            JadeTagImpl(TAG)
              XmlToken:XML_TAG_NAME('li')
              PsiElement(LPAREN)('(')
              PsiElement(JADE_PSEUDO_WHITESPACE)
                <empty list>
              JadeAttributeImpl(XML_ATTRIBUTE)
                XmlToken:XML_NAME('ref')
                PsiElement(EQ)('=')
                PsiElement(XML_ATTRIBUTE_VALUE)
                  JSInJadeEmbeddedContentImpl:EMBEDDED_EXPRESSION
                    JSLiteralExpression
                      PsiElement(JS:STRING_LITERAL)('"someRef"')
              PsiElement(RPAREN)(')')
            PsiElement(INDENT)('\n    ')
            JadeTagImpl(TAG)
              XmlToken:XML_TAG_NAME('li')
              PsiElement(LPAREN)('(')
              PsiElement(JADE_PSEUDO_WHITESPACE)
                <empty list>
              JadeAttributeImpl(XML_ATTRIBUTE)
                XmlToken:XML_NAME('slot')
                PsiElement(EQ)('=')
                PsiElement(XML_ATTRIBUTE_VALUE)
                  JSInJadeEmbeddedContentImpl:EMBEDDED_EXPRESSION
                    JSLiteralExpression
                      PsiElement(JS:STRING_LITERAL)('"someSlot"')
              PsiElement(RPAREN)(')')
            PsiElement(INDENT)('\n    ')
            JadeTagImpl(TAG)
              XmlToken:XML_TAG_NAME('li')
              PsiElement(LPAREN)('(')
              PsiElement(JADE_PSEUDO_WHITESPACE)
                <empty list>
              JadeAttributeImpl(XML_ATTRIBUTE)
                XmlToken:XML_NAME('slot-scope')
                PsiElement(EQ)('=')
                PsiElement(XML_ATTRIBUTE_VALUE)
                  JSInJadeEmbeddedContentImpl:EMBEDDED_EXPRESSION
                    JSLiteralExpression
                      PsiElement(JS:STRING_LITERAL)('"someSlot"')
                      JSFile:PugAttrValueInjection.vue.slot-scope.expr
                        VueJSEmbeddedExpression
                          VueJSSlotPropsExpression
                            JSParameterList
                              VueJSSlotPropsParameter
                                PsiElement(JS:IDENTIFIER)('someSlot')
                    JSFile:PugAttrValueInjection.vue.slot-scope.expr
                      VueJSEmbeddedExpression
                        VueJSSlotPropsExpression
                          JSParameterList
                            VueJSSlotPropsParameter
                              PsiElement(JS:IDENTIFIER)('someSlot')
                  JSFile:PugAttrValueInjection.vue.slot-scope.expr
                    VueJSEmbeddedExpression
                      VueJSSlotPropsExpression
                        JSParameterList
                          VueJSSlotPropsParameter
                            PsiElement(JS:IDENTIFIER)('someSlot')
              PsiElement(RPAREN)(')')
            PsiElement(INDENT)('\n    ')
            JadeTagImpl(TAG)
              XmlToken:XML_TAG_NAME('li')
              PsiElement(LPAREN)('(')
              PsiElement(JADE_PSEUDO_WHITESPACE)
                <empty list>
              JadeAttributeImpl(XML_ATTRIBUTE)
                XmlToken:XML_NAME('scope')
                PsiElement(EQ)('=')
                PsiElement(XML_ATTRIBUTE_VALUE)
                  JSInJadeEmbeddedContentImpl:EMBEDDED_EXPRESSION
                    JSLiteralExpression
                      PsiElement(JS:STRING_LITERAL)('"someSlotScope"')
              PsiElement(RPAREN)(')')
            PsiElement(INDENT)('\n    ')
            JadeTagImpl(TAG)
              XmlToken:XML_TAG_NAME('li')
              PsiElement(INDENT)('\n      ')
              JadeTagImpl(TAG)
                XmlToken:XML_TAG_NAME('template')
                PsiElement(LPAREN)('(')
                PsiElement(JADE_PSEUDO_WHITESPACE)
                  <empty list>
                JadeAttributeImpl(XML_ATTRIBUTE)
                  XmlToken:XML_NAME('scope')
                  PsiElement(EQ)('=')
                  PsiElement(XML_ATTRIBUTE_VALUE)
                    JSInJadeEmbeddedContentImpl:EMBEDDED_EXPRESSION
                      JSLiteralExpression
                        PsiElement(JS:STRING_LITERAL)('"someSlotScope"')
                        JSFile:PugAttrValueInjection.vue.scope.expr
                          VueJSEmbeddedExpression
                            JSReferenceExpression
                              PsiElement(JS:IDENTIFIER)('someSlotScope')
                      JSFile:PugAttrValueInjection.vue.scope.expr
                        VueJSEmbeddedExpression
                          JSReferenceExpression
                            PsiElement(JS:IDENTIFIER)('someSlotScope')
                    JSFile:PugAttrValueInjection.vue.scope.expr
                      VueJSEmbeddedExpression
                        JSReferenceExpression
                          PsiElement(JS:IDENTIFIER)('someSlotScope')
                PsiElement(RPAREN)(')')
                PsiElement(EOL)('\n')
            PsiElement(INDENT)('\n    ')
            JadeTagImpl(TAG)
              XmlToken:XML_TAG_NAME('li')
              PsiElement(LPAREN)('(')
              PsiElement(JADE_PSEUDO_WHITESPACE)
                <empty list>
              JadeAttributeImpl(XML_ATTRIBUTE)
                XmlToken:XML_NAME('v-text')
                PsiElement(EQ)('=')
                PsiElement(XML_ATTRIBUTE_VALUE)
                  JSInJadeEmbeddedContentImpl:EMBEDDED_EXPRESSION
                    JSLiteralExpression
                      PsiElement(JS:STRING_LITERAL)('"someText"')
                      JSFile:PugAttrValueInjection.vue.v-text.expr
                        VueJSEmbeddedExpression
                          JSReferenceExpression
                            PsiElement(JS:IDENTIFIER)('someText')
                    JSFile:PugAttrValueInjection.vue.v-text.expr
                      VueJSEmbeddedExpression
                        JSReferenceExpression
                          PsiElement(JS:IDENTIFIER)('someText')
                  JSFile:PugAttrValueInjection.vue.v-text.expr
                    VueJSEmbeddedExpression
                      JSReferenceExpression
                        PsiElement(JS:IDENTIFIER)('someText')
              PsiElement(RPAREN)(')')
            PsiElement(INDENT)('\n    ')
            JadeTagImpl(TAG)
              XmlToken:XML_TAG_NAME('li')
              PsiElement(LPAREN)('(')
              PsiElement(JADE_PSEUDO_WHITESPACE)
                <empty list>
              JadeAttributeImpl(XML_ATTRIBUTE)
                XmlToken:XML_NAME('v-html')
                PsiElement(EQ)('=')
                PsiElement(XML_ATTRIBUTE_VALUE)
                  JSInJadeEmbeddedContentImpl:EMBEDDED_EXPRESSION
                    JSLiteralExpression
                      PsiElement(JS:STRING_LITERAL)('"someHtml"')
                      JSFile:PugAttrValueInjection.vue.v-html.expr
                        VueJSEmbeddedExpression
                          JSReferenceExpression
                            PsiElement(JS:IDENTIFIER)('someHtml')
                    JSFile:PugAttrValueInjection.vue.v-html.expr
                      VueJSEmbeddedExpression
                        JSReferenceExpression
                          PsiElement(JS:IDENTIFIER)('someHtml')
                  JSFile:PugAttrValueInjection.vue.v-html.expr
                    VueJSEmbeddedExpression
                      JSReferenceExpression
                        PsiElement(JS:IDENTIFIER)('someHtml')
              PsiElement(RPAREN)(')')
            PsiElement(INDENT)('\n    ')
            JadeTagImpl(TAG)
              XmlToken:XML_TAG_NAME('li')
              PsiElement(LPAREN)('(')
              PsiElement(JADE_PSEUDO_WHITESPACE)
                <empty list>
              JadeAttributeImpl(XML_ATTRIBUTE)
                XmlToken:XML_NAME('v-show')
                PsiElement(EQ)('=')
                PsiElement(XML_ATTRIBUTE_VALUE)
                  JSInJadeEmbeddedContentImpl:EMBEDDED_EXPRESSION
                    JSLiteralExpression
                      PsiElement(JS:STRING_LITERAL)('"someShow"')
                      JSFile:PugAttrValueInjection.vue.v-show.expr
                        VueJSEmbeddedExpression
                          JSReferenceExpression
                            PsiElement(JS:IDENTIFIER)('someShow')
                    JSFile:PugAttrValueInjection.vue.v-show.expr
                      VueJSEmbeddedExpression
                        JSReferenceExpression
                          PsiElement(JS:IDENTIFIER)('someShow')
                  JSFile:PugAttrValueInjection.vue.v-show.expr
                    VueJSEmbeddedExpression
                      JSReferenceExpression
                        PsiElement(JS:IDENTIFIER)('someShow')
              PsiElement(RPAREN)(')')
            PsiElement(INDENT)('\n    ')
            JadeTagImpl(TAG)
              XmlToken:XML_TAG_NAME('li')
              PsiElement(LPAREN)('(')
              PsiElement(JADE_PSEUDO_WHITESPACE)
                <empty list>
              JadeAttributeImpl(XML_ATTRIBUTE)
                XmlToken:XML_NAME('v-if')
                PsiElement(EQ)('=')
                PsiElement(XML_ATTRIBUTE_VALUE)
                  JSInJadeEmbeddedContentImpl:EMBEDDED_EXPRESSION
                    JSLiteralExpression
                      PsiElement(JS:STRING_LITERAL)('"someIf"')
                      JSFile:PugAttrValueInjection.vue.v-if.expr
                        VueJSEmbeddedExpression
                          JSReferenceExpression
                            PsiElement(JS:IDENTIFIER)('someIf')
                    JSFile:PugAttrValueInjection.vue.v-if.expr
                      VueJSEmbeddedExpression
                        JSReferenceExpression
                          PsiElement(JS:IDENTIFIER)('someIf')
                  JSFile:PugAttrValueInjection.vue.v-if.expr
                    VueJSEmbeddedExpression
                      JSReferenceExpression
                        PsiElement(JS:IDENTIFIER)('someIf')
              PsiElement(RPAREN)(')')
            PsiElement(INDENT)('\n    ')
            JadeTagImpl(TAG)
              XmlToken:XML_TAG_NAME('li')
              PsiElement(LPAREN)('(')
              PsiElement(JADE_PSEUDO_WHITESPACE)
                <empty list>
              JadeAttributeImpl(XML_ATTRIBUTE)
                XmlToken:XML_NAME('v-else')
                PsiElement(EQ)('=')
                PsiElement(XML_ATTRIBUTE_VALUE)
                  JSInJadeEmbeddedContentImpl:EMBEDDED_EXPRESSION
                    JSLiteralExpression
                      PsiElement(JS:STRING_LITERAL)('"someElse"')
              PsiElement(RPAREN)(')')
            PsiElement(INDENT)('\n    ')
            JadeTagImpl(TAG)
              XmlToken:XML_TAG_NAME('li')
              PsiElement(LPAREN)('(')
              PsiElement(JADE_PSEUDO_WHITESPACE)
                <empty list>
              JadeAttributeImpl(XML_ATTRIBUTE)
                XmlToken:XML_NAME('v-else-if')
                PsiElement(EQ)('=')
                PsiElement(XML_ATTRIBUTE_VALUE)
                  JSInJadeEmbeddedContentImpl:EMBEDDED_EXPRESSION
                    JSLiteralExpression
                      PsiElement(JS:STRING_LITERAL)('"someElseIf"')
                      JSFile:PugAttrValueInjection.vue.v-else-if.expr
                        VueJSEmbeddedExpression
                          JSReferenceExpression
                            PsiElement(JS:IDENTIFIER)('someElseIf')
                    JSFile:PugAttrValueInjection.vue.v-else-if.expr
                      VueJSEmbeddedExpression
                        JSReferenceExpression
                          PsiElement(JS:IDENTIFIER)('someElseIf')
                  JSFile:PugAttrValueInjection.vue.v-else-if.expr
                    VueJSEmbeddedExpression
                      JSReferenceExpression
                        PsiElement(JS:IDENTIFIER)('someElseIf')
              PsiElement(RPAREN)(')')
            PsiElement(INDENT)('\n    ')
            JadeTagImpl(TAG)
              XmlToken:XML_TAG_NAME('li')
              PsiElement(LPAREN)('(')
              PsiElement(JADE_PSEUDO_WHITESPACE)
                <empty list>
              JadeAttributeImpl(XML_ATTRIBUTE)
                XmlToken:XML_NAME('v-for')
                PsiElement(EQ)('=')
                PsiElement(XML_ATTRIBUTE_VALUE)
                  JSInJadeEmbeddedContentImpl:EMBEDDED_EXPRESSION
                    JSLiteralExpression
                      PsiElement(JS:STRING_LITERAL)('"someFor"')
                      JSFile:PugAttrValueInjection.vue.v-for.expr
                        VueJSEmbeddedExpression
                          VueJSVForExpression
                            JSVarStatement
                              VueJSVForVariable
                                PsiElement(JS:IDENTIFIER)('someFor')
                            PsiErrorElement:'in' or 'of' expected
                              <empty list>
                    JSFile:PugAttrValueInjection.vue.v-for.expr
                      VueJSEmbeddedExpression
                        VueJSVForExpression
                          JSVarStatement
                            VueJSVForVariable
                              PsiElement(JS:IDENTIFIER)('someFor')
                          PsiErrorElement:'in' or 'of' expected
                            <empty list>
                  JSFile:PugAttrValueInjection.vue.v-for.expr
                    VueJSEmbeddedExpression
                      VueJSVForExpression
                        JSVarStatement
                          VueJSVForVariable
                            PsiElement(JS:IDENTIFIER)('someFor')
                        PsiErrorElement:'in' or 'of' expected
                          <empty list>
              PsiElement(RPAREN)(')')
            PsiElement(INDENT)('\n    ')
            JadeTagImpl(TAG)
              XmlToken:XML_TAG_NAME('li')
              PsiElement(LPAREN)('(')
              PsiElement(JADE_PSEUDO_WHITESPACE)
                <empty list>
              JadeAttributeImpl(XML_ATTRIBUTE)
                XmlToken:XML_NAME('v-model')
                PsiElement(EQ)('=')
                PsiElement(XML_ATTRIBUTE_VALUE)
                  JSInJadeEmbeddedContentImpl:EMBEDDED_EXPRESSION
                    JSLiteralExpression
                      PsiElement(JS:STRING_LITERAL)('"someModel"')
                      JSFile:PugAttrValueInjection.vue.v-model.expr
                        VueJSEmbeddedExpression
                          JSReferenceExpression
                            PsiElement(JS:IDENTIFIER)('someModel')
                    JSFile:PugAttrValueInjection.vue.v-model.expr
                      VueJSEmbeddedExpression
                        JSReferenceExpression
                          PsiElement(JS:IDENTIFIER)('someModel')
                  JSFile:PugAttrValueInjection.vue.v-model.expr
                    VueJSEmbeddedExpression
                      JSReferenceExpression
                        PsiElement(JS:IDENTIFIER)('someModel')
              PsiElement(RPAREN)(')')
            PsiElement(INDENT)('\n    ')
            JadeTagImpl(TAG)
              XmlToken:XML_TAG_NAME('li')
              PsiElement(LPAREN)('(')
              PsiElement(JADE_PSEUDO_WHITESPACE)
                <empty list>
              JadeAttributeImpl(XML_ATTRIBUTE)
                XmlToken:XML_NAME('v-pre')
                PsiElement(EQ)('=')
                PsiElement(XML_ATTRIBUTE_VALUE)
                  JSInJadeEmbeddedContentImpl:EMBEDDED_EXPRESSION
                    JSLiteralExpression
                      PsiElement(JS:STRING_LITERAL)('"somePre"')
              PsiElement(RPAREN)(')')
            PsiElement(INDENT)('\n    ')
            JadeTagImpl(TAG)
              XmlToken:XML_TAG_NAME('li')
              PsiElement(LPAREN)('(')
              PsiElement(JADE_PSEUDO_WHITESPACE)
                <empty list>
              JadeAttributeImpl(XML_ATTRIBUTE)
                XmlToken:XML_NAME('v-cloak')
                PsiElement(EQ)('=')
                PsiElement(XML_ATTRIBUTE_VALUE)
                  JSInJadeEmbeddedContentImpl:EMBEDDED_EXPRESSION
                    JSLiteralExpression
                      PsiElement(JS:STRING_LITERAL)('"someCloak"')
              PsiElement(RPAREN)(')')
            PsiElement(INDENT)('\n    ')
            JadeTagImpl(TAG)
              XmlToken:XML_TAG_NAME('li')
              PsiElement(LPAREN)('(')
              PsiElement(JADE_PSEUDO_WHITESPACE)
                <empty list>
              JadeAttributeImpl(XML_ATTRIBUTE)
                XmlToken:XML_NAME('v-once')
                PsiElement(EQ)('=')
                PsiElement(XML_ATTRIBUTE_VALUE)
                  JSInJadeEmbeddedContentImpl:EMBEDDED_EXPRESSION
                    JSLiteralExpression
                      PsiElement(JS:STRING_LITERAL)('"someOnce"')
              PsiElement(RPAREN)(')')
              PsiElement(EOL)('\n')
            PsiElement(INDENT)('\n    ')
            JadeTagImpl(TAG)
              XmlToken:XML_TAG_NAME('li')
              PsiElement(LPAREN)('(')
              PsiElement(JADE_PSEUDO_WHITESPACE)
                <empty list>
              JadeAttributeImpl(XML_ATTRIBUTE)
                XmlToken:XML_NAME('v-slot:header')
                PsiElement(EQ)('=')
                PsiElement(XML_ATTRIBUTE_VALUE)
                  JSInJadeEmbeddedContentImpl:EMBEDDED_EXPRESSION
                    JSLiteralExpression
                      PsiElement(JS:STRING_LITERAL)('"{test}"')
                      JSFile:PugAttrValueInjection.vue.v-slot:header.expr
                        VueJSEmbeddedExpression
                          VueJSSlotPropsExpression
                            JSParameterList
                              JSDestructuringParameter
                                JSDestructuringObject
                                  PsiElement(JS:LBRACE)('{')
                                  JSDestructuringShorthandedProperty
                                    VueJSSlotPropsParameter
                                      PsiElement(JS:IDENTIFIER)('test')
                                  PsiElement(JS:RBRACE)('}')
                    JSFile:PugAttrValueInjection.vue.v-slot:header.expr
                      VueJSEmbeddedExpression
                        VueJSSlotPropsExpression
                          JSParameterList
                            JSDestructuringParameter
                              JSDestructuringObject
                                PsiElement(JS:LBRACE)('{')
                                JSDestructuringShorthandedProperty
                                  VueJSSlotPropsParameter
                                    PsiElement(JS:IDENTIFIER)('test')
                                PsiElement(JS:RBRACE)('}')
                  JSFile:PugAttrValueInjection.vue.v-slot:header.expr
                    VueJSEmbeddedExpression
                      VueJSSlotPropsExpression
                        JSParameterList
                          JSDestructuringParameter
                            JSDestructuringObject
                              PsiElement(JS:LBRACE)('{')
                              JSDestructuringShorthandedProperty
                                VueJSSlotPropsParameter
                                  PsiElement(JS:IDENTIFIER)('test')
                              PsiElement(JS:RBRACE)('}')
              PsiElement(RPAREN)(')')
            PsiElement(INDENT)('\n    ')
            JadeTagImpl(TAG)
              XmlToken:XML_TAG_NAME('li')
              PsiElement(LPAREN)('(')
              PsiElement(JADE_PSEUDO_WHITESPACE)
                <empty list>
              JadeAttributeImpl(XML_ATTRIBUTE)
                XmlToken:XML_NAME('#header')
                PsiElement(EQ)('=')
                PsiElement(XML_ATTRIBUTE_VALUE)
                  JSInJadeEmbeddedContentImpl:EMBEDDED_EXPRESSION
                    JSLiteralExpression
                      PsiElement(JS:STRING_LITERAL)('"{test}"')
                      JSFile:PugAttrValueInjection.vue.#header.expr
                        VueJSEmbeddedExpression
                          VueJSSlotPropsExpression
                            JSParameterList
                              JSDestructuringParameter
                                JSDestructuringObject
                                  PsiElement(JS:LBRACE)('{')
                                  JSDestructuringShorthandedProperty
                                    VueJSSlotPropsParameter
                                      PsiElement(JS:IDENTIFIER)('test')
                                  PsiElement(JS:RBRACE)('}')
                    JSFile:PugAttrValueInjection.vue.#header.expr
                      VueJSEmbeddedExpression
                        VueJSSlotPropsExpression
                          JSParameterList
                            JSDestructuringParameter
                              JSDestructuringObject
                                PsiElement(JS:LBRACE)('{')
                                JSDestructuringShorthandedProperty
                                  VueJSSlotPropsParameter
                                    PsiElement(JS:IDENTIFIER)('test')
                                PsiElement(JS:RBRACE)('}')
                  JSFile:PugAttrValueInjection.vue.#header.expr
                    VueJSEmbeddedExpression
                      VueJSSlotPropsExpression
                        JSParameterList
                          JSDestructuringParameter
                            JSDestructuringObject
                              PsiElement(JS:LBRACE)('{')
                              JSDestructuringShorthandedProperty
                                VueJSSlotPropsParameter
                                  PsiElement(JS:IDENTIFIER)('test')
                              PsiElement(JS:RBRACE)('}')
              PsiElement(RPAREN)(')')
              PsiElement(EOL)('\n')
            PsiElement(INDENT)('\n    ')
            JadeTagImpl(TAG)
              XmlToken:XML_TAG_NAME('li')
              PsiElement(LPAREN)('(')
              PsiElement(JADE_PSEUDO_WHITESPACE)
                <empty list>
              JadeAttributeImpl(XML_ATTRIBUTE)
                XmlToken:XML_NAME('v-on:click')
                PsiElement(EQ)('=')
                PsiElement(XML_ATTRIBUTE_VALUE)
                  JSInJadeEmbeddedContentImpl:EMBEDDED_EXPRESSION
                    JSLiteralExpression
                      PsiElement(JS:STRING_LITERAL)('"someOn"')
                      JSFile:PugAttrValueInjection.vue.v-on:click.expr
                        VueJSEmbeddedExpression
                          JSExpressionStatement
                            JSReferenceExpression
                              PsiElement(JS:IDENTIFIER)('someOn')
                    JSFile:PugAttrValueInjection.vue.v-on:click.expr
                      VueJSEmbeddedExpression
                        JSExpressionStatement
                          JSReferenceExpression
                            PsiElement(JS:IDENTIFIER)('someOn')
                  JSFile:PugAttrValueInjection.vue.v-on:click.expr
                    VueJSEmbeddedExpression
                      JSExpressionStatement
                        JSReferenceExpression
                          PsiElement(JS:IDENTIFIER)('someOn')
              PsiElement(RPAREN)(')')
            PsiElement(INDENT)('\n    ')
            JadeTagImpl(TAG)
              XmlToken:XML_TAG_NAME('li')
              PsiElement(LPAREN)('(')
              PsiElement(JADE_PSEUDO_WHITESPACE)
                <empty list>
              JadeAttributeImpl(XML_ATTRIBUTE)
                XmlToken:XML_NAME('v-on:click.ctrl.capture')
                PsiElement(EQ)('=')
                PsiElement(XML_ATTRIBUTE_VALUE)
                  JSInJadeEmbeddedContentImpl:EMBEDDED_EXPRESSION
                    JSLiteralExpression
                      PsiElement(JS:STRING_LITERAL)('"someOn"')
                      JSFile:PugAttrValueInjection.vue.v-on:click ctrl capture.expr
                        VueJSEmbeddedExpression
                          JSExpressionStatement
                            JSReferenceExpression
                              PsiElement(JS:IDENTIFIER)('someOn')
                    JSFile:PugAttrValueInjection.vue.v-on:click ctrl capture.expr
                      VueJSEmbeddedExpression
                        JSExpressionStatement
                          JSReferenceExpression
                            PsiElement(JS:IDENTIFIER)('someOn')
                  JSFile:PugAttrValueInjection.vue.v-on:click ctrl capture.expr
                    VueJSEmbeddedExpression
                      JSExpressionStatement
                        JSReferenceExpression
                          PsiElement(JS:IDENTIFIER)('someOn')
              PsiElement(RPAREN)(')')
            PsiElement(INDENT)('\n    ')
            JadeTagImpl(TAG)
              XmlToken:XML_TAG_NAME('li')
              PsiElement(LPAREN)('(')
              PsiElement(JADE_PSEUDO_WHITESPACE)
                <empty list>
              JadeAttributeImpl(XML_ATTRIBUTE)
                XmlToken:XML_NAME('@click')
                PsiElement(EQ)('=')
                PsiElement(XML_ATTRIBUTE_VALUE)
                  JSInJadeEmbeddedContentImpl:EMBEDDED_EXPRESSION
                    JSLiteralExpression
                      PsiElement(JS:STRING_LITERAL)('"someOn"')
                      JSFile:PugAttrValueInjection.vue.@click.expr
                        VueJSEmbeddedExpression
                          JSExpressionStatement
                            JSReferenceExpression
                              PsiElement(JS:IDENTIFIER)('someOn')
                    JSFile:PugAttrValueInjection.vue.@click.expr
                      VueJSEmbeddedExpression
                        JSExpressionStatement
                          JSReferenceExpression
                            PsiElement(JS:IDENTIFIER)('someOn')
                  JSFile:PugAttrValueInjection.vue.@click.expr
                    VueJSEmbeddedExpression
                      JSExpressionStatement
                        JSReferenceExpression
                          PsiElement(JS:IDENTIFIER)('someOn')
              PsiElement(RPAREN)(')')
            PsiElement(INDENT)('\n    ')
            JadeTagImpl(TAG)
              XmlToken:XML_TAG_NAME('li')
              PsiElement(LPAREN)('(')
              PsiElement(JADE_PSEUDO_WHITESPACE)
                <empty list>
              JadeAttributeImpl(XML_ATTRIBUTE)
                XmlToken:XML_NAME('@click.stop')
                PsiElement(EQ)('=')
                PsiElement(XML_ATTRIBUTE_VALUE)
                  JSInJadeEmbeddedContentImpl:EMBEDDED_EXPRESSION
                    JSLiteralExpression
                      PsiElement(JS:STRING_LITERAL)('"someOn"')
                      JSFile:PugAttrValueInjection.vue.@click stop.expr
                        VueJSEmbeddedExpression
                          JSExpressionStatement
                            JSReferenceExpression
                              PsiElement(JS:IDENTIFIER)('someOn')
                    JSFile:PugAttrValueInjection.vue.@click stop.expr
                      VueJSEmbeddedExpression
                        JSExpressionStatement
                          JSReferenceExpression
                            PsiElement(JS:IDENTIFIER)('someOn')
                  JSFile:PugAttrValueInjection.vue.@click stop.expr
                    VueJSEmbeddedExpression
                      JSExpressionStatement
                        JSReferenceExpression
                          PsiElement(JS:IDENTIFIER)('someOn')
              PsiElement(RPAREN)(')')
              PsiElement(EOL)('\n')
            PsiElement(INDENT)('\n    ')
            JadeTagImpl(TAG)
              XmlToken:XML_TAG_NAME('li')
              PsiElement(LPAREN)('(')
              PsiElement(JADE_PSEUDO_WHITESPACE)
                <empty list>
              JadeAttributeImpl(XML_ATTRIBUTE)
                XmlToken:XML_NAME('v-bind')
                PsiElement(EQ)('=')
                PsiElement(XML_ATTRIBUTE_VALUE)
                  JSInJadeEmbeddedContentImpl:EMBEDDED_EXPRESSION
                    JSLiteralExpression
                      PsiElement(JS:STRING_LITERAL)('"someBind"')
                      JSFile:PugAttrValueInjection.vue.v-bind.expr
                        VueJSEmbeddedExpression
                          JSReferenceExpression
                            PsiElement(JS:IDENTIFIER)('someBind')
                    JSFile:PugAttrValueInjection.vue.v-bind.expr
                      VueJSEmbeddedExpression
                        JSReferenceExpression
                          PsiElement(JS:IDENTIFIER)('someBind')
                  JSFile:PugAttrValueInjection.vue.v-bind.expr
                    VueJSEmbeddedExpression
                      JSReferenceExpression
                        PsiElement(JS:IDENTIFIER)('someBind')
              PsiElement(RPAREN)(')')
            PsiElement(INDENT)('\n    ')
            JadeTagImpl(TAG)
              XmlToken:XML_TAG_NAME('li')
              PsiElement(LPAREN)('(')
              PsiElement(JADE_PSEUDO_WHITESPACE)
                <empty list>
              JadeAttributeImpl(XML_ATTRIBUTE)
                XmlToken:XML_NAME('v-bind:key')
                PsiElement(EQ)('=')
                PsiElement(XML_ATTRIBUTE_VALUE)
                  JSInJadeEmbeddedContentImpl:EMBEDDED_EXPRESSION
                    JSLiteralExpression
                      PsiElement(JS:STRING_LITERAL)('"someBind"')
                      JSFile:PugAttrValueInjection.vue.v-bind:key.expr
                        VueJSEmbeddedExpression
                          JSReferenceExpression
                            PsiElement(JS:IDENTIFIER)('someBind')
                    JSFile:PugAttrValueInjection.vue.v-bind:key.expr
                      VueJSEmbeddedExpression
                        JSReferenceExpression
                          PsiElement(JS:IDENTIFIER)('someBind')
                  JSFile:PugAttrValueInjection.vue.v-bind:key.expr
                    VueJSEmbeddedExpression
                      JSReferenceExpression
                        PsiElement(JS:IDENTIFIER)('someBind')
              PsiElement(RPAREN)(')')
            PsiElement(INDENT)('\n    ')
            JadeTagImpl(TAG)
              XmlToken:XML_TAG_NAME('li')
              PsiElement(LPAREN)('(')
              PsiElement(JADE_PSEUDO_WHITESPACE)
                <empty list>
              JadeAttributeImpl(XML_ATTRIBUTE)
                XmlToken:XML_NAME('v-bind:is')
                PsiElement(EQ)('=')
                PsiElement(XML_ATTRIBUTE_VALUE)
                  JSInJadeEmbeddedContentImpl:EMBEDDED_EXPRESSION
                    JSLiteralExpression
                      PsiElement(JS:STRING_LITERAL)('"someBind"')
                      JSFile:PugAttrValueInjection.vue.v-bind:is.expr
                        VueJSEmbeddedExpression
                          JSReferenceExpression
                            PsiElement(JS:IDENTIFIER)('someBind')
                    JSFile:PugAttrValueInjection.vue.v-bind:is.expr
                      VueJSEmbeddedExpression
                        JSReferenceExpression
                          PsiElement(JS:IDENTIFIER)('someBind')
                  JSFile:PugAttrValueInjection.vue.v-bind:is.expr
                    VueJSEmbeddedExpression
                      JSReferenceExpression
                        PsiElement(JS:IDENTIFIER)('someBind')
              PsiElement(RPAREN)(')')
            PsiElement(INDENT)('\n    ')
            JadeTagImpl(TAG)
              XmlToken:XML_TAG_NAME('li')
              PsiElement(LPAREN)('(')
              PsiElement(JADE_PSEUDO_WHITESPACE)
                <empty list>
              JadeAttributeImpl(XML_ATTRIBUTE)
                XmlToken:XML_NAME('v-bind:align')
                PsiElement(EQ)('=')
                PsiElement(XML_ATTRIBUTE_VALUE)
                  JSInJadeEmbeddedContentImpl:EMBEDDED_EXPRESSION
                    JSLiteralExpression
                      PsiElement(JS:STRING_LITERAL)('"someBind"')
                      JSFile:PugAttrValueInjection.vue.v-bind:align.expr
                        VueJSEmbeddedExpression
                          JSReferenceExpression
                            PsiElement(JS:IDENTIFIER)('someBind')
                    JSFile:PugAttrValueInjection.vue.v-bind:align.expr
                      VueJSEmbeddedExpression
                        JSReferenceExpression
                          PsiElement(JS:IDENTIFIER)('someBind')
                  JSFile:PugAttrValueInjection.vue.v-bind:align.expr
                    VueJSEmbeddedExpression
                      JSReferenceExpression
                        PsiElement(JS:IDENTIFIER)('someBind')
              PsiElement(RPAREN)(')')
            PsiElement(INDENT)('\n    ')
            JadeTagImpl(TAG)
              XmlToken:XML_TAG_NAME('li')
              PsiElement(LPAREN)('(')
              PsiElement(JADE_PSEUDO_WHITESPACE)
                <empty list>
              JadeAttributeImpl(XML_ATTRIBUTE)
                XmlToken:XML_NAME(':key')
                PsiElement(EQ)('=')
                PsiElement(XML_ATTRIBUTE_VALUE)
                  JSInJadeEmbeddedContentImpl:EMBEDDED_EXPRESSION
                    JSLiteralExpression
                      PsiElement(JS:STRING_LITERAL)('"someBind"')
                      JSFile:PugAttrValueInjection.vue.:key.expr
                        VueJSEmbeddedExpression
                          JSReferenceExpression
                            PsiElement(JS:IDENTIFIER)('someBind')
                    JSFile:PugAttrValueInjection.vue.:key.expr
                      VueJSEmbeddedExpression
                        JSReferenceExpression
                          PsiElement(JS:IDENTIFIER)('someBind')
                  JSFile:PugAttrValueInjection.vue.:key.expr
                    VueJSEmbeddedExpression
                      JSReferenceExpression
                        PsiElement(JS:IDENTIFIER)('someBind')
              PsiElement(RPAREN)(')')
            PsiElement(INDENT)('\n    ')
            JadeTagImpl(TAG)
              XmlToken:XML_TAG_NAME('li')
              PsiElement(LPAREN)('(')
              PsiElement(JADE_PSEUDO_WHITESPACE)
                <empty list>
              JadeAttributeImpl(XML_ATTRIBUTE)
                XmlToken:XML_NAME(':is')
                PsiElement(EQ)('=')
                PsiElement(XML_ATTRIBUTE_VALUE)
                  JSInJadeEmbeddedContentImpl:EMBEDDED_EXPRESSION
                    JSLiteralExpression
                      PsiElement(JS:STRING_LITERAL)('"someBind"')
                      JSFile:PugAttrValueInjection.vue.:is.expr
                        VueJSEmbeddedExpression
                          JSReferenceExpression
                            PsiElement(JS:IDENTIFIER)('someBind')
                    JSFile:PugAttrValueInjection.vue.:is.expr
                      VueJSEmbeddedExpression
                        JSReferenceExpression
                          PsiElement(JS:IDENTIFIER)('someBind')
                  JSFile:PugAttrValueInjection.vue.:is.expr
                    VueJSEmbeddedExpression
                      JSReferenceExpression
                        PsiElement(JS:IDENTIFIER)('someBind')
              PsiElement(RPAREN)(')')
            PsiElement(INDENT)('\n    ')
            JadeTagImpl(TAG)
              XmlToken:XML_TAG_NAME('li')
              PsiElement(LPAREN)('(')
              PsiElement(JADE_PSEUDO_WHITESPACE)
                <empty list>
              JadeAttributeImpl(XML_ATTRIBUTE)
                XmlToken:XML_NAME(':align')
                PsiElement(EQ)('=')
                PsiElement(XML_ATTRIBUTE_VALUE)
                  JSInJadeEmbeddedContentImpl:EMBEDDED_EXPRESSION
                    JSLiteralExpression
                      PsiElement(JS:STRING_LITERAL)('"someBind"')
                      JSFile:PugAttrValueInjection.vue.:align.expr
                        VueJSEmbeddedExpression
                          JSReferenceExpression
                            PsiElement(JS:IDENTIFIER)('someBind')
                    JSFile:PugAttrValueInjection.vue.:align.expr
                      VueJSEmbeddedExpression
                        JSReferenceExpression
                          PsiElement(JS:IDENTIFIER)('someBind')
                  JSFile:PugAttrValueInjection.vue.:align.expr
                    VueJSEmbeddedExpression
                      JSReferenceExpression
                        PsiElement(JS:IDENTIFIER)('someBind')
              PsiElement(RPAREN)(')')
          PsiElement(EOL)('\n')
      XmlToken:XML_END_TAG_START('</')
      XmlToken:XML_NAME('template')
      XmlToken:XML_TAG_END('>')
    PsiWhiteSpace('\n')