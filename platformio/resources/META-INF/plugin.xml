<idea-plugin>
  <id>intellij.clion.embedded.platformio</id>
  <name>PlatformIO for CLion</name>
  <vendor>JetBrains</vendor>
  <category>Embedded Development</category>

  <description><![CDATA[
<p>Provides support for <a href="https://platformio.org/">PlatformIO</a> projects in CLion:</p>
<ul>
<li>Creating and opening PlatformIO projects</li>
<li>Integrated PlatformIO commands</li>
<li>Dedicated configuration for upload</li>
<li>Debugging with .svd files loaded automatically</li>
</ul>
<!-- todo enable when updated
<p>Documentation links:</p>

<p><a href="https://docs.platformio.org/en/latest/integration/ide/clion.html">PlatformIO CLion guide</a></p>
<p><a href="https://www.jetbrains.com/help/clion/platformio.html">CLion web help guide</a></p>
-->
]]>
  </description>

  <depends>com.intellij.cidr.base</depends>
  <depends>com.intellij.modules.clion</depends>
  <depends>com.intellij.modules.externalSystem</depends>
  <depends>com.intellij.clion.embedded</depends>
  <depends>com.jetbrains.plugins.ini4idea</depends>
  <depends optional="true" config-file="terminal-dep.xml">org.jetbrains.plugins.terminal</depends>

  <extensions defaultExtensionNs="com.intellij">
    <configurationType order="last" id="platformio"
                       implementation="com.jetbrains.cidr.cpp.embedded.platformio.PlatformioConfigurationType"/>
    <fileType id="platformio" name="platformio" fileNames="platformio.ini" fieldName="INSTANCE" language="Ini"
              implementationClass="com.jetbrains.cidr.cpp.embedded.platformio.PlatformioFileType"/>
    <stepsBeforeRunProvider implementation="com.jetbrains.cidr.cpp.embedded.platformio.PlatformioCleanBeforeRunTaskProvider"/>
    <stepsBeforeRunProvider implementation="com.jetbrains.cidr.cpp.embedded.platformio.PlatformioUploadBeforeRunTaskProvider"/>
    <stepsBeforeRunProvider implementation="com.jetbrains.cidr.cpp.embedded.platformio.PlatformioDebugBuildBeforeRunTaskProvider"/>
    <notificationGroup id="PlatformIO plugin" displayType="BALLOON" bundle="messages.ClionEmbeddedPlatformioBundle"
                       key="notification.group.platformio"/>
    <applicationConfigurable order="last" id="clion.platformio.config"
                             instance="com.jetbrains.cidr.cpp.embedded.platformio.PlatformioConfigurable"
                             bundle="messages.ClionEmbeddedPlatformioBundle"
                             key="configurable.ClionEmbeddedPlatformioBundle.display.name"
                             groupId="language"/>
    <statistics.counterUsagesCollector implementationClass="com.jetbrains.cidr.cpp.embedded.platformio.PlatformioUsagesCollector"/>
    <projectService serviceImplementation="com.jetbrains.cidr.cpp.embedded.platformio.PlatformioSvdWindowState"/>
    <projectOpenProcessor id="PlatformioProjectOpenProcessor"
                          implementation="com.jetbrains.cidr.cpp.embedded.platformio.project.PlatformioProjectOpenProcessor"/>
    <externalSystemManager implementation="com.jetbrains.cidr.cpp.embedded.platformio.project.PlatformioManager"/>
    <projectTaskRunner implementation="com.jetbrains.cidr.cpp.embedded.platformio.project.builds.PlatformioProjectTaskRunner"
                       id="PlatformioProjectTaskRunner"/>
    <registryKey key="PlatformIO.system.in.process" defaultValue="true" restartRequired="true"
                 description="Whether IDE should use 'in-process' mode for PlatformIO"/>
    <registryKey key="PlatformIO.use.webview" defaultValue="false" restartRequired="false"
                 description="Whether IDE should display `pio home` in a dialog and use `pio home` for new project creation"/>
    <externalIconProvider key="PlatformIO" implementationClass="com.jetbrains.cidr.cpp.embedded.platformio.project.PlatformioIconProvider"/>
    <postStartupActivity implementation="com.jetbrains.cidr.cpp.embedded.platformio.project.PlatformioWorkspace$PlatformioStartupActivity"/>
    <fileTypeOverrider implementation="com.jetbrains.cidr.cpp.embedded.platformio.project.PlatformioFileTypeDetector"/>
    <executionTargetProvider implementation="com.jetbrains.cidr.cpp.embedded.platformio.project.PlatformioExecutionTargetProvider"/>
    <directoryProjectGenerator implementation="com.jetbrains.cidr.cpp.embedded.platformio.project.PlatformioProjectGenerator"
                               id="jetbrains.cidr.platformio" order="after jetbrains.cidr.stm32cubemx"/>
    <toolWindow id="PlatformIO" anchor="right" icon="ClionEmbeddedPlatformioIcons.ToolWindowPlatformIO"
                factoryClass="com.jetbrains.cidr.cpp.embedded.platformio.ui.PlatformioToolWindowFactory"/>
    <project.converterProvider
      implementation="com.jetbrains.cidr.cpp.embedded.platformio.project.migration.PlatformioProjectMigrationProvider"
      id="clion.platformio.experimental.convert"/>
    <treeStructureProvider implementation="com.jetbrains.cidr.cpp.embedded.platformio.project.PlatformioSourcesStructureProvider"/>
    <projectViewNodeDecorator implementation="com.jetbrains.cidr.cpp.embedded.platformio.project.PlatformioLibraryPathNodeDecorator"/>
  </extensions>

  <extensions defaultExtensionNs="clion">
    <compoundConfigurationContext
      implementation="com.jetbrains.cidr.cpp.embedded.platformio.project.builds.PlatformioConfigurationContext"/>
  </extensions>
  <extensions defaultExtensionNs="cidr">
    <buildConfigurationProvider
      implementation="com.jetbrains.cidr.cpp.embedded.platformio.project.builds.PlatformioBuildConfigurationProvider"/>
    <project.workspaceProvider implementation="com.jetbrains.cidr.cpp.embedded.platformio.project.PlatformioWorkspaceProvider"/>
  </extensions>

  <actions>
    <action class="com.jetbrains.cidr.cpp.embedded.platformio.ui.PlatformioRefreshAction"
            id="PlatformioRefreshAction"/>
    <group id="platformio-group" popup="false">
      <reference id="PlatformioRefreshAction"/>
      <action class="com.jetbrains.cidr.cpp.embedded.platformio.ui.PlatformioCheckAction"
              id="PlatformioCheckAction"/>
      <action class="com.jetbrains.cidr.cpp.embedded.platformio.ui.PlatformioMonitorAction"
              id="PlatformioMonitorAction"/>
      <action class="com.jetbrains.cidr.cpp.embedded.platformio.ui.PlatformioPkgUpdateAction"
              id="PlatformioPkgUpdateAction"/>
      <action class="com.jetbrains.cidr.cpp.embedded.platformio.home.PlatformioHomeAction"
              id="PlatformioHomeAction"/>
    </group>
    <group id="platformio-group-tools-popup" popup="true"
           class="com.jetbrains.cidr.cpp.embedded.platformio.ui.PlatformioActionGroup"
           icon="ClionEmbeddedPlatformioIcons.LogoPlatformIO">
      <reference id="platformio-group"/>
      <add-to-group group-id="ToolsMenu" anchor="last"/>
    </group>
    <group id="platformio-group-file-popup" popup="true"
           class="com.jetbrains.cidr.cpp.embedded.platformio.ui.PlatformioActionGroup"
           icon="ClionEmbeddedPlatformioIcons.LogoPlatformIO">
      <reference id="platformio-group"/>
      <add-to-group group-id="ProjectViewPopupMenuRunGroup"/>
    </group>
    <action id="target-platformio-upload" class="com.jetbrains.cidr.cpp.embedded.platformio.ui.PlatformioUploadAction"/>
    <action id="target-platformio-upload-monitor" class="com.jetbrains.cidr.cpp.embedded.platformio.ui.PlatformioUploadMonitorAction"/>
  </actions>
  <resource-bundle>messages.ClionEmbeddedPlatformioBundle</resource-bundle>
</idea-plugin>
