Dart File
  PsiComment(SINGLE_LINE_COMMENT)('#! program comment')
  LIBRARY_STATEMENT
    PsiElement(library)('library')
    LIBRARY_NAME_ELEMENT
      ID
        PsiElement(IDENTIFIER)('test')
    PsiElement(;)(';')
  PsiComment(SINGLE_LINE_COMMENT)('// line comment')
  PsiComment(SINGLE_LINE_DOC_COMMENT)('/// line doc comment')
  PsiComment(MULTI_LINE_COMMENT)('/**/')
  PsiComment(MULTI_LINE_COMMENT)('/***/')
  PsiComment(MULTI_LINE_COMMENT)('/***************/')
  DartDocCommentImpl(MULTI_LINE_DOC_COMMENT)
    PsiElement(MULTI_LINE_DOC_COMMENT_START)('/**')
    PsiElement(MULTI_LINE_COMMENT_BODY)('****')
    PsiElement(DOC_COMMENT_LEADING_ASTERISK)('*')
    PsiElement(MULTI_LINE_COMMENT_BODY)('******')
    PsiElement(MULTI_LINE_COMMENT_END)('*/')
  PsiComment(MULTI_LINE_COMMENT)('/* * / * / * * * / / / ** // ** // ** ** ** // // // */')
  DartDocCommentImpl(MULTI_LINE_DOC_COMMENT)
    PsiElement(MULTI_LINE_DOC_COMMENT_START)('/**')
    PsiElement(DOC_COMMENT_LEADING_ASTERISK)('*')
    PsiElement(MULTI_LINE_COMMENT_BODY)('*** doc')
    PsiElement(DOC_COMMENT_LEADING_ASTERISK)('*')
    PsiElement(DOC_COMMENT_LEADING_ASTERISK)('*')
    PsiElement(MULTI_LINE_COMMENT_BODY)('/*')
    PsiElement(MULTI_LINE_COMMENT_BODY)('*/')
    PsiElement(MULTI_LINE_COMMENT_END)('*/')
  PsiComment(MULTI_LINE_COMMENT)('/*\n comment\n*/')
  PsiComment(MULTI_LINE_COMMENT)('/*//////*/\n*/*/')
  PsiComment(MULTI_LINE_COMMENT)('/*/**//******//*/*\n*/****/*/')
  DartDocCommentImpl(MULTI_LINE_DOC_COMMENT)
    PsiElement(MULTI_LINE_DOC_COMMENT_START)('/**')
    PsiElement(MULTI_LINE_COMMENT_BODY)('  /*   */*  ')
    PsiElement(MULTI_LINE_COMMENT_END)('*/')
  PsiComment(MULTI_LINE_COMMENT)('/*\n/*/ * /*/ * * * / / / * / * /////*/\n*/*/****////\n*/')
  VAR_DECLARATION_LIST
    VAR_ACCESS_DECLARATION
      PsiElement(var)('var')
      COMPONENT_NAME
        ID
          PsiElement(IDENTIFIER)('a')
    VAR_INIT
      PsiElement(=)('=')
      STRING_LITERAL_EXPRESSION
        PsiElement(OPEN_QUOTE)('"')
        LONG_TEMPLATE_ENTRY
          PsiElement(LONG_TEMPLATE_ENTRY_START)('${')
          MAP_LITERAL_EXPRESSION
            PsiElement({)('{')
            PsiComment(SINGLE_LINE_COMMENT)('// line comment')
            PsiComment(SINGLE_LINE_DOC_COMMENT)('/// line doc comment')
            PsiComment(MULTI_LINE_COMMENT)('/**/')
            PsiComment(MULTI_LINE_COMMENT)('/***/')
            PsiComment(MULTI_LINE_COMMENT)('/***************/')
            DartDocCommentImpl(MULTI_LINE_DOC_COMMENT)
              PsiElement(MULTI_LINE_DOC_COMMENT_START)('/**')
              PsiElement(MULTI_LINE_COMMENT_BODY)('****')
              PsiElement(DOC_COMMENT_LEADING_ASTERISK)('*')
              PsiElement(MULTI_LINE_COMMENT_BODY)('******')
              PsiElement(MULTI_LINE_COMMENT_END)('*/')
            PsiComment(MULTI_LINE_COMMENT)('/* * / * / * * * / / / ** // ** // ** ** ** // // // */')
            DartDocCommentImpl(MULTI_LINE_DOC_COMMENT)
              PsiElement(MULTI_LINE_DOC_COMMENT_START)('/**')
              PsiElement(DOC_COMMENT_LEADING_ASTERISK)('*')
              PsiElement(MULTI_LINE_COMMENT_BODY)(' doc')
              PsiElement(MULTI_LINE_COMMENT_END)('*/')
            PsiComment(MULTI_LINE_COMMENT)('/*\n comment\n*/')
            PsiComment(MULTI_LINE_COMMENT)('/*//////*/\n*/*/')
            PsiElement(})('}')
          PsiComment(MULTI_LINE_COMMENT)('/*/**//******//*/*\n*/****/*/')
          DartDocCommentImpl(MULTI_LINE_DOC_COMMENT)
            PsiElement(MULTI_LINE_DOC_COMMENT_START)('/**')
            PsiElement(MULTI_LINE_COMMENT_BODY)('  /*   */*  ')
            PsiElement(MULTI_LINE_COMMENT_END)('*/')
          PsiComment(MULTI_LINE_COMMENT)('/*\n/*/ * /*/ * * * / / / * / * /////*/\n*/*/****////\n*/')
          PsiElement(LONG_TEMPLATE_ENTRY_END)('}')
        PsiElement(REGULAR_STRING_PART)('}}')
        PsiElement(CLOSING_QUOTE)('"')
  PsiElement(;)(';')
  CLASS_DEFINITION
    PsiElement(class)('class')
    COMPONENT_NAME
      ID
        PsiElement(IDENTIFIER)('Logger')
    CLASS_BODY
      PsiElement({)('{')
      PsiComment(SINGLE_LINE_COMMENT)('// Use display in a const expression:')
      CLASS_MEMBERS
        VAR_DECLARATION_LIST
          VAR_ACCESS_DECLARATION
            PsiElement(static)('static')
            PsiElement(const)('const')
            COMPONENT_NAME
              ID
                PsiElement(IDENTIFIER)('defaultLogger')
          VAR_INIT
            PsiElement(=)('=')
            NEW_EXPRESSION
              PsiElement(const)('const')
              TYPE
                SIMPLE_TYPE
                  REFERENCE_EXPRESSION
                    ID
                      PsiElement(IDENTIFIER)('Logger')
              ARGUMENTS
                PsiElement(()('(')
                ARGUMENT_LIST
                  REFERENCE_EXPRESSION
                    ID
                      PsiElement(IDENTIFIER)('display')
                PsiElement())(')')
        PsiElement(;)(';')
        VAR_DECLARATION_LIST
          VAR_ACCESS_DECLARATION
            PsiElement(final)('final')
            COMPONENT_NAME
              ID
                PsiElement(IDENTIFIER)('logCallback')
        PsiElement(;)(';')
        METHOD_DECLARATION
          PsiElement(const)('const')
          COMPONENT_NAME
            ID
              PsiElement(IDENTIFIER)('Logger')
          FORMAL_PARAMETER_LIST
            PsiElement(()('(')
            NORMAL_FORMAL_PARAMETER
              FIELD_FORMAL_PARAMETER
                PsiElement(this)('this')
                PsiElement(.)('.')
                REFERENCE_EXPRESSION
                  ID
                    PsiElement(IDENTIFIER)('logCallback')
            PsiElement())(')')
          PsiElement(;)(';')
      PsiElement(})('}')
  CLASS_DEFINITION
    PsiElement(abstract)('abstract')
    PsiElement(class)('class')
    COMPONENT_NAME
      ID
        PsiElement(IDENTIFIER)('A')
    CLASS_BODY
      PsiElement({)('{')
      CLASS_MEMBERS
        <empty list>
      PsiElement(})('}')
  CLASS_DEFINITION
    PsiElement(class)('class')
    COMPONENT_NAME
      ID
        PsiElement(IDENTIFIER)('SomeClass')
    CLASS_BODY
      PsiElement({)('{')
      CLASS_MEMBERS
        VAR_DECLARATION_LIST
          VAR_ACCESS_DECLARATION
            PsiElement(static)('static')
            PsiElement(final)('final')
            COMPONENT_NAME
              ID
                PsiElement(IDENTIFIER)('someConstant')
          VAR_INIT
            PsiElement(=)('=')
            LITERAL_EXPRESSION
              PsiElement(NUMBER)('123')
        PsiElement(;)(';')
        VAR_DECLARATION_LIST
          VAR_ACCESS_DECLARATION
            PsiElement(static)('static')
            PsiElement(final)('final')
            COMPONENT_NAME
              ID
                PsiElement(IDENTIFIER)('aConstList')
          VAR_INIT
            PsiElement(=)('=')
            LIST_LITERAL_EXPRESSION
              PsiElement(const)('const')
              PsiElement([)('[')
              EXPRESSION_LIST
                REFERENCE_EXPRESSION
                  ID
                    PsiElement(IDENTIFIER)('someConstant')
              PsiElement(])(']')
        PsiElement(;)(';')
      PsiElement(})('}')
  FUNCTION_DECLARATION_WITH_BODY_OR_NATIVE
    COMPONENT_NAME
      ID
        PsiElement(IDENTIFIER)('main')
    FORMAL_PARAMETER_LIST
      PsiElement(()('(')
      PsiElement())(')')
    FUNCTION_BODY
      LAZY_PARSEABLE_BLOCK
        PsiElement({)('{')
        STATEMENTS
          VAR_DECLARATION_LIST
            VAR_ACCESS_DECLARATION
              PsiElement(var)('var')
              COMPONENT_NAME
                ID
                  PsiElement(on)('on')
            VAR_INIT
              PsiElement(=)('=')
              STRING_LITERAL_EXPRESSION
                PsiElement(RAW_SINGLE_QUOTED_STRING)('r"set"')
          PsiElement(;)(';')
          CALL_EXPRESSION
            REFERENCE_EXPRESSION
              REFERENCE_EXPRESSION
                ID
                  PsiElement(on)('on')
              PsiElement(.)('.')
              REFERENCE_EXPRESSION
                ID
                  PsiElement(IDENTIFIER)('split')
            ARGUMENTS
              PsiElement(()('(')
              ARGUMENT_LIST
                STRING_LITERAL_EXPRESSION
                  PsiElement(OPEN_QUOTE)('"')
                  PsiElement(REGULAR_STRING_PART)(' ')
                  PsiElement(CLOSING_QUOTE)('"')
              PsiElement())(')')
          PsiElement(;)(';')
          VAR_DECLARATION_LIST
            VAR_ACCESS_DECLARATION
              PsiElement(var)('var')
              COMPONENT_NAME
                ID
                  PsiElement(as)('as')
            VAR_INIT
              PsiElement(=)('=')
              STRING_LITERAL_EXPRESSION
                PsiElement(RAW_SINGLE_QUOTED_STRING)('r'not keyword'')
          PsiElement(;)(';')
          CALL_EXPRESSION
            REFERENCE_EXPRESSION
              REFERENCE_EXPRESSION
                ID
                  PsiElement(as)('as')
              PsiElement(.)('.')
              REFERENCE_EXPRESSION
                ID
                  PsiElement(IDENTIFIER)('split')
            ARGUMENTS
              PsiElement(()('(')
              ARGUMENT_LIST
                STRING_LITERAL_EXPRESSION
                  PsiElement(OPEN_QUOTE)('"')
                  PsiElement(REGULAR_STRING_PART)(' ')
                  PsiElement(CLOSING_QUOTE)('"')
              PsiElement())(')')
          PsiElement(;)(';')
          TRY_STATEMENT
            PsiElement(try)('try')
            BLOCK
              PsiElement({)('{')
              STATEMENTS
                CALL_EXPRESSION
                  REFERENCE_EXPRESSION
                    REFERENCE_EXPRESSION
                      ID
                        PsiElement(IDENTIFIER)('dispatcher')
                    PsiElement(.)('.')
                    REFERENCE_EXPRESSION
                      ID
                        PsiElement(on)('on')
                  ARGUMENTS
                    PsiElement(()('(')
                    ARGUMENT_LIST
                      FUNCTION_EXPRESSION
                        FORMAL_PARAMETER_LIST
                          PsiElement(()('(')
                          PsiElement())(')')
                        FUNCTION_EXPRESSION_BODY
                          PsiElement(=>)('=>')
                          CALL_EXPRESSION
                            REFERENCE_EXPRESSION
                              ID
                                PsiElement(IDENTIFIER)('print')
                            ARGUMENTS
                              PsiElement(()('(')
                              ARGUMENT_LIST
                                CALL_EXPRESSION
                                  REFERENCE_EXPRESSION
                                    ID
                                      PsiElement(IDENTIFIER)('foo')
                                  ARGUMENTS
                                    PsiElement(()('(')
                                    ARGUMENT_LIST
                                      STRING_LITERAL_EXPRESSION
                                        PsiElement(OPEN_QUOTE)(''')
                                        PsiElement(REGULAR_STRING_PART)('a')
                                        PsiElement(CLOSING_QUOTE)(''')
                                    PsiElement())(')')
                              PsiElement())(')')
                    PsiElement())(')')
                PsiElement(;)(';')
              PsiElement(})('}')
            ON_PART
              CATCH_PART
                PsiElement(catch)('catch')
                PsiElement(()('(')
                COMPONENT_NAME
                  ID
                    PsiElement(IDENTIFIER)('ex')
                PsiElement())(')')
              BLOCK
                PsiElement({)('{')
                STATEMENTS
                  <empty list>
                PsiElement(})('}')
            ON_PART
              CATCH_PART
                PsiElement(catch)('catch')
                PsiElement(()('(')
                COMPONENT_NAME
                  ID
                    PsiElement(IDENTIFIER)('e')
                PsiElement(,)(',')
                COMPONENT_NAME
                  ID
                    PsiElement(IDENTIFIER)('s')
                PsiElement())(')')
              BLOCK
                PsiElement({)('{')
                STATEMENTS
                  <empty list>
                PsiElement(})('}')
            ON_PART
              PsiElement(on)('on')
              TYPE
                SIMPLE_TYPE
                  REFERENCE_EXPRESSION
                    ID
                      PsiElement(IDENTIFIER)('IllegalArgumentException')
              BLOCK
                PsiElement({)('{')
                STATEMENTS
                  <empty list>
                PsiElement(})('}')
            ON_PART
              PsiElement(on)('on')
              TYPE
                SIMPLE_TYPE
                  REFERENCE_EXPRESSION
                    ID
                      PsiElement(IDENTIFIER)('IllegalArgumentException')
              CATCH_PART
                PsiElement(catch)('catch')
                PsiElement(()('(')
                COMPONENT_NAME
                  ID
                    PsiElement(IDENTIFIER)('e')
                PsiElement())(')')
              BLOCK
                PsiElement({)('{')
                STATEMENTS
                  <empty list>
                PsiElement(})('}')
            ON_PART
              PsiElement(on)('on')
              TYPE
                SIMPLE_TYPE
                  REFERENCE_EXPRESSION
                    ID
                      PsiElement(IDENTIFIER)('IllegalArgumentException')
              CATCH_PART
                PsiElement(catch)('catch')
                PsiElement(()('(')
                COMPONENT_NAME
                  ID
                    PsiElement(IDENTIFIER)('e')
                PsiElement(,)(',')
                COMPONENT_NAME
                  ID
                    PsiElement(IDENTIFIER)('s')
                PsiElement())(')')
              BLOCK
                PsiElement({)('{')
                STATEMENTS
                  <empty list>
                PsiElement(})('}')
          TRY_STATEMENT
            PsiElement(try)('try')
            BLOCK
              PsiElement({)('{')
              STATEMENTS
                <empty list>
              PsiElement(})('}')
            FINALLY_PART
              PsiElement(finally)('finally')
              BLOCK
                PsiElement({)('{')
                STATEMENTS
                  <empty list>
                PsiElement(})('}')
          TRY_STATEMENT
            PsiElement(try)('try')
            BLOCK
              PsiElement({)('{')
              STATEMENTS
                <empty list>
              PsiElement(})('}')
            ON_PART
              CATCH_PART
                PsiElement(catch)('catch')
                PsiElement(()('(')
                COMPONENT_NAME
                  ID
                    PsiElement(IDENTIFIER)('e')
                PsiElement())(')')
              BLOCK
                PsiElement({)('{')
                STATEMENTS
                  <empty list>
                PsiElement(})('}')
            FINALLY_PART
              PsiElement(finally)('finally')
              BLOCK
                PsiElement({)('{')
                STATEMENTS
                  <empty list>
                PsiElement(})('}')
          TRY_STATEMENT
            PsiElement(try)('try')
            BLOCK
              PsiElement({)('{')
              STATEMENTS
                <empty list>
              PsiElement(})('}')
            ON_PART
              CATCH_PART
                PsiElement(catch)('catch')
                PsiElement(()('(')
                COMPONENT_NAME
                  ID
                    PsiElement(IDENTIFIER)('e')
                PsiElement(,)(',')
                COMPONENT_NAME
                  ID
                    PsiElement(IDENTIFIER)('s')
                PsiElement())(')')
              BLOCK
                PsiElement({)('{')
                STATEMENTS
                  <empty list>
                PsiElement(})('}')
            FINALLY_PART
              PsiElement(finally)('finally')
              BLOCK
                PsiElement({)('{')
                STATEMENTS
                  <empty list>
                PsiElement(})('}')
          TRY_STATEMENT
            PsiElement(try)('try')
            BLOCK
              PsiElement({)('{')
              STATEMENTS
                <empty list>
              PsiElement(})('}')
            ON_PART
              PsiElement(on)('on')
              TYPE
                SIMPLE_TYPE
                  REFERENCE_EXPRESSION
                    ID
                      PsiElement(IDENTIFIER)('IllegalArgumentException')
              BLOCK
                PsiElement({)('{')
                STATEMENTS
                  <empty list>
                PsiElement(})('}')
            FINALLY_PART
              PsiElement(finally)('finally')
              BLOCK
                PsiElement({)('{')
                STATEMENTS
                  <empty list>
                PsiElement(})('}')
          TRY_STATEMENT
            PsiElement(try)('try')
            BLOCK
              PsiElement({)('{')
              STATEMENTS
                <empty list>
              PsiElement(})('}')
            ON_PART
              PsiElement(on)('on')
              TYPE
                SIMPLE_TYPE
                  REFERENCE_EXPRESSION
                    ID
                      PsiElement(IDENTIFIER)('IllegalArgumentException')
              CATCH_PART
                PsiElement(catch)('catch')
                PsiElement(()('(')
                COMPONENT_NAME
                  ID
                    PsiElement(IDENTIFIER)('e')
                PsiElement())(')')
              BLOCK
                PsiElement({)('{')
                STATEMENTS
                  <empty list>
                PsiElement(})('}')
            FINALLY_PART
              PsiElement(finally)('finally')
              BLOCK
                PsiElement({)('{')
                STATEMENTS
                  <empty list>
                PsiElement(})('}')
          TRY_STATEMENT
            PsiElement(try)('try')
            BLOCK
              PsiElement({)('{')
              STATEMENTS
                <empty list>
              PsiElement(})('}')
            ON_PART
              PsiElement(on)('on')
              TYPE
                SIMPLE_TYPE
                  REFERENCE_EXPRESSION
                    ID
                      PsiElement(IDENTIFIER)('IllegalArgumentException')
              CATCH_PART
                PsiElement(catch)('catch')
                PsiElement(()('(')
                COMPONENT_NAME
                  ID
                    PsiElement(IDENTIFIER)('e')
                PsiElement(,)(',')
                COMPONENT_NAME
                  ID
                    PsiElement(IDENTIFIER)('s')
                PsiElement())(')')
              BLOCK
                PsiElement({)('{')
                STATEMENTS
                  <empty list>
                PsiElement(})('}')
            FINALLY_PART
              PsiElement(finally)('finally')
              BLOCK
                PsiElement({)('{')
                STATEMENTS
                  <empty list>
                PsiElement(})('}')
        PsiElement(})('}')
  FUNCTION_DECLARATION_WITH_BODY_OR_NATIVE
    COMPONENT_NAME
      ID
        PsiElement(IDENTIFIER)('foo')
    FORMAL_PARAMETER_LIST
      PsiElement(()('(')
      NORMAL_FORMAL_PARAMETER
        SIMPLE_FORMAL_PARAMETER
          COMPONENT_NAME
            ID
              PsiElement(IDENTIFIER)('p')
      PsiElement())(')')
    FUNCTION_BODY
      LAZY_PARSEABLE_BLOCK
        PsiElement({)('{')
        STATEMENTS
          VAR_DECLARATION_LIST
            VAR_ACCESS_DECLARATION
              PsiElement(var)('var')
              COMPONENT_NAME
                ID
                  PsiElement(IDENTIFIER)('a')
            VAR_INIT
              PsiElement(=)('=')
              AS_EXPRESSION
                REFERENCE_EXPRESSION
                  ID
                    PsiElement(IDENTIFIER)('p')
                PsiElement(as)('as')
                TYPE
                  SIMPLE_TYPE
                    REFERENCE_EXPRESSION
                      ID
                        PsiElement(IDENTIFIER)('int')
          PsiElement(;)(';')
          RETURN_STATEMENT
            PsiElement(return)('return')
            ADDITIVE_EXPRESSION
              REFERENCE_EXPRESSION
                ID
                  PsiElement(IDENTIFIER)('a')
              ADDITIVE_OPERATOR
                PsiElement(+)('+')
              LITERAL_EXPRESSION
                PsiElement(NUMBER)('3')
            PsiElement(;)(';')
        PsiElement(})('}')
  GETTER_DECLARATION
    RETURN_TYPE
      TYPE
        SIMPLE_TYPE
          REFERENCE_EXPRESSION
            ID
              PsiElement(IDENTIFIER)('int')
    PsiElement(get)('get')
    COMPONENT_NAME
      ID
        PsiElement(IDENTIFIER)('theAnswer')
    FUNCTION_BODY
      PsiElement(=>)('=>')
      LITERAL_EXPRESSION
        PsiElement(NUMBER)('42')
      PsiElement(;)(';')
  CLASS_DEFINITION
    PsiElement(class)('class')
    COMPONENT_NAME
      ID
        PsiElement(IDENTIFIER)('MagicNumber')
    CLASS_BODY
      PsiElement({)('{')
      CLASS_MEMBERS
        METHOD_DECLARATION
          RETURN_TYPE
            TYPE
              SIMPLE_TYPE
                REFERENCE_EXPRESSION
                  ID
                    PsiElement(IDENTIFIER)('bool')
          PsiElement(operator)('operator')
          COMPONENT_NAME
            ID
              PsiElement(IDENTIFIER)('==')
          FORMAL_PARAMETER_LIST
            PsiElement(()('(')
            NORMAL_FORMAL_PARAMETER
              SIMPLE_FORMAL_PARAMETER
                COMPONENT_NAME
                  ID
                    PsiElement(IDENTIFIER)('other')
            PsiElement())(')')
          FUNCTION_BODY
            PsiElement(=>)('=>')
            LITERAL_EXPRESSION
              PsiElement(null)('null')
            PsiElement(;)(';')
        METHOD_DECLARATION
          RETURN_TYPE
            TYPE
              SIMPLE_TYPE
                REFERENCE_EXPRESSION
                  ID
                    PsiElement(IDENTIFIER)('MagicNumber')
          PsiElement(operator)('operator')
          COMPONENT_NAME
            ID
              PsiElement(IDENTIFIER)('-')
          FORMAL_PARAMETER_LIST
            PsiElement(()('(')
            PsiElement())(')')
          FUNCTION_BODY
            PsiElement(=>)('=>')
            LITERAL_EXPRESSION
              PsiElement(null)('null')
            PsiElement(;)(';')
        PsiComment(SINGLE_LINE_COMMENT)('// unary negate')
        METHOD_DECLARATION
          RETURN_TYPE
            TYPE
              SIMPLE_TYPE
                REFERENCE_EXPRESSION
                  ID
                    PsiElement(IDENTIFIER)('MagicNumber')
          PsiElement(operator)('operator')
          COMPONENT_NAME
            ID
              PsiElement(IDENTIFIER)('-')
          FORMAL_PARAMETER_LIST
            PsiElement(()('(')
            NORMAL_FORMAL_PARAMETER
              SIMPLE_FORMAL_PARAMETER
                COMPONENT_NAME
                  ID
                    PsiElement(IDENTIFIER)('other')
            PsiElement())(')')
          FUNCTION_BODY
            PsiElement(=>)('=>')
            LITERAL_EXPRESSION
              PsiElement(null)('null')
            PsiElement(;)(';')
      PsiComment(SINGLE_LINE_COMMENT)('// infix minus')
      PsiElement(})('}')
  FUNCTION_DECLARATION_WITH_BODY_OR_NATIVE
    COMPONENT_NAME
      ID
        PsiElement(IDENTIFIER)('display')
    FORMAL_PARAMETER_LIST
      PsiElement(()('(')
      NORMAL_FORMAL_PARAMETER
        SIMPLE_FORMAL_PARAMETER
          COMPONENT_NAME
            ID
              PsiElement(IDENTIFIER)('arg')
      PsiElement())(')')
    FUNCTION_BODY
      PsiElement(=>)('=>')
      CALL_EXPRESSION
        REFERENCE_EXPRESSION
          ID
            PsiElement(IDENTIFIER)('print')
        ARGUMENTS
          PsiElement(()('(')
          ARGUMENT_LIST
            REFERENCE_EXPRESSION
              ID
                PsiElement(IDENTIFIER)('arg')
          PsiElement())(')')
      PsiElement(;)(';')
  FUNCTION_DECLARATION_WITH_BODY_OR_NATIVE
    COMPONENT_NAME
      ID
        PsiElement(IDENTIFIER)('enableFlags1')
    FORMAL_PARAMETER_LIST
      PsiElement(()('(')
      OPTIONAL_FORMAL_PARAMETERS
        PsiElement([)('[')
        DEFAULT_FORMAL_NAMED_PARAMETER
          NORMAL_FORMAL_PARAMETER
            SIMPLE_FORMAL_PARAMETER
              TYPE
                SIMPLE_TYPE
                  REFERENCE_EXPRESSION
                    ID
                      PsiElement(IDENTIFIER)('bool')
              COMPONENT_NAME
                ID
                  PsiElement(IDENTIFIER)('bold')
        PsiElement(,)(',')
        DEFAULT_FORMAL_NAMED_PARAMETER
          NORMAL_FORMAL_PARAMETER
            SIMPLE_FORMAL_PARAMETER
              TYPE
                SIMPLE_TYPE
                  REFERENCE_EXPRESSION
                    ID
                      PsiElement(IDENTIFIER)('bool')
              COMPONENT_NAME
                ID
                  PsiElement(IDENTIFIER)('hidden')
        PsiElement(])(']')
      PsiElement())(')')
    FUNCTION_BODY
      LAZY_PARSEABLE_BLOCK
        PsiElement({)('{')
        PsiComment(SINGLE_LINE_COMMENT)('// ...')
        STATEMENTS
          <empty list>
        PsiElement(})('}')
  FUNCTION_DECLARATION_WITH_BODY_OR_NATIVE
    COMPONENT_NAME
      ID
        PsiElement(IDENTIFIER)('enableFlags2')
    FORMAL_PARAMETER_LIST
      PsiElement(()('(')
      NORMAL_FORMAL_PARAMETER
        SIMPLE_FORMAL_PARAMETER
          TYPE
            SIMPLE_TYPE
              REFERENCE_EXPRESSION
                ID
                  PsiElement(IDENTIFIER)('bool')
          COMPONENT_NAME
            ID
              PsiElement(IDENTIFIER)('test')
      PsiElement(,)(',')
      OPTIONAL_FORMAL_PARAMETERS
        PsiElement({)('{')
        DEFAULT_FORMAL_NAMED_PARAMETER
          NORMAL_FORMAL_PARAMETER
            SIMPLE_FORMAL_PARAMETER
              TYPE
                SIMPLE_TYPE
                  REFERENCE_EXPRESSION
                    ID
                      PsiElement(IDENTIFIER)('bool')
              COMPONENT_NAME
                ID
                  PsiElement(IDENTIFIER)('bold')
        PsiElement(,)(',')
        DEFAULT_FORMAL_NAMED_PARAMETER
          NORMAL_FORMAL_PARAMETER
            SIMPLE_FORMAL_PARAMETER
              TYPE
                SIMPLE_TYPE
                  REFERENCE_EXPRESSION
                    ID
                      PsiElement(IDENTIFIER)('bool')
              COMPONENT_NAME
                ID
                  PsiElement(IDENTIFIER)('hidden')
          PsiElement(:)(':')
          LITERAL_EXPRESSION
            PsiElement(true)('true')
        PsiElement(})('}')
      PsiElement())(')')
    FUNCTION_BODY
      LAZY_PARSEABLE_BLOCK
        PsiElement({)('{')
        PsiComment(SINGLE_LINE_COMMENT)('// ...')
        STATEMENTS
          <empty list>
        PsiElement(})('}')